/*
To build the xsl.vtg tag file, execute the following command from the SlickEdit command line.

   make-tags f:\vslick70\builtins\html.tagdoc f:\vslick70\builtins\xml.tagdoc f:\vslick70\builtins\xsl.tagdoc -o f:\vslick70\tagfiles\xsl.vtg



This Version#    http://www.w3.org/TR/1999/REC-xslt-19991116
Lastest Version#   http://www.w3.org/TR/xslt
*/
tag "xsl:apply-imports" (empty);
tag "xsl:apply-templates"  {
   attr select;
   attr mode;
}
tag "xsl:attribute"  {
   attr name;
   attr namespace;
   attr "xml:space";
}
tag "xsl:attribute-set"  {
   attr name;
   attr "use-attribute-sets";
}
tag "xsl:call-template"  (empty) {
   attr name;
}
tag "xsl:choose" {
   attr "xml:space";
}

tag "xsl:comment" {
   attr "xml:space";
}
tag "xsl:copy"  {
   attr "use-attribute-sets";
   attr "xml:space";
}
tag "xsl:copy-of" (empty){
   attr select;
}
tag "xsl:decimal-format" (empty) {
   attr NaN;
   attr name;
   attr "decimal-separator";
   attr "digit";
   attr "grouping-separator";
   attr "infinity";
   attr "minus-sign";
   attr "pattern-separator";
   attr "per-mile";
   attr "percent";
   attr "zero-digit";
}
tag "xsl:element"  {
   attr name;
   attr "use-attribute-sets";
   attr namespace;
   attr "xml:space";
}
tag "xsl:eval" (empty) {  // ?new
   attr "language";
}

tag "xsl:for-each"  {
   attr select;
   attr "xml:space";
}
tag "xsl:fallback" {
   attr "xml:space";
}
tag "xsl:if"  {
   attr "test";
   attr "xml:space";
}
tag "xsl:import" (empty) {
   attr "href";
}
tag "xsl:include" (empty) {
   attr "href";
}
tag "xsl:key" (empty) {
   attr "match";
   attr "name";
   attr "use";
}
tag "xsl:message" {
   attr "terminate" {
      "yes"
      "no"
   }
   attr "xml:space";
}
tag "xsl:namespace-alias" (empty) {
   attr "result-prefix" {
      "#default"
   }
   attr "stylesheet-prefix" {
      "#default"
   }
}
tag "xsl:number" (empty) {
   attr "count";
   attr "format";
   attr "from";
   attr "grouping-separator";
   attr "grouping-size";
   attr "lang";
   attr "letter-value";
   attr "level" {
      "single"
      "multiple"
      "any"
   }
   attr "value";
}
tag "xsl:otherwise" {
   attr "xml:space";
}
tag "xsl:output" (empty) {
   attr method {
      "xml"
      "html"
      "text"
   }
   attr version {
      "1.0"
   }
   attr encoding {
      "UTF-8"
      "UTF-16"
      "ISO-10646-UCS-2"
      "ISO-10646-UCS-4"
      "ISO-8859-"
      "ISO-8859-1"
      "ISO-8859-2"
      "ISO-8859-3"
      "ISO-8859-4"
      "ISO-8859-5"
      "ISO-8859-6"
      "ISO-8859-7"
      "ISO-8859-8"
      "ISO-8859-9"
      "ISO-8859-10"
      "ISO-2022-JP"
      "Shift_JIS"
      "EUC-JP"
      "windows-1252"
   }
   attr "omit-xml-declaration" {
      "yes"
      "no"
   }
   attr standalone {
      "yes"
      "no"
   }
   attr "cdata-section-elements";
   attr indent {
      "yes"
      "no"
   }
   attr "doctype-public";
   attr "doctype-system";
   attr "media-type";
}
tag "xsl:param" {
   attr "name";
   attr "expr";
   attr "select";
}
tag "xsl:preserve-space" (empty) {
   attr "elements";
}
tag "xsl:processing-instruction" {
   attr "name";
   attr "xml:space";
}
tag "xsl:script" (empty) {  // ?new.  Don't know if this is empty!!!!
   attr "language";
}
tag "xsl:sort"  (empty){
   attr lang;
   attr "data-type";
   attr order {
      "ascending"
      "descending"
   }
   attr "case-order" {
      "upper-first"
      "lower-first"
   }
   attr "select";
}
tag "xsl:strip-space" (empty) {
   attr "elements";
}
tag "xsl:stylesheet"  {
   attr version {
      "1.0"
   }
   attr "xmlns:xsl" {
      "http://www.w3.org/1999/XSL/Transform"
   }
   attr "exclude-result-prefixes";
   attr "extension-element-prefixes";
   attr "id";
   attr "xml:space";
}
tag "xsl:template" {
   attr match;
   attr name;
   attr priority;
   attr mode;
   attr "xml:space";
}
tag "xsl:text"  {
   attr disable-output-escaping {
      "yes"
      "no"
   }
}
tag "xsl:transform" {
   attr version {
      "1.0"
   }
   attr "xmlns:xsl" {
      "http://www.w3.org/1999/XSL/Transform"
   }
   attr "exclude-result-prefixes";
   attr "extension-element-prefixes";
   attr "id";
   attr "xml:space";
}

tag "xsl:value-of" (empty) {
   attr select;
   attr "disable-output-escaping" {
      "yes"
      "no"
   }
}
tag "xsl:variable"  {
   attr "name";
   attr "expr";  //?new but makes sense
   attr "select";
}
tag "xsl:when"  {
   attr "test";
   attr "xml:space";
}
tag "xsl:with-param" {
   attr "name";
   attr "select";
}
