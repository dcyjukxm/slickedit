()|,



X11R6 and Xt Libraries
BitmapBitOrder00tbDisplay *displayDisplay *display	// Specifies the connection to the X server.
BitmapPad00tbDisplay *displayDisplay *display	// Specifies the connection to the X server.
BitmapUnit00tbDisplay *displayDisplay *display	// Specifies the connection to the X server.
BlackPixel00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbintscreen_numberint screen_number	// Specifies the appropriate screen number on the ...
BlackPixelOfScreen00tbScreen *screenScreen *screen	// Specifies the appropriate Screen structure.
CellsOfScreen00tbScreen *screenScreen *screen	// Specifies the appropriate Screen structure.
ClientWhitePointOfCCC00tbXcmsCCCcccXcmsCCC ccc	// Specifies the CCC.
ConnectionNumber00tbDisplay *displayDisplay *display	// Specifies the connection to the X server.
DefaultColormap00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbintscreen_numberint screen_number	// Specifies the appropriate screen number on the ...
DefaultColormapOfScreen00tbScreen *screenScreen *screen	// Specifies the appropriate Screen structure.
DefaultDepth00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbintscreen_numberint screen_number	// Specifies the appropriate screen number on the ...
DefaultDepthOfScreen00tbScreen *screenScreen *screen	// Specifies the appropriate Screen structure.
DefaultGC00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbintscreen_numberint screen_number	// Specifies the appropriate screen number on the ...
DefaultGCOfScreen00tbScreen *screenScreen *screen	// Specifies the appropriate Screen structure.
DefaultRootWindow00tbDisplay *displayDisplay *display	// Specifies the connection to the X server.
DefaultRootWindow00tbDisplay *displayDisplay *display	// Specifies the connection to the X server.
DefaultScreen00tbDisplay *displayDisplay *display	// Specifies the connection to the X server.
DefaultScreenOfDisplay00tbDisplay *displayDisplay *display	// Specifies the connection to the X server.
DefaultVisual00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbintscreen_numberint screen_number	// Specifies the appropriate screen number on the ...
DefaultVisualOfScreen00tbScreen *screenScreen *screen	// Specifies the appropriate Screen structure.
DisplayCells00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbintscreen_numberint screen_number	// Specifies the appropriate screen number on the ...
DisplayHeight00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbintscreen_numberint screen_number	// Specifies the appropriate screen number on the ...
DisplayHeightMM00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbintscreen_numberint screen_number	// Specifies the appropriate screen number on the ...
DisplayOfCCC00tbXcmsCCCcccXcmsCCC ccc	// Specifies the CCC.
DisplayOfScreen00tbScreen *screenScreen *screen	// Specifies the appropriate Screen structure.
DisplayPlanes00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbintscreen_numberint screen_number	// Specifies the appropriate screen number on the ...
DisplayString00tbDisplay *displayDisplay *display	// Specifies the connection to the X server.
DisplayWidth00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbintscreen_numberint screen_number	// Specifies the appropriate screen number on the ...
DisplayWidthMM00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbintscreen_numberint screen_number	// Specifies the appropriate screen number on the ...
DoesBackingStore00tbScreen *screenScreen *screen	// Specifies the appropriate Screen structure.
DoesSaveUnders00tbScreen *screenScreen *screen	// Specifies the appropriate Screen structure.
EventMaskOfScreen00tbScreen *screenScreen *screen	// Specifies the appropriate Screen structure.
HeightMMOfScreen00tbScreen *screenScreen *screen	// Specifies the appropriate Screen structure.
HeightOfScreen00tbScreen *screenScreen *screen	// Specifies the appropriate Screen structure.
ImageByteOrder00tbDisplay *displayDisplay *display	// Specifies the connection to the X server.
IsCursorKey00tbKeySymkeysymKeySym keysym	// Specifies the KeySym that is to be tested.
IsFunctionKey00tbKeySymkeysymKeySym keysym	// Specifies the KeySym that is to be tested.
IsKeypadKey00tbKeySymkeysymKeySym keysym	// Specifies the KeySym that is to be tested.
IsMiscFunctionKey00tbKeySymkeysymKeySym keysym	// Specifies the KeySym that is to be tested.
IsModifierKey00tbKeySymkeysymKeySym keysym	// Specifies the KeySym that is to be tested.
IsPFKey00tbKeySymkeysymKeySym keysym	// Specifies the KeySym that is to be tested.
IsPrivateKeypadKey00tbKeySymkeysymKeySym keysym	// Specifies the KeySym that is to be tested.
LastKnownRequestProcessed00tbDisplay *displayDisplay *display	// Specifies the connection to the X server.
MaxCmapsOfScreen00tbScreen *screenScreen *screen	// Specifies the appropriate Screen structure.
MenuPopdownvoid00tbStringshell_nameString shell_name	// Specifies the name of the widget shell to pop ...
MenuPopupvoid00tbStringshell_nameString shell_name	// Specifies the shell name ...
MinCmapsOfScreen00tbScreen *screenScreen *screen	// Specifies the appropriate Screen structure.
NextRequest00tbDisplay *displayDisplay *display	// Specifies the connection to the X server.
PlanesOfScreen00tbScreen *screenScreen *screen	// Specifies the appropriate Screen structure.
ProtocolRevision00tbDisplay *displayDisplay *display	// Specifies the connection to the X server.
ProtocolVersion00tbDisplay *displayDisplay *display	// Specifies the connection to the X server.
QLength00tbDisplay *displayDisplay *display	// Specifies the connection to the X server.
RootWindow00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbintscreen_numberint screen_number	// Specifies the appropriate screen number on the ...
RootWindowOfScreen00tbScreen *screenScreen *screen	// Specifies the appropriate Screen structure.
ScreenCount00tbDisplay *displayDisplay *display	// Specifies the connection to the X server.
ScreenNumberOfCCC00tbXcmsCCCcccXcmsCCC ccc	// Specifies the CCC.
ScreenOfDisplay00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbintscreen_numberint screen_number	// Specifies the appropriate screen number on the ...
ScreenWhitePointOfCCC00tbXcmsCCCcccXcmsCCC ccc	// Specifies the CCC.
ServerVendor00tbDisplay *displayDisplay *display	// Specifies the connection to the X server.
VendorRelease00tbDisplay *displayDisplay *display	// Specifies the connection to the X server.
VisualOfCCC00tbXcmsCCCcccXcmsCCC ccc	// Specifies the CCC.
WhitePixel00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbintscreen_numberint screen_number	// Specifies the appropriate screen number on the ...
WhitePixelOfScreen00tbScreen *screenScreen *screen	// Specifies the appropriate Screen structure.
WidthMMOfScreen00tbScreen *screenScreen *screen	// Specifies the appropriate Screen structure.
WidthOfScreen00tbScreen *screenScreen *screen	// Specifies the appropriate Screen structure.
XActivateScreenSaver00tbDisplay *displayDisplay *display	// Specifies the connection to the X server.
XAddConnectionWatchStatus00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbXWatchProcprocedureXWatchProc procedure,	// Specifies the procedure to be called.tbXPointerclient_dataXPointer client_data	// Specifies the additional client data.
XAddHost00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbXHostAddress *hostXHostAddress *host	// Specifies the host that is to be added or ...
XAddHosts00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbXHostAddress *hostsXHostAddress *hosts,	// Specifies each host that is to be added or ...tbintnum_hostsint num_hosts	// Specifies the number of hosts.
XAddPixel00tbXImage *ximageXImage *ximage,	// Specifies the image.tblongvaluelong value	// Specifies the constant value that is to be ...
XAddToSaveSet00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbWindowwWindow w	// Specifies the window that you want to add or ...
XAllocClassHintXClassHint *00
XAllocColorStatus00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbColormapcolormapColormap colormap,	// Specifies the colormap.tbXColor *screen_in_outXColor *screen_in_out	// Specifies and returns the values actually used ...
XAllocColorCellsStatus00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbColormapcolormapColormap colormap,	// Specifies the colormap.tbBoolcontigBool contig,	// Specifies a Boolean value that indicates whether ...tbunsigned long []plane_mask_returnunsigned long plane_mask_return[],	// Returns an array of plane masks.tbunsigned intnplanesunsigned int nplanes,	// Specifies the number of plane masks that are to ...tbunsigned long []pixels_returnunsigned long pixels_return[],	// Returns an array of pixel values.tbunsigned intnpixelsunsigned int npixels	// Specifies the number of pixels.
XAllocColorPlanesStatus00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbColormapcolormapColormap colormap,	// Specifies the colormap.tbBoolcontigBool contig,	// Specifies a Boolean value that indicates whether ...tbunsigned long []pixels_returnunsigned long pixels_return[],	// Returns an array of pixel values.tbintncolorsint ncolors,	// Specifies the number of pixel values that are to ...tbintnredsint nreds,	// Specify the number of red, green, ...tbintngreensint ngreens,	// Specify the number of red, green, ...tbintnbluesint nblues,	// Specify the number of red, green, ...tbunsigned long *rmask_returnunsigned long * rmask_return,	// Return bit masks for the red, green, ...tbunsigned long *gmask_returnunsigned long * gmask_return,	// Return bit masks for the red, green, ...tbunsigned long *bmask_returnunsigned long * bmask_return	// Return bit masks for the red, green, ...
XAllocIconSizeXIconSize *00
XAllocNamedColorStatus00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbColormapcolormapColormap colormap,	// Specifies the colormap.tbchar *color_namechar *color_name,	// Specifies the color name string (for example, ...tbXColor *screen_def_returnXColor * screen_def_return,	// Returns the closest RGB values provided by the ...tbXColor *exact_def_returnXColor * exact_def_return	// Returns the exact RGB values.
XAllocSizeHintsXSizeHints *00
XAllocStandardColormapXStandardColormap *00
XAllocWMHintsXWMHints *00
XAllowDeviceEventsXAllowDeviceEvents00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbXDevice *deviceXDevice *device,	// Specifies  the device from which events are to ...rbintAsyncThisDeviceSyncThisDeviceReplayThisDeviceAsyncOtherDevicesSyncAllAsyncAllint event_mode,	// Specifies the event mode.tbTimetimeTime time	// Specifies the time.
XAllowEventsXAllowEvents00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.rbintAsyncThisDeviceSyncThisDeviceReplayThisDeviceAsyncOtherDevicesSyncAllAsyncAllint event_mode,	// Specifies the event mode.tbTimetimeTime time	// Specifies the time.
XAutoRepeatOffXAutoRepeatOff00tbDisplay *displayDisplay *display	// Specifies the connection to the X server.
XAutoRepeatOnXAutoRepeatOn00tbDisplay *displayDisplay *display	// Specifies the connection to the X server.
XBaseFontNameListOfFontSetchar *00tbXFontSetfont_setXFontSet font_set	// Specifies the font set.
XBellXBell00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbintpercentint percent	// Specifies the volume for the bell, ...
XChangeActivePointerGrabXChangeActivePointerGrab00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbunsigned intevent_maskunsigned int event_mask,	// Specifies which pointer events are reported to ...tbCursorcursorCursor cursor,	// Specifies the cursor that is to be displayed ...tbTimetimeTime time	// Specifies the time.
XChangeDeviceControlint00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbXDevice *deviceXDevice *device,	// Specifies the device whose control is to be ...tbintcontrolTypeint controlType,	// Specifies  the type of control to be  ...tbXDeviceControl *controlXDeviceControl *control	// Specifies the address of an  XDeviceControl ...
XChangeDeviceDontPropagateListXChangeDeviceDontPropagateList00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbWindow *windowWindow *window,	// Specifies the window whose dont-propagate-list ...tbint *countint *count,	// Specifies the number of event classes  in  the ...tbXEventClass *event_listXEventClass *event_list,	// Specifies  a  pointer  to  a  list  of   event ...rbintAddToListDeleteFromListint mode	// Specifies  the mode.
XChangeDeviceKeyMappingXChangeDeviceKeyMapping00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbXDevice *deviceXDevice *device,	// Specifies  the  device whose key mapping is to ...tbintfirst_keycodeint first_keycode,	// Specifies the first KeyCode to be returned.tbintkeysyms_per_keycodeint keysyms_per_keycode,	// Specifies the number of KeySyms per KeyCode.tbKeySym *keysymsKeySym *keysyms,	// Specifies  the address of an array of KeySyms.tbintkeycode_countint keycode_count	// Specifies  the  number  of  KeyCodes   to   be ...
XChangeFeedbackControlint00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbXDevice *deviceXDevice *device,	// Specifies the device whose feedbacks are to ...tbMaskmaskMask mask,	// Specifies  a  mask specific to each type of ...tbXFeedbackControl *controlXFeedbackControl *control	// Specifies  the  address of an  ...
XChangeGCXChangeGC00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbGCgcGC gc,	// Specifies the GC.xbunsigned longGCFunction           GCPlaneMask          GCForeground         GCBackground         GCLineWidth          GCLineStyle          GCCapStyle           GCJoinStyle          GCFillStyle          GCFillRule           GCTile               GCStipple            GCTileStipXOrigin    GCTileStipYOrigin    GCFont               GCSubwindowMode      GCGraphicsExposures  GCClipXOrigin        GCClipYOrigin        GCClipMask           GCDashOffset         GCDashList           GCArcMode            unsigned long valuemask,	// Specifies which components in the GC are to be ...tbXGCValues *valuesXGCValues *values	// Specifies any values as specified by the  ...
XChangeKeyboardControlXChangeKeyboardControl00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.xbunsigned longKBKeyClickPercent KBBellPercent     KBBellPitch       KBBellDuration    KBLed             KBLedMode         KBKey             KBAutoRepeatMode  unsigned long value_mask,	// Specifies which controls to change.tbXKeyboardControl *valuesXKeyboardControl *values	// Specifies one value for each bit set to 1 in the ...
XChangeKeyboardDeviceStatus00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbXDevice *deviceXDevice *device	// Specifies the device to be used as the X   ...
XChangeKeyboardMappingXChangeKeyboardMapping00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbintfirst_keycodeint first_keycode,	// Specifies the first KeyCode that is to be ...tbintkeysyms_per_keycodeint keysyms_per_keycode,	// Specifies the number of KeySyms per KeyCode.tbKeySym *keysymsKeySym *keysyms,	// Specifies an array of KeySyms.tbintnum_codesint num_codes	// Specifies the number of KeyCodes that are to be ...
XChangePointerControlXChangePointerControl00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbBooldo_accelBool do_accel,	// Specifies a Boolean value that controls whether ...tbBooldo_thresholdBool do_threshold,	// Specifies a Boolean value that controls whether ...tbintaccel_numeratorint accel_numerator,	// Specifies the numerator for the acceleration ...tbintaccel_denominatorint accel_denominator,	// Specifies the denominator for the acceleration ...tbintthresholdint threshold	// Specifies the acceleration threshold.
XChangePointerDeviceStatus00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbXDevice *deviceXDevice *device,	// Specifies the device  to  be  used  as  the  X ...tbintxaxisint xaxis,	// Specifies the axis of the device to be used as ...tbintyaxisint yaxis	// Specifies the axis of the device to be used as ...
XChangePropertyXChangeProperty00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbWindowwWindow w,	// Specifies the window whose property you want to ...tbAtompropertyAtom property,	// Specifies the property name.tbAtomtypeAtom type,	// Specifies the type of the property.tbintformatint format,	// Specifies whether the data should be viewed as a ...rbintPropModeReplacePropModePrependPropModeAppendint mode,	// Specifies the mode of the operation.tbunsigned char *dataunsigned char *data,	// Specifies the property data.tbintnelementsint nelements	// Specifies the number of elements of the  ...
XChangeSaveSetXChangeSaveSet00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbWindowwWindow w,	// Specifies the window that you want to add or ...rbintSetModeInsertSetModeDeleteint change_mode	// Specifies the mode.
XChangeWindowAttributesXChangeWindowAttributes00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbWindowwWindow w,	// Specifies the window.xbunsigned longCWBackPixmap        CWBackPixel         CWBorderPixmap      CWBorderPixel       CWBitGravity        CWWinGravity        CWBackingStore      CWBackingPlanes     CWBackingPixel      CWOverrideRedirect  CWSaveUnder         CWEventMask         CWDontPropagate     CWColormap          CWCursor            unsigned long valuemask,	// Specifies which window attributes are defined in ...tbXSetWindowAttributes *attributesXSetWindowAttributes *attributes	// Specifies the structure from which the values ...
XCheckIfEventBool00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbXEvent *event_returnXEvent *event_return,	// Returns either a copy of or  the matched event's ...tbBool (*)()predicateBool (*predicate)(),	// Specifies the procedure that is to be called to ...tbXPointerargXPointer arg	// Specifies the user-supplied argument that will ...
XCheckMaskEventBool00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.xblongNoEventMaskKeyPressMaskKeyReleaseMaskButtonPressMaskButtonReleaseMaskEnterWindowMaskLeaveWindowMaskPointerMotionMaskPointerMotionHintMaskButton1MotionMaskButton2MotionMaskButton3MotionMaskButton4MotionMaskButton5MotionMaskButtonMotionMaskKeymapStateMaskExposureMaskVisibilityChangeMaskStructureNotifyMaskResizeRedirectMaskSubstructureNotifyMaskSubstructureRedirectMaskFocusChangeMaskPropertyChangeMaskColormapChangeMaskOwnerGrabButtonMasklong event_mask,	// Specifies the event mask.tbXEvent *event_returnXEvent *event_return	// Returns the matched event's associated  ...
XCheckTypedEventBool00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.rbintKeyPressKeyReleaseButtonPressButtonReleaseMotionNotifyEnterNotifyLeaveNotifyFocusInFocusOutKeymapNotifyExposeGraphicsExposeNoExposeVisibilityNotifyCreateNotifyDestroyNotifyUnmapNotifyMapNotifyMapRequestReparentNotifyConfigureNotifyConfigureRequestGravityNotifyResizeRequestCirculateNotifyCirculateRequestPropertyNotifySelectionClearSelectionRequestSelectionNotifyColormapNotifyClientMessageMappingNotifyint event_type,	// Specifies the event type to be compared.tbXEvent *event_returnXEvent *event_return	// Returns the matched event's associated  ...
XCheckTypedWindowEventBool00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbWindowwWindow w,	// Specifies the window  whose event uou are  ...rbintKeyPressKeyReleaseButtonPressButtonReleaseMotionNotifyEnterNotifyLeaveNotifyFocusInFocusOutKeymapNotifyExposeGraphicsExposeNoExposeVisibilityNotifyCreateNotifyDestroyNotifyUnmapNotifyMapNotifyMapRequestReparentNotifyConfigureNotifyConfigureRequestGravityNotifyResizeRequestCirculateNotifyCirculateRequestPropertyNotifySelectionClearSelectionRequestSelectionNotifyColormapNotifyClientMessageMappingNotifyint event_type,	// Specifies the event type to be compared.tbXEvent *event_returnXEvent *event_return	// Returns the matched event's associated  ...
XCheckWindowEventBool00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbWindowwWindow w,	// Specifies the window  whose event uou are  ...xblongNoEventMaskKeyPressMaskKeyReleaseMaskButtonPressMaskButtonReleaseMaskEnterWindowMaskLeaveWindowMaskPointerMotionMaskPointerMotionHintMaskButton1MotionMaskButton2MotionMaskButton3MotionMaskButton4MotionMaskButton5MotionMaskButtonMotionMaskKeymapStateMaskExposureMaskVisibilityChangeMaskStructureNotifyMaskResizeRedirectMaskSubstructureNotifyMaskSubstructureRedirectMaskFocusChangeMaskPropertyChangeMaskColormapChangeMaskOwnerGrabButtonMasklong event_mask,	// Specifies the event mask.tbXEvent *event_returnXEvent *event_return	// Returns the matched event's associated  ...
XCirculateSubwindowsXCirculateSubwindows00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbWindowwWindow w,	// Specifies the window.xbintRaiseLowestLowerHighestint direction	// Specifies the direction (up or down) that you ...
XCirculateSubwindowsDownXCirculateSubwindowsDown00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbWindowwWindow w	// Specifies the window.
XCirculateSubwindowsUpXCirculateSubwindowsUp00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbWindowwWindow w	// Specifies the window.
XClearAreaXClearArea00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbWindowwWindow w,	// Specifies the window.tbintxint x,	// Specify the x and y coordinates, ...tbintyint y,	// Specify the x and y coordinates, ...tbunsigned intwidthunsigned int width,	// Specify the width and height, ...tbunsigned intheightunsigned int height,	// Specify the width and height, ...tbBoolexposuresBool exposures	// Specifies a Boolean value that indicates if ...
XClearWindowXClearWindow00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbWindowwWindow w	// Specifies the window.
XClipBoxXClipBox00tbRegionrRegion r,	// Specifies the region.tbXRectangle *rect_returnXRectangle *rect_return	// Returns the smallest enclosing rectangle.
XCloseDeviceXCloseDevice00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbXDevice *deviceXDevice *device	// Specifies the device to be closed ...
XCloseDisplayXCloseDisplay00tbDisplay *displayDisplay *display	// Specifies the connection to the X server.
XCloseIMStatus00tbXIMimXIM im	// Specifies the input method.
XCloseOMStatus00tbXOMomXOM om	// Specifies the output method.
XcmsAllocColorStatus00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbColormapcolormapColormap colormap,	// Specifies the colormap.tbXcmsColor *color_in_outXcmsColor *color_in_out,	// Specifies the color to allocate and returns the ...tbXcmsColorFormatresult_formatXcmsColorFormat result_format	// Specifies the color format for the returned ...
XcmsAllocNamedColorStatus00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbColormapcolormapColormap colormap,	// Specifies the colormap.tbchar *color_stringchar *color_string,	// Specifies the color string whose color  ...tbXcmsColor *color_screen_returnXcmsColor *color_screen_return,	// Returns the pixel value of the color cell and ...tbXcmsColor *color_exact_returnXcmsColor *color_exact_return,	// Returns the color specification parsed from the ...tbXcmsColorFormatresult_formatXcmsColorFormat result_format	// Specifies the color format for the returned ...
XcmsCIELabQueryMaxCStatus00tbXcmsCCCcccXcmsCCC ccc,	// Specifies the CCC.tbXcmsFloathue_angleXcmsFloat hue_angle,	// Specifies the hue angle (in degrees) at which to ...tbXcmsFloatL_starXcmsFloat L_star,	// Specifies the lightness (L*) at which to find ...tbXcmsColor *color_returnXcmsColor *color_return	// Returns the CIE L*a*b* coordinates of maximum ...
XcmsCIELabQueryMaxLStatus00tbXcmsCCCcccXcmsCCC ccc,	// Specifies the CCC.tbXcmsFloathue_angleXcmsFloat hue_angle,	// Specifies the hue angle (in degrees) at which to ...tbXcmsFloatchromaXcmsFloat chroma,	// Specifies the chroma at which to find maximum ...tbXcmsColor *color_returnXcmsColor *color_return	// Returns the CIE L*a*b* coordinates of maximum ...
XcmsCIELabQueryMaxLCStatus00tbXcmsCCCcccXcmsCCC ccc,	// Specifies the CCC.tbXcmsFloathue_angleXcmsFloat hue_angle,	// Specifies the hue angle (in degrees) at which to ...tbXcmsColor *color_returnXcmsColor *color_return	// Returns the CIE L*a*b* coordinates of maximum ...
XcmsCIELabQueryMinLStatus00tbXcmsCCCcccXcmsCCC ccc,	// Specifies the CCC.tbXcmsFloathue_angleXcmsFloat hue_angle,	// Specifies the hue angle (in degrees) at which to ...tbXcmsFloatchromaXcmsFloat chroma,	// Specifies the chroma at which to find maximum ...tbXcmsColor *color_returnXcmsColor *color_return	// Returns the CIE L*a*b* coordinates of maximum ...
XcmsCIELuvQueryMaxCStatus00tbXcmsCCCcccXcmsCCC ccc,	// Specifies the CCC.tbXcmsFloathue_angleXcmsFloat hue_angle,	// Specifies the hue angle (in degrees) at which to ...tbXcmsFloatL_starXcmsFloat L_star,	// Specifies the lightness (L*) at which to find ...tbXcmsColor *color_returnXcmsColor *color_return	// Returns the CIE L*u*v* coordinates of maximum ...
XcmsCIELuvQueryMaxLStatus00tbXcmsCCCcccXcmsCCC ccc,	// Specifies the CCC.tbXcmsFloathue_angleXcmsFloat hue_angle,	// Specifies the hue angle (in degrees) at which to ...tbXcmsFloatchromaXcmsFloat chroma,	// Specifies the chroma at which to find maximum ...tbXcmsColor *color_returnXcmsColor *color_return	// Returns the CIE L*u*v* coordinates of maximum ...
XcmsCIELuvQueryMaxLCStatus00tbXcmsCCCcccXcmsCCC ccc,	// Specifies the CCC.tbXcmsFloathue_angleXcmsFloat hue_angle,	// Specifies the hue angle (in degrees) at which to ...tbXcmsColor *color_returnXcmsColor *color_return	// Returns the CIE L*u*v* coordinates of maximum ...
XcmsCIELuvQueryMinLStatus00tbXcmsCCCcccXcmsCCC ccc,	// Specifies the CCC.tbXcmsFloathue_angleXcmsFloat hue_angle,	// Specifies the hue angle (in degrees) at which to ...tbXcmsFloatchromaXcmsFloat chroma,	// Specifies the chroma at which to find maximum ...tbXcmsColor *color_returnXcmsColor *color_return	// Returns the CIE L*u*v* coordinates of maximum ...
XcmsConvertColorsStatus00tbXcmsCCCcccXcmsCCC ccc,	// Specifies the CCC.tbXcmsColor []colors_in_outXcmsColor colors_in_out[],	// Specifies an array of color specifications.tbunsigned intncolorsunsigned int ncolors,	// Specifies the number of XcmsColor structures in ...tbXcmsColorFormattarget_formatXcmsColorFormat target_format,	// Specifies the target color specification format.tbBool []compression_flags_returnBool compression_flags_return[]	// Returns an array of Boolean values indicating ...
XcmsCreateCCCXcmsCCC00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbintscreen_numberint screen_number,	// Specifies the appropriate screen number on the ...tbVisual *visualVisual *visual,	// Specifies the visual type.tbXcmsColor *client_white_pointXcmsColor *client_white_point,	// Specifies the Client White Point.tbXcmsCompressionProccompression_procXcmsCompressionProc compression_proc,	// Specifies the gamut compression procedure that ...tbXPointercompression_client_dataXPointer compression_client_data,	// Specifies client data for use by the gamut  ...tbXcmsWhiteAdjustProcwhite_adjust_procXcmsWhiteAdjustProc white_adjust_proc,	// Specifies the white adjustment procedure that is ...tbXPointerwhite_adjust_client_dataXPointer white_adjust_client_data	// Specifies client data for use with the white ...
XcmsDefaultCCCXcmsCCC00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbintscreen_numberint screen_number	// Specifies the appropriate screen number on the ...
XcmsFreeCCCvoid00tbXcmsCCCcccXcmsCCC ccc	// Specifies the CCC.
XcmsLookupColorStatus00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbColormapcolormapColormap colormap,	// Specifies the colormap.tbchar *color_stringchar *color_string,	// Specifies the color string.tbXcmsColor *color_exact_returnXcmsColor * color_exact_return,	// Returns the color specification parsed from the ...tbXcmsColor *color_screen_returnXcmsColor * color_screen_return,	// Returns the color that can be reproduced on the ...tbXcmsColorFormatresult_formatXcmsColorFormat result_format	// Specifies the color format for the returned ...
XcmsQueryBlackStatus00tbXcmsCCCcccXcmsCCC ccc,	// Specifies the CCC.tbXcmsColorFormattarget_formatXcmsColorFormat target_format,	// Specifies the target color specification format.tbXcmsColor *color_returnXcmsColor *color_return	// Returns the color specification in the specified ...
XcmsQueryBlueStatus00tbXcmsCCCcccXcmsCCC ccc,	// Specifies the CCC.tbXcmsColorFormattarget_formatXcmsColorFormat target_format,	// Specifies the target color specification format.tbXcmsColor *color_returnXcmsColor *color_return	// Returns the color specification in the specified ...
XcmsQueryColorStatus00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbColormapcolormapColormap colormap,	// Specifies the colormap.tbXcmsColor *color_in_outXcmsColor *color_in_out,	// Specifies the pixel member that indicates the ...tbXcmsColorFormatresult_formatXcmsColorFormat result_format	// Specifies the color format for the returned ...
XcmsQueryColorsStatus00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbColormapcolormapColormap colormap,	// Specifies the colormap.tbXcmsColor []color_in_outXcmsColor color_in_out[],	// Specifies the pixel member that indicates the ...tbunsigned intncolorsunsigned int ncolors,	// Specifies the number of XcmsColor structures in ...tbXcmsColorFormatresult_formatXcmsColorFormat result_format	// Specifies the color format for the returned ...
XcmsQueryGreenStatus00tbXcmsCCCcccXcmsCCC ccc,	// Specifies the CCC.tbXcmsColorFormattarget_formatXcmsColorFormat target_format,	// Specifies the target color specification format.tbXcmsColor *color_returnXcmsColor *color_return	// Returns the color specification in the specified ...
XcmsQueryRedStatus00tbXcmsCCCcccXcmsCCC ccc,	// Specifies the CCC.tbXcmsColorFormattarget_formatXcmsColorFormat target_format,	// Specifies the target color specification format.tbXcmsColor *color_returnXcmsColor *color_return	// Returns the color specification in the specified ...
XcmsQueryWhiteStatus00tbXcmsCCCcccXcmsCCC ccc,	// Specifies the CCC.tbXcmsColorFormattarget_formatXcmsColorFormat target_format,	// Specifies the target color specification format.tbXcmsColor *color_returnXcmsColor *color_return	// Returns the color specification in the specified ...
XcmsSetCCCOfColormapXcmsCCC00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbColormapcolormapColormap colormap,	// Specifies the colormap.tbXcmsCCCcccXcmsCCC ccc	// Specifies the CCC.
XcmsSetWhiteAdjustProcXcmsWhiteAdjustProc00tbXcmsCCCcccXcmsCCC ccc,	// Specifies the CCC.tbXcmsWhiteAdjustProcwhite_adjust_procXcmsWhiteAdjustProc white_adjust_proc,	// Specifies the white point adjustment procedure.tbXPointerclient_dataXPointer client_data	// Specifies client data for the white point ...
XcmsSetWhitePointStatus00tbXcmsCCCcccXcmsCCC ccc,	// Specifies the CCC.tbXcmsColor *colorXcmsColor *color	// Specifies the new Client White Point.
XcmsStoreColorStatus00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbColormapcolormapColormap colormap,	// Specifies the colormap.tbXcmsColor *colorXcmsColor *color	// Specifies the color cell and the color to store.
XcmsStoreColorsStatus00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbColormapcolormapColormap colormap,	// Specifies the colormap.tbXcmsColor []colorsXcmsColor colors[],	// Specifies the color specification array of  ...tbintncolorsint ncolors,	// Specifies the number of XcmsColor structures in ...tbBool []compression_flags_returnBool compression_flags_return[]	// Returns an array of Boolean values indicating ...
XcmsTekHVCQueryMaxCStatus00tbXcmsCCCcccXcmsCCC ccc,	// Specifies the CCC.tbXcmsFloathueXcmsFloat hue,	// Specifies the Hue in which to find the maximum ...tbXcmsFloatvalueXcmsFloat value,	// returned in the pixel member is undefined.tbXcmsColor *color_returnXcmsColor *color_return	// Returns the maximum Chroma along with the actual ...
XcmsTekHVCQueryMaxVStatus00tbXcmsCCCcccXcmsCCC ccc,	// Specifies the CCC.tbXcmsFloathueXcmsFloat hue,	// Specifies the Hue in which to find the maximum ...tbXcmsFloatchromaXcmsFloat chroma,	// Specifies the chroma at which to find maximum ...tbXcmsColor *color_returnXcmsColor *color_return	// Returns the maximum Chroma along with the actual ...
XcmsTekHVCQueryMaxVCStatus00tbXcmsCCCcccXcmsCCC ccc,	// Specifies the CCC.tbXcmsFloathueXcmsFloat hue,	// Specifies the Hue in which to find the maximum ...tbXcmsColor *color_returnXcmsColor *color_return	// Returns the maximum Chroma along with the actual ...
XcmsTekHVCQueryMaxVSamplesStatus00tbXcmsCCCcccXcmsCCC ccc,	// Specifies the CCC.tbXcmsFloathueXcmsFloat hue,	// Specifies the Hue in which to find the maximum ...tbXcmsColor []colors_returnXcmsColor colors_return[],	// Returns nsamples of color specifications in  ...tbunsigned intnsamplesunsigned int nsamples	// Specifies the number of samples.
XcmsTekHVCQueryMinVStatus00tbXcmsCCCcccXcmsCCC ccc,	// Specifies the CCC.tbXcmsFloathueXcmsFloat hue,	// Specifies the Hue in which to find the maximum ...tbXcmsFloatchromaXcmsFloat chroma,	// Specifies the chroma at which to find maximum ...tbXcmsColor *color_returnXcmsColor *color_return	// Returns the maximum Chroma along with the actual ...
XConfigureWindowXConfigureWindow00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbWindowwWindow w,	// Specifies the window to be reconfigured, moved, ...xbunsigned intCWX          CWY          CWWidth      CWHeight     CWBorderWidthCWSibling    CWStackMode  unsigned int value_mask,	// Specifies which values are to be set using ...tbXWindowChanges *valuesXWindowChanges *values	// Specifies the XWindowChanges structure.
XContextDependentDrawingBool00tbXFontSetfont_setXFontSet font_set	// Specifies the font set.
XContextualDrawingBool00tbXFontSetfont_setXFontSet font_set	// Specifies the font set.
XConvertCasevoid00tbKeySymkeysymKeySym keysym,	// Specifies the KeySym that is to be searched for ...tbKeySym *lower_returnKeySym *lower_return,	// Returns the lowercase form of keysym, ...tbKeySym *upper_returnKeySym *upper_return	// Returns the uppercase form of keysym, ...
XConvertSelectionXConvertSelection00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbAtomselectionAtom selection,	// Specifies the selection atom.tbAtomtargetAtom target,	// Specifies the target atom.tbAtompropertyAtom property,	// Specifies the property name.tbWindowrequestorWindow requestor,	// Specifies the requestor.tbTimetimeTime time	// Specifies the time.
XCopyAreaXCopyArea00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbDrawablesrcDrawable src,	// Specify the source and destination rectangles to ...tbDrawabledestDrawable dest,	// Specify the source and destination rectangles to ...tbGCgcGC gc,	// Specifies the GC.tbintsrc_xint src_x,	// Specify the x and y coordinates, ...tbintsrc_yint src_y,	// Specify the x and y coordinates, ...tbunsigned intwidthunsigned int width,	// Specify the width and height, ...tbunsigned intheightunsigned int height,	// Specify the width and height, ...tbintdest_xint dest_x,	// Specify the x and y coordinates, ...tbintdest_yint dest_y	// Specify the x and y coordinates, ...
XCopyColormapAndFreeColormap00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbColormapcolormapColormap colormap	// Specifies the colormap that you want to create, ...
XCopyGCXCopyGC00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbGCsrcGC src,	// Specifies the components of the source GC.tbGCdestGC dest,	// Specifies the destination GC.xbunsigned longGCFunction         GCPlaneMask        GCForeground       GCBackground       GCLineWidth        GCLineStyle        GCCapStyle         GCJoinStyle        GCFillStyle        GCFillRule         GCTile             GCStipple          GCTileStipXOrigin  GCTileStipYOrigin  GCFont             GCSubwindowMode    GCGraphicsExposuresGCClipXOrigin      GCClipYOrigin      GCClipMask         GCDashOffset       GCDashList         GCArcMode          unsigned long valuemask	// Specifies which components in the GC are to be ...
XCopyPlaneXCopyPlane00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbDrawablesrcDrawable src,	// Specify the source and destination rectangles to ...tbDrawabledestDrawable dest,	// Specify the source and destination rectangles to ...tbGCgcGC gc,	// Specifies the GC.tbintsrc_xint src_x,	// Specify the x and y coordinates, ...tbintsrc_yint src_y,	// Specify the x and y coordinates, ...tbunsigned intwidthunsigned int width,	// Specify the width and height, ...tbunsigned intheightunsigned int height,	// Specify the width and height, ...tbintdest_xint dest_x,	// Specify the x and y coordinates, ...tbintdest_yint dest_y,	// Specify the x and y coordinates, ...tbunsigned longplaneunsigned long plane	// Specifies the bit plane.
XCreateBitmapFromDataPixmap00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbDrawabledDrawable d,	// Specifies the drawable that indicates the ...tbchar *datachar *data,	// Specifies the data in bitmap format.tbunsigned intwidthunsigned int width,	// Specify the width and height.tbunsigned intheightunsigned int height	// Specify the width and height.
XCreateColormapColormap00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbWindowwWindow w,	// Specifies the window on whose screen you want to ...tbVisual *visualVisual *visual,	// Specifies a visual type supported on the screen.tbintallocint alloc	// Specifies the colormap entries to be allocated.
XCreateFontCursorCursor00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.xbunsigned intXC_num_glyphsXC_X_cursorXC_arrowXC_based_arrow_downXC_based_arrow_upXC_boatXC_bogosityXC_bottom_left_cornerXC_bottom_right_cornerXC_bottom_sideXC_bottom_teeXC_box_spiralXC_center_ptrXC_circleXC_clockXC_coffee_mugXC_crossXC_cross_reverseXC_crosshairXC_diamond_crossXC_dotXC_dotboxXC_double_arrowXC_draft_largeXC_draft_smallXC_draped_boxXC_exchangeXC_fleurXC_gobblerXC_gumbyXC_hand1XC_hand2XC_heartXC_iconXC_iron_crossXC_left_ptrXC_left_sideXC_left_teeXC_leftbuttonXC_ll_angleXC_lr_angleXC_manXC_middlebuttonXC_mouseXC_pencilXC_pirateXC_plusXC_question_arrowXC_right_ptrXC_right_sideXC_right_teeXC_rightbuttonXC_rtl_logoXC_sailboatXC_sb_down_arrowXC_sb_h_double_arrowXC_sb_left_arrowXC_sb_right_arrowXC_sb_up_arrowXC_sb_v_double_arrowXC_shuttleXC_sizingXC_spiderXC_spraycanXC_starXC_targetXC_tcrossXC_top_left_arrowXC_top_left_cornerXC_top_right_cornerXC_top_sideXC_top_teeXC_trekXC_ul_angleXC_umbrellaXC_ur_angleXC_watchXC_xtermunsigned int shape	// Specifies the shape of the cursor.
XCreateFontSetXFontSet00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbchar *base_font_name_listchar *base_font_name_list,	// Specifies the base font names.tbchar ***missing_charset_list_returnchar ***missing_charset_list_return,	// Returns the missing charsets.tbint *missing_charset_count_returnint *missing_charset_count_return,	// Returns the number of missing charsets.tbchar **def_string_returnchar **def_string_return	// Returns the string drawn for missing charsets.
XCreateGCGC00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbDrawabledDrawable d,	// Specifies the drawable.xbunsigned longGCFunctionGCPlaneMaskGCForegroundGCBackgroundGCLineWidthGCLineStyleGCCapStyleGCJoinStyleGCFillStyleGCFillRuleGCTileGCStippleGCTileStipXOriginGCTileStipYOriginGCFontGCSubwindowModeGCGraphicsExposuresGCClipXOriginGCClipYOriginGCClipMaskGCDashOffsetGCDashListGCArcModeunsigned long valuemask,	// Specifies which components in the GC are to be ...tbXGCValues *valuesXGCValues *values	// Specifies any values as specified by the  ...
XCreateGlyphCursorCursor00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbFontsource_fontFont source_font,	// Specifies the font for the source glyph.tbFontmask_fontFont mask_font,	// Specifies the font for the mask glyph or None.tbunsigned intsource_charunsigned int source_char,	// Specifies the character glyph for the source.tbunsigned intmask_charunsigned int mask_char,	// Specifies the glyph character for the mask.tbXColor *foreground_colorXColor *foreground_color,	// Specifies the RGB values for the foreground of ...tbXColor *background_colorXColor *background_color	// Specifies the RGB values for the background of ...
XCreateICXIC00tbXIMimXIM im	// Specifies the input method.
XCreateImageXImage *00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbVisual *visualVisual *visual,	// Specifies the Visual structure.tbunsigned intdepthunsigned int depth,	// Specifies the depth of the image.tbintformatint format,	// Specifies the format for the image.tbintoffsetint offset,	// Specifies the number of pixels to ignore at the ...tbchar *datachar *data,	// Specifies the image data.tbunsigned intwidthunsigned int width,	// Specifies the width of the image, ...tbunsigned intheightunsigned int height,	// Specifies the height of the image, ...tbintbitmap_padint bitmap_pad,	// Specifies the quantum of a scanline (8, 16, ...tbintbytes_per_lineint bytes_per_line	// Specifies the number of bytes in the client ...
XCreateOCXOC00tbXOMomXOM om	// Specifies the output method.
XCreatePixmapPixmap00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbDrawabledDrawable d,	// Specifies which screen the pixmap is created on.tbunsigned intwidthunsigned int width,	// Specify the width and height, ...tbunsigned intheightunsigned int height,	// Specify the width and height, ...tbunsigned intdepthunsigned int depth	// Specifies the depth of the pixmap.
XCreatePixmapCursorCursor00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbPixmapsourcePixmap source,	// Specifies the shape of the source cursor.tbPixmapmaskPixmap mask,	// Specifies the cursor's source bits to be  ...tbXColor *foreground_colorXColor *foreground_color,	// Specifies the RGB values for the foreground of ...tbXColor *background_colorXColor *background_color,	// Specifies the RGB values for the background of ...tbunsigned intxunsigned int x,	// Specify the x and y coordinates, ...tbunsigned intyunsigned int y	// Specify the x and y coordinates, ...
XCreatePixmapFromBitmapDataPixmap00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbDrawabledDrawable d,	// Specifies the drawable that indicates the ...tbchar *datachar *data,	// Specifies the data in bitmap format.tbunsigned intwidthunsigned int width,	// Specify the width and height.tbunsigned intheightunsigned int height,	// Specify the width and height.tbunsigned longfgunsigned long fg,	// Specify the foreground and background pixel  ...tbunsigned longbgunsigned long bg,	// Specify the foreground and background pixel  ...tbunsigned intdepthunsigned int depth	// Specifies the depth of the pixmap.
XCreateRegionRegion00
XCreateSimpleWindowWindow00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbWindowparentWindow parent,	// Specifies the parent window.tbintxint x,	// Specify the x and y coordinates, ...tbintyint y,	// Specify the x and y coordinates, ...tbunsigned intwidthunsigned int width,	// Specify the width and height, ...tbunsigned intheightunsigned int height,	// Specify the width and height, ...tbunsigned intborder_widthunsigned int border_width,	// Specifies the width of the created window's  ...tbunsigned longborderunsigned long border,	// Specifies the border pixel value of the window.tbunsigned longbackgroundunsigned long background	// Specifies the background pixel value of the  ...
XCreateWindowWindow00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbWindowparentWindow parent,	// Specifies the parent window.tbintxint x,	// Specify the x and y coordinates, ...tbintyint y,	// Specify the x and y coordinates, ...tbunsigned intwidthunsigned int width,	// Specify the width and height, ...tbunsigned intheightunsigned int height,	// Specify the width and height, ...tbunsigned intborder_widthunsigned int border_width,	// Specifies the width of the created window's  ...tbintdepthint depth,	// Specifies the window's depth.tbunsigned intclassunsigned int class,	// Specifies the created window's class.tbVisual *visualVisual *visual,	// Specifies the visual type.xbunsigned longCWBackPixmapCWBackPixelCWBorderPixmapCWBorderPixelCWBitGravityCWWinGravityCWBackingStoreCWBackingPlanesCWBackingPixelCWOverrideRedirectCWSaveUnderCWEventMaskCWDontPropagateCWColormapCWCursorunsigned long valuemask,	// Specifies which window attributes are defined in ...tbXSetWindowAttributes *attributesXSetWindowAttributes *attributes	// Specifies the structure from which the values ...
XDefaultStringchar *00
XDefineCursorXDefineCursor00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbWindowwWindow w,	// Specifies the window.tbCursorcursorCursor cursor	// Specifies the cursor that is to be displayed or ...
XDeleteContextint00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbXIDridXID rid,	// Specifies the resource ID with which the data is ...tbXContextcontextXContext context	// Specifies the context type to which the data ...
XDeleteModifiermapEntryXModifierKeymap *00tbXModifierKeymap *modmapXModifierKeymap *modmap,	// Specifies the XModifierKeymap structure.tbKeyCodekeycode_entryKeyCode keycode_entry,	// Specifies the KeyCode.tbintmodifierint modifier	// Specifies the modifier.
XDeletePropertyXDeleteProperty00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbWindowwWindow w,	// Specifies the window whose property you want to ...tbAtompropertyAtom property	// Specifies the property name.
XDestroyICvoid00tbXICicXIC ic	// Specifies the input context.
XDestroyImageXDestroyImage00tbXImage *ximageXImage *ximage	// Specifies the image.
XDestroyOCvoid00tbXOCocXOC oc	// Specifies the output context.
XDestroyRegionXDestroyRegion00tbRegionrRegion r	// Specifies the region.
XDestroySubwindowsXDestroySubwindows00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbWindowwWindow w	// Specifies the window.
XDestroyWindowXDestroyWindow00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbWindowwWindow w	// Specifies the window.
XDeviceBellStatus00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbXDevice *deviceXDevice *device,	// Specifies  the  device  with which the bell is ...tbXID *feedbackclassXID *feedbackclass,	// Specifies the class of the feedback with which ...tbXID *feedbackidXID *feedbackid,	// Specifies  the  id  of the feedback with which ...tbint *percentint *percent	// Specifies the volume in the range -100 to  100 ...
XDirectionalDependentDrawingBool00tbXFontSetfont_setXFontSet font_set	// Specifies the font set.
XDisableAccessControlXDisableAccessControl00tbDisplay *displayDisplay *display	// Specifies the connection to the X server.
XDisplayKeycodesXDisplayKeycodes00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbint *min_keycodes_returnint * min_keycodes_return,	// Returns the minimum number of KeyCodes.tbint *max_keycodes_returnint * max_keycodes_return	// Returns the maximum number of KeyCodes.
XDisplayMotionBufferSizeunsigned long00tbDisplay *displayDisplay *display	// Specifies the connection to the X server.
XDisplayNamechar *00tbchar *stringchar *string	// Specifies the character string.
XDisplayOfIMDisplay *00tbXIMimXIM im	// Specifies the input method.
XDisplayOfOMDisplay *00tbXOMomXOM om	// Specifies the output method.
XDrawArcXDrawArc00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbDrawabledDrawable d,	// Specifies the drawable.tbGCgcGC gc,	// Specifies the GC.tbintxint x,	// Specify the x and y coordinates, ...tbintyint y,	// Specify the x and y coordinates, ...tbunsigned intwidthunsigned int width,	// Specify the width and height, ...tbunsigned intheightunsigned int height,	// Specify the width and height, ...tbintangle1int angle1,	// Specifies the start of the arc relative to the ...tbintangle2int angle2	// Specifies the path and extent of the arc  ...
XDrawArcsXDrawArcs00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbDrawabledDrawable d,	// Specifies the drawable.tbGCgcGC gc,	// Specifies the GC.tbXArc *arcsXArc *arcs,	// Specifies an array of arcs.tbintnarcsint narcs	// Specifies the number of arcs in the array.
XDrawImageStringXDrawImageString00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbDrawabledDrawable d,	// Specifies the drawable.tbGCgcGC gc,	// Specifies the GC.tbintxint x,	// Specify the x and y coordinates, ...tbintyint y,	// Specify the x and y coordinates, ...tbchar *stringchar *string,	// Specifies the character string.tbintlengthint length	// Specifies the number of characters in the string ...
XDrawImageString16XDrawImageString1600tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbDrawabledDrawable d,	// Specifies the drawable.tbGCgcGC gc,	// Specifies the GC.tbintxint x,	// Specify the x and y coordinates, ...tbintyint y,	// Specify the x and y coordinates, ...tbXChar2b *stringXChar2b *string,	// Specifies the character string.tbintlengthint length	// Specifies the number of characters in the string ...
XDrawLineXDrawLine00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbDrawabledDrawable d,	// Specifies the drawable.tbGCgcGC gc,	// Specifies the GC.tbintx1int x1,	// Specify the points (x1, y1) and (x2, ...tbinty1int y1,	// Specify the points (x1, y1) and (x2, ...tbintx2int x2,	// Specify the points (x1, y1) and (x2, ...tbinty2int y2	// Specify the points (x1, y1) and (x2, ...
XDrawLinesXDrawLines00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbDrawabledDrawable d,	// Specifies the drawable.tbGCgcGC gc,	// Specifies the GC.tbXPoint *pointsXPoint *points,	// Specifies an array of points.tbintnpointsint npoints,	// Specifies the number of points in the array.rbintCoordModeOriginCoordModePreviousint mode	// Specifies the coordinate mode.
XDrawPointXDrawPoint00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbDrawabledDrawable d,	// Specifies the drawable.tbGCgcGC gc,	// Specifies the GC.tbintxint x,	// Specify the x and y coordinates where you want ...tbintyint y	// Specify the x and y coordinates where you want ...
XDrawPointsXDrawPoints00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbDrawabledDrawable d,	// Specifies the drawable.tbGCgcGC gc,	// Specifies the GC.tbXPoint *pointsXPoint *points,	// Specifies an array of points.tbintnpointsint npoints,	// Specifies the number of points in the array.rbintCoordModeOriginCoordModePreviousint mode	// Specifies the coordinate mode.
XDrawRectangleXDrawRectangle00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbDrawabledDrawable d,	// Specifies the drawable.tbGCgcGC gc,	// Specifies the GC.tbintxint x,	// Specify the x and y coordinates, ...tbintyint y,	// Specify the x and y coordinates, ...tbunsigned intwidthunsigned int width,	// Specify the width and height, ...tbunsigned intheightunsigned int height	// Specify the width and height, ...
XDrawRectanglesXDrawRectangles00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbDrawabledDrawable d,	// Specifies the drawable.tbGCgcGC gc,	// Specifies the GC.tbXRectangle []rectanglesXRectangle rectangles[],	// Specifies an array of rectangles.tbintnrectanglesint nrectangles	// Specifies the number of rectangles in the array.
XDrawSegmentsXDrawSegments00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbDrawabledDrawable d,	// Specifies the drawable.tbGCgcGC gc,	// Specifies the GC.tbXSegment *segmentsXSegment *segments,	// Specifies an array of segments.tbintnsegmentsint nsegments	// Specifies the number of segments in the array.
XDrawStringXDrawString00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbDrawabledDrawable d,	// Specifies the drawable.tbGCgcGC gc,	// Specifies the GC.tbintxint x,	// Specify the x and y coordinates, ...tbintyint y,	// Specify the x and y coordinates, ...tbchar *stringchar *string,	// Specifies the character string.tbintlengthint length	// Specifies the number of characters in the string ...
XDrawString16XDrawString1600tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbDrawabledDrawable d,	// Specifies the drawable.tbGCgcGC gc,	// Specifies the GC.tbintxint x,	// Specify the x and y coordinates, ...tbintyint y,	// Specify the x and y coordinates, ...tbXChar2b *stringXChar2b *string,	// Specifies the character string.tbintlengthint length	// Specifies the number of characters in the string ...
XDrawTextXDrawText00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbDrawabledDrawable d,	// Specifies the drawable.tbGCgcGC gc,	// Specifies the GC.tbintxint x,	// Specify the x and y coordinates, ...tbintyint y,	// Specify the x and y coordinates, ...tbXTextItem *itemsXTextItem *items,	// Specifies an array of text items.tbintnitemsint nitems	// Specifies the number of text items in the array.
XDrawText16XDrawText1600tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbDrawabledDrawable d,	// Specifies the drawable.tbGCgcGC gc,	// Specifies the GC.tbintxint x,	// Specify the x and y coordinates, ...tbintyint y,	// Specify the x and y coordinates, ...tbXTextItem16 *itemsXTextItem16 *items,	// Specifies an array of text items.tbintnitemsint nitems	// Specifies the number of text items in the array.
XEmptyRegionBool00tbRegionrRegion r	// Specifies the region.
XEnableAccessControlXEnableAccessControl00tbDisplay *displayDisplay *display	// Specifies the connection to the X server.
XEqualRegionBool00tbRegionr1Region r1,	// Specify the two regions.tbRegionr2Region r2	// Specify the two regions.
XEventsQueuedint00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.rbintQueuedAlreadyQueuedAfterFlushQueuedAfterReadingint mode	// Specifies the mode.
XExtendedMaxRequestSizelong00tbDisplay *displayDisplay *display	// Specifies the connection to the X server.
XExtentsOfFontSetXFontSetExtents *00tbXFontSetfont_setXFontSet font_set	// Specifies the font set.
XFetchBufferchar *00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbint *nbytes_returnint *nbytes_return,	// Returns the number of bytes in the buffer.tbintbufferint buffer	// Specifies the buffer in which you want to store ...
XFetchByteschar *00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbint *nbytes_returnint *nbytes_return	// Returns the number of bytes in the buffer.
XFetchNameStatus00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbWindowwWindow w,	// Specifies the window.tbchar **window_name_returnchar **window_name_return	// Returns the window name, ...
XFillArcXFillArc00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbDrawabledDrawable d,	// Specifies the drawable.tbGCgcGC gc,	// Specifies the GC.tbintxint x,	// Specify the x and y coordinates, ...tbintyint y,	// Specify the x and y coordinates, ...tbunsigned intwidthunsigned int width,	// Specify the width and height, ...tbunsigned intheightunsigned int height,	// Specify the width and height, ...tbintangle1int angle1,	// Specifies the start of the arc relative to the ...tbintangle2int angle2	// Specifies the path and extent of the arc  ...
XFillArcsXFillArcs00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbDrawabledDrawable d,	// Specifies the drawable.tbGCgcGC gc,	// Specifies the GC.tbXArc *arcsXArc *arcs,	// Specifies an array of arcs.tbintnarcsint narcs	// Specifies the number of arcs in the array.
XFillPolygonXFillPolygon00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbDrawabledDrawable d,	// Specifies the drawable.tbGCgcGC gc,	// Specifies the GC.tbXPoint *pointsXPoint *points,	// Specifies an array of points.tbintnpointsint npoints,	// Specifies the number of points in the array.tbintshapeint shape,	// Specifies a shape that helps the server to ...rbintCoordModeOriginCoordModePreviousint mode	// Specifies the coordinate mode.
XFillRectangleXFillRectangle00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbDrawabledDrawable d,	// Specifies the drawable.tbGCgcGC gc,	// Specifies the GC.tbintxint x,	// Specify the x and y coordinates, ...tbintyint y,	// Specify the x and y coordinates, ...tbunsigned intwidthunsigned int width,	// Specify the width and height, ...tbunsigned intheightunsigned int height	// Specify the width and height, ...
XFillRectanglesXFillRectangles00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbDrawabledDrawable d,	// Specifies the drawable.tbGCgcGC gc,	// Specifies the GC.tbXRectangle *rectanglesXRectangle *rectangles,	// Specifies an array of rectangles.tbintnrectanglesint nrectangles	// Specifies the number of rectangles in the array.
XFindContextint00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbXIDridXID rid,	// Specifies the resource ID with which the data is ...tbXContextcontextXContext context,	// Specifies the context type to which the data ...tbXPointer *data_returnXPointer *data_return	// Returns the data.
XFlushXFlush00tbDisplay *displayDisplay *display	// Specifies the connection to the X server.
XFontsOfFontSetint00tbXFontSetfont_setXFontSet font_set,	// Specifies the font set.tbXFontStruct ***font_struct_list_returnXFontStruct ***font_struct_list_return,	// Returns the list of font structs.tbchar ***font_name_list_returnchar ***font_name_list_return	// Returns the list of font names.
XForceScreenSaverXForceScreenSaver00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbintmodeint mode	// Specifies the mode that is to be applied.
XFreeXFree00tbvoid *datavoid *data	// Specifies the data that is to be freed.
XFreeColormapXFreeColormap00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbColormapcolormapColormap colormap	// Specifies the colormap that you want to create, ...
XFreeColorsXFreeColors00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbColormapcolormapColormap colormap,	// Specifies the colormap.tbunsigned long []pixelsunsigned long pixels[],	// Specifies an array of pixel values.tbintnpixelsint npixels,	// Specifies the number of pixels.tbunsigned longplanesunsigned long planes	// Specifies the planes you want to free.
XFreeCursorXFreeCursor00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbCursorcursorCursor cursor	// Specifies the cursor.
XFreeDeviceListXFreeDeviceList00tbXDeviceInfo *listXDeviceInfo *list	// Specifies  the  list  of devices to free.
XFreeFontXFreeFont00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbXFontStruct *font_structXFontStruct *font_struct	// Specifies the storage associated with the font.
XFreeFontInfoXFreeFontInfo00tbchar **nameschar **names,	// Specifies the list of font names.tbXFontStruct *free_infoXFontStruct *free_info,	// Specifies the font information.tbintactual_countint actual_count	// Specifies the actual number of font names.
XFreeFontNamesXFreeFontNames00tbchar * []listchar *list[]	// Specifies the array of strings you want to free.
XFreeFontPathXFreeFontPath00tbchar **listchar **list	// Specifies the array of strings you want to free.
XFreeFontSetvoid00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbXFontSetfont_setXFontSet font_set	// Specifies the font set.
XFreeGCXFreeGC00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbGCgcGC gc	// Specifies the GC.
XFreePixmapXFreePixmap00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbPixmappixmapPixmap pixmap	// Specifies the pixmap.
XFreeStringListvoid00tbchar **listchar **list	// Specifies the list of strings to be freed.
XGContextFromGCGContext00tbGCgcGC gc	// Specifies the GC.
XGetAtomNamechar *00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbAtomatomAtom atom	// Specifies the atom for the property name you ...
XGetAtomNamesStatus00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbAtom *atomsAtom *atoms,	// Specifies the array of atoms.tbintcountint count,	// Specifies the number of atom names in the array.tbchar **names_returnchar **names_return	// Returns the atom names.
XGetClassHintStatus00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbWindowwWindow w,	// Specifies the window.tbXClassHint *class_hints_returnXClassHint *class_hints_return	// Returns the XClassHint structure.
XGetCommandStatus00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbWindowwWindow w,	// Specifies the window.tbchar ***argv_returnchar ***argv_return,	// Returns the application's argument list.tbint *argc_returnint *argc_return	// Returns the number of arguments returned.
XGetDeviceButtonMappingint00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbXDevice *deviceXDevice *device,	// Specifies  the  device whose button mapping is ...tbunsigned char []map_returnunsigned char map_return[],	// Returns the mapping list.tbintnmapint nmap	// Specifies the number of items in  the  mapping ...
XGetDeviceControlXDeviceControl   *00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbXDevice *deviceXDevice *device,	// Specifies the device whose control is to be ...tbint *controlTypeint *controlType	// Specifies  the type of control to be  ...
XGetDeviceDontPropagateListXEventClass *00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbWindow *windowWindow *window,	// Specifies the window whose dont-propagate-list ...tbint *countint *count	// Specifies the number of event classes  in  the ...
XGetDeviceFocusXGetDeviceFocus00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbDisplay *deviceDisplay *device,	// Specifies  the  device  whose  focus  is to be ...tbWindow *focus_returnWindow *focus_return,	// Returns  the  focus  window, PointerRoot, ...tbint *revert_to_returnint *revert_to_return,	// Returns  the  current focus state  ...tbint *time_returnint *time_return	// Returns the last_focus_time for the device.
XGetDeviceKeyMappingKeySym *00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbXDevice *deviceXDevice *device,	// Specifies  the  device whose key mapping is to ...tbKeyCodefirst_keycodeKeyCode first_keycode,	// Specifies the first KeyCode to be returned.tbintkeycode_countint keycode_count,	// Specifies  the  number  of  KeyCodes   to   be ...tbint *keysyms_per_keycode_returnint *keysyms_per_keycode_return	// Specifies the address of a variable into which ...
XGetDeviceModifierMappingXModifierKeymap *00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbXDevice *deviceXDevice *device	// Specifies the device whose modifier mapping is ...
XGetDeviceMotionEventsXDeviceTimeCoord *00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbXDevice *deviceXDevice *device,	// Specifies  the  device whose motion history is ...tbTimestartTime start,	// Specify the time interval in which the  events ...tbTimestopTime stop,	// Specify the time interval in which the  events ...tbint *nevents_returnint *nevents_return,	// Returns the number of events from  the  motion ...tbint *mode_returnint *mode_return,	// Returns  the  mode  of the device (Absolute or ...tbint *axis_count_returnint *axis_count_return	// Returns the count of axes being reported.
XGetErrorDatabaseTextXGetErrorDatabaseText00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbchar *namechar * name,	// Specifies the name of the application.tbchar *messagechar * message,	// Specifies the type of the error message.tbchar *default_stringchar *default_string,	// Specifies the default error message if none is ...tbchar *buffer_returnchar *buffer_return,	// Returns the error description.tbintlengthint length	// Specifies the size of the buffer.
XGetErrorTextXGetErrorText00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbintcodeint code,	// Specifies the error code for which you want to ...tbchar *buffer_returnchar *buffer_return,	// Returns the error description.tbintlengthint length	// Specifies the size of the buffer.
XGetExtensionVersionXExtensionVersion *00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbchar *namechar *name	// Specifies the extension to  be  queried.
XGetFeedbackControlXFeedbackState  *00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbXDevice *deviceXDevice *device,	// Specifies the device whose feedbacks are to ...tbint *num_feedbacksint *num_feedbacks	// Specifies  an address into which the number ...
XGetFontPathchar **00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbint *npaths_returnint *npaths_return	// Returns the number of strings in the font path ...
XGetFontPropertyBool00tbXFontStruct *font_structXFontStruct *font_struct,	// Specifies the storage associated with the font.tbAtomatomAtom atom,	// Specifies the atom for the property name you ...tbunsigned long *value_returnunsigned long *value_return	// Returns the value of the font property.
XGetGCValuesStatus00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbGCgcGC gc,	// Specifies the GC.xbunsigned longGCFunctionGCPlaneMaskGCForegroundGCBackgroundGCLineWidthGCLineStyleGCCapStyleGCJoinStyleGCFillStyleGCFillRuleGCTileGCStippleGCTileStipXOriginGCTileStipYOriginGCFontGCSubwindowModeGCGraphicsExposuresGCClipXOriginGCClipYOriginGCClipMaskGCDashOffsetGCDashListGCArcModeunsigned long valuemask,	// Specifies which components in the GC are to be ...tbXGCValues *values_returnXGCValues *values_return	// Returns the GC values in the specified XGCValues ...
XGetGeometryStatus00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbDrawabledDrawable d,	// Specifies the drawable, ...tbWindow *root_returnWindow *root_return,	// Returns the root window.tbint *x_returnint * x_return,	// Return the x and y coordinates that define the ...tbint *y_returnint * y_return,	// Return the x and y coordinates that define the ...tbunsigned int *width_returnunsigned int * width_return,	// Return the drawable's dimensions (width and ...tbunsigned int *height_returnunsigned int * height_return,	// Return the drawable's dimensions (width and ...tbunsigned int *border_width_returnunsigned int *border_width_return,	// Returns the border width in pixels.tbunsigned int *depth_returnunsigned int *depth_return	// Returns the depth of the drawable (bits per ...
XGetIconNameStatus00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbWindowwWindow w,	// Specifies the window.tbchar **icon_name_returnchar **icon_name_return	// Returns the window's icon name, ...
XGetIconSizesStatus00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbWindowwWindow w,	// Specifies the window.tbXIconSize **size_list_returnXIconSize **size_list_return,	// Returns the size list.tbint *count_returnint *count_return	// Returns the number of items in the size list.
XGetICValueschar *00tbXICicXIC ic	// Specifies the input context.
XGetImageXImage *00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbDrawabledDrawable d,	// Specifies the drawable.tbintxint x,	// Specify the x and y coordinates, ...tbintyint y,	// Specify the x and y coordinates, ...tbunsigned intwidthunsigned int width,	// Specify the width and height of the subimage, ...tbunsigned intheightunsigned int height,	// Specify the width and height of the subimage, ...tbunsigned longplane_maskunsigned long plane_mask,	// Specifies the plane mask.rbintXYPixmapZPixmapint format	// Specifies the format for the image.
XGetIMValueschar *00tbXIMimXIM im	// Specifies the input method.
XGetInputFocusXGetInputFocus00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbWindow *focus_returnWindow *focus_return,	// Returns the focus window, PointerRoot, ...tbint *revert_to_returnint *revert_to_return	// Returns the current focus state (RevertToParent, ...
XGetKeyboardControlXGetKeyboardControl00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbXKeyboardState *values_returnXKeyboardState *values_return	// Returns the current keyboard controls in the ...
XGetKeyboardMappingKeySym *00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbKeyCodefirst_keycodeKeyCode first_keycode,	// Specifies the first KeyCode that is to be ...tbintkeycode_countint keycode_count,	// Specifies the number of KeyCodes that are to be ...tbint *keysyms_per_keycode_returnint *keysyms_per_keycode_return	// Returns the number of KeySyms per KeyCode.
XGetModifierMappingXModifierKeymap *00tbDisplay *displayDisplay *display	// Specifies the connection to the X server.
XGetMotionEventsXTimeCoord *00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbWindowwWindow w,	// Specifies the window the window the event is to ...tbTimestartTime start,	// Specify the time interval in which the events ...tbTimestopTime stop,	// Specify the time interval in which the events ...tbint *nevents_returnint *nevents_return	// Returns the number of events from the motion ...
XGetOCValueschar *00tbXOCocXOC oc	// Specifies the output context.
XGetOMValueschar *00tbXOMomXOM om	// Specifies the output method.
XGetPixelunsigned long00tbXImage *ximageXImage *ximage,	// Specifies the image.tbintxint x,	// Specify the x and y coordinates.tbintyint y	// Specify the x and y coordinates.
XGetPointerControlXGetPointerControl00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbint *accel_numerator_returnint * accel_numerator_return,	// Returns the numerator for the acceleration  ...tbint *accel_denominator_returnint *accel_denominator_return,	// Returns the denominator for the acceleration ...tbint *threshold_returnint *threshold_return	// Returns the acceleration threshold.
XGetPointerMappingint00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbunsigned char []map_returnunsigned char map_return[],	// Returns the mapping list.tbintnmapint nmap	// Specifies the number of items in the mapping ...
XGetRGBColormapsStatus00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbWindowwWindow w,	// Specifies the window.tbXStandardColormap **std_colormap_returnXStandardColormap **std_colormap_return,	// Returns the XStandardColormap structure.tbint *count_returnint *count_return,	// Returns the number of colormaps.tbAtompropertyAtom property	// Specifies the property name.
XGetScreenSaverXGetScreenSaver00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbint *timeout_returnint * timeout_return,	// Returns the timeout, in seconds, ...tbint *interval_returnint * interval_return,	// Returns the interval between screen saver  ...tbint *prefer_blanking_returnint *prefer_blanking_return,	// Returns the current screen blanking preference ...tbint *allow_exposures_returnint *allow_exposures_return	// Returns the current screen save control value ...
XGetSelectedExtensionEventsXGetSelectedExtensionEvents00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbWindowwWindow w,	// Specifies  the  window  whose  events  you are ...tbintthis_client_event_count_returnint this_client_event_count_return,	// Returns the count of event classes selected by ...tbXEventClass *this_client_event_list_returnXEventClass *this_client_event_list_return,	// Returns a pointer to the list of event classes ...tbintall_clients_event_count_returnint all_clients_event_count_return,	// Returns the count of event classes selected by ...tbXEventClass *all_clients_event_list_returnXEventClass *all_clients_event_list_return	// Returns a pointer to the list of event classes ...
XGetSelectionOwnerWindow00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbAtomselectionAtom selection	// Specifies the selection atom.
XGetSubImageXImage *00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbDrawabledDrawable d,	// Specifies the drawable.tbintxint x,	// Specify the x and y coordinates, ...tbintyint y,	// Specify the x and y coordinates, ...tbunsigned intwidthunsigned int width,	// Specify the width and height of the subimage, ...tbunsigned intheightunsigned int height,	// Specify the width and height of the subimage, ...tbunsigned longplane_maskunsigned long plane_mask,	// Specifies the plane mask.rbintXYPixmapZPixmapint format,	// Specifies the format for the image.tbXImage *dest_imageXImage *dest_image,	// Specifies the destination image.tbintdest_xint dest_x,	// Specify the x and y coordinates, ...tbintdest_yint dest_y	// Specify the x and y coordinates, ...
XGetTextPropertyStatus00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbWindowwWindow w,	// Specifies the window.tbXTextProperty *text_prop_returnXTextProperty *text_prop_return,	// Returns the XTextProperty structure.tbAtompropertyAtom property	// Specifies the property name.
XGetTransientForHintStatus00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbWindowwWindow w,	// Specifies the window.tbWindow *prop_window_returnWindow *prop_window_return	// Returns the WM_TRANSIENT_FOR property of the ...
XGetVisualInfoXVisualInfo *00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tblongvinfo_masklong vinfo_mask,	// Specifies the visual mask value.tbXVisualInfo *vinfo_templateXVisualInfo *vinfo_template,	// Specifies the visual attributes that are to be ...tbint *nitems_returnint *nitems_return	// Returns the number of matching visual  ...
XGetWindowAttributesStatus00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbWindowwWindow w,	// Specifies the window whose current attributes ...tbXWindowAttributes *window_attributes_returnXWindowAttributes *window_attributes_return	// Returns the specified window's attributes in the ...
XGetWindowPropertyint00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbWindowwWindow w,	// Specifies the window whose property you want to ...tbAtompropertyAtom property,	// Specifies the property name.tblonglong_offsetlong long_offset,	// Specifies the offset in the specified property ...tblonglong_lengthlong long_length,	// Specifies the length in 32-bit multiples of the ...tbBooldeleteBool delete,	// Specifies a Boolean value that determines ...tbAtomreq_typeAtom req_type,	// Specifies the atom identifier associated with ...tbAtom *actual_type_returnAtom *actual_type_return,	// Returns the atom identifier  that defines the ...tbint *actual_format_returnint *actual_format_return,	// Returns the actual format of the property.tbunsigned long *nitems_returnunsigned long *nitems_return,	// Returns the actual number of 8-bit, 16-bit, ...tbunsigned long *bytes_after_returnunsigned long *bytes_after_return,	// Returns the number of bytes remaining to be read ...tbunsigned char **prop_returnunsigned char **prop_return	// Returns the data in the specified format.
XGetWMClientMachineStatus00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbWindowwWindow w,	// Specifies the window.tbXTextProperty *text_prop_returnXTextProperty *text_prop_return	// Returns the XTextProperty structure.
XGetWMColormapWindowsStatus00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbWindowwWindow w,	// Specifies the window.tbWindow **colormap_windows_returnWindow **colormap_windows_return,	// Returns the list of windows.tbint *count_returnint *count_return	// Returns the number of windows in the list.
XGetWMHintsXWMHints *00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbWindowwWindow w	// Specifies the window.
XGetWMIconNameStatus00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbWindowwWindow w,	// Specifies the window.tbXTextProperty *text_prop_returnXTextProperty *text_prop_return	// Returns the XTextProperty structure.
XGetWMNameStatus00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbWindowwWindow w,	// Specifies the window.tbXTextProperty *text_prop_returnXTextProperty *text_prop_return	// Returns the XTextProperty structure.
XGetWMNormalHintsStatus00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbWindowwWindow w,	// Specifies the window.tbXSizeHints *hints_returnXSizeHints *hints_return,	// Returns the size hints for the window in its ...tblong *supplied_returnlong *supplied_return	// Returns the hints that were supplied by the ...
XGetWMProtocolsStatus00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbWindowwWindow w,	// Specifies the window.tbAtom **protocols_returnAtom **protocols_return,	// Returns the list of protocols.tbint *count_returnint *count_return	// Returns the number of protocols in the list.
XGetWMSizeHintsStatus00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbWindowwWindow w,	// Specifies the window.tbXSizeHints *hints_returnXSizeHints *hints_return,	// Returns the size hints for the window in its ...tblong *supplied_returnlong *supplied_return,	// Returns the hints that were supplied by the ...tbAtompropertyAtom property	// Specifies the property name.
XGrabButtonXGrabButton00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbunsigned intbuttonunsigned int button,	// Specifies the pointer button that is to be ...tbunsigned intShiftMapIndexLockMapIndexControlMapIndexMod1MapIndexMod2MapIndexMod3MapIndexMod4MapIndexMod5MapIndexunsigned int modifiers,	// Specifies the set of keymasks or AnyModifier.tbWindowgrab_windowWindow grab_window,	// Specifies the grab window.tbBoolowner_eventsBool owner_events,	// Specifies a Boolean value that indicates whether ...xbunsigned intNoEventMaskKeyPressMaskKeyReleaseMaskButtonPressMaskButtonReleaseMaskEnterWindowMaskLeaveWindowMaskPointerMotionMaskPointerMotionHintMaskButton1MotionMaskButton2MotionMaskButton3MotionMaskButton4MotionMaskButton5MotionMaskButtonMotionMaskKeymapStateMaskExposureMaskVisibilityChangeMaskStructureNotifyMaskResizeRedirectMaskSubstructureNotifyMaskSubstructureRedirectMaskFocusChangeMaskPropertyChangeMaskColormapChangeMaskOwnerGrabButtonMaskunsigned int event_mask,	// Specifies which pointer events are reported to ...rbintGrabModeAsyncGrabModeSyncint pointer_mode,	// Specifies further processing of pointer events.rbintGrabModeAsyncGrabModeSyncint keyboard_mode,	// Specifies further processing of keyboard events.tbWindowconfine_toWindow confine_to,	// Specifies the window to confine the pointer in ...tbCursorcursorCursor cursor	// Specifies the cursor that is to be displayed or ...
XGrabDeviceint00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbXDevice *deviceXDevice *device,	// Specifies  the  device  to   be   grabbed   or ...tbWindowgrab_windowWindow grab_window,	// Specifies  the id of a window to be associated ...tbBoolowner_eventsBool owner_events,	// Specifies  a  Boolean  value  that   indicates ...tbintevent_countint event_count,	// Specifies  the  number  of  elements  in   the ...tbXEventClass *event_listXEventClass *event_list,	// array.rbintGrabModeAsyncGrabModeSyncint this_device_mode,	// Specifies  further  processing  of events from ...rbintGrabModeAsyncGrabModeSyncint other_devices_mode,	// Specifies  further  processing  of events from ...tbTimetimeTime time	// Specifies  the  time.
XGrabDeviceButtonXGrabDeviceButton00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbXDevice *deviceXDevice *device,	// Specifies the device that is to be grabbed  or ...tbunsigned intbuttonunsigned int button,	// Specifies  the  device  button  that  is to be ...xbunsigned intShiftMapIndexLockMapIndexControlMapIndexMod1MapIndexMod2MapIndexMod3MapIndexMod4MapIndexMod5MapIndexunsigned int modifiers,	// Specifies the set of keymasks or  AnyModifier.tbXDevice *modifier_deviceXDevice *modifier_device,	// specifies the device whose modifiers are to be ...tbWindowgrab_windowWindow grab_window,	// Specifies the grab window.tbBoolowner_eventsBool owner_events,	// Specifies   a  Boolean  value  that  indicates ...tbunsigned intevent_countunsigned int event_count,	// Specifies the number of event classes  in  the ...tbXEventClass *event_listXEventClass *event_list,	// Specifies  which  events  are  reported to the ...rbintGrabModeAsyncGrabModeSyncint this_device_mode,	// Specifies further processing  of  events  from ...rbintGrabModeAsyncGrabModeSyncint other_devices_mode	// Specifies further processing  of  events  from ...
XGrabDeviceKeyXGrabDeviceKey00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbXDevice *deviceXDevice *device,	// Specifies  the device that is to be grabbed or ...tbunsigned intKeyunsigned int Key,	// Specifies the device Key that is to be grabbed ...xbunsigned intShiftMapIndexLockMapIndexControlMapIndexMod1MapIndexMod2MapIndexMod3MapIndexMod4MapIndexMod5MapIndexunsigned int modifiers,	// Specifies  the set of keymasks or AnyModifier.tbXDevice *modifier_deviceXDevice *modifier_device,	// Specifies the device whose modifiers are to be ...tbWindowgrab_windowWindow grab_window,	// Specifies the grab window.tbBoolowner_eventsBool owner_events,	// Specifies  a  Boolean  value  that   indicates ...tbunsigned intevent_countunsigned int event_count,	// Specifies  the  number of event classes in the ...tbXEventClassevent_listXEventClass event_list,	// Specifies which device events are reported  to ...rbintGrabModeAsyncGrabModeSyncint this_device_mode,	// Specifies  further  processing  of events from ...rbintGrabModeAsyncGrabModeSyncint other_devices_mode	// Specifies  further  processing  of events from ...
XGrabKeyXGrabKey00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbintkeycodeint keycode,	// Specifies the KeyCode or AnyKey.xbunsigned intShiftMapIndexLockMapIndexControlMapIndexMod1MapIndexMod2MapIndexMod3MapIndexMod4MapIndexMod5MapIndexunsigned int modifiers,	// Specifies the set of keymasks or AnyModifier.tbWindowgrab_windowWindow grab_window,	// Specifies the grab window.tbBoolowner_eventsBool owner_events,	// Specifies a Boolean value that indicates whether ...rbintGrabModeAsyncGrabModeSyncint pointer_mode,	// Specifies further processing of pointer events.rbintGrabModeAsyncGrabModeSyncint keyboard_mode	// Specifies further processing of keyboard events.
XGrabKeyboardint00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbWindowgrab_windowWindow grab_window,	// Specifies the grab window.tbBoolowner_eventsBool owner_events,	// Specifies a Boolean value that indicates whether ...rbintGrabModeAsyncGrabModeSyncint pointer_mode,	// Specifies further processing of pointer events.rbintGrabModeAsyncGrabModeSyncint keyboard_mode,	// Specifies further processing of keyboard events.tbTimetimeTime time	// Specifies the time.
XGrabPointerint00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbWindowgrab_windowWindow grab_window,	// Specifies the grab window.tbBoolowner_eventsBool owner_events,	// Specifies a Boolean value that indicates whether ...xbunsigned intNoEventMaskKeyPressMaskKeyReleaseMaskButtonPressMaskButtonReleaseMaskEnterWindowMaskLeaveWindowMaskPointerMotionMaskPointerMotionHintMaskButton1MotionMaskButton2MotionMaskButton3MotionMaskButton4MotionMaskButton5MotionMaskButtonMotionMaskKeymapStateMaskExposureMaskVisibilityChangeMaskStructureNotifyMaskResizeRedirectMaskSubstructureNotifyMaskSubstructureRedirectMaskFocusChangeMaskPropertyChangeMaskColormapChangeMaskOwnerGrabButtonMaskunsigned int event_mask,	// Specifies which pointer events are reported to ...rbintGrabModeAsyncGrabModeSyncint pointer_mode,	// Specifies further processing of pointer events.rbintGrabModeAsyncGrabModeSyncint keyboard_mode,	// Specifies further processing of keyboard events.tbWindowconfine_toWindow confine_to,	// Specifies the window to confine the pointer in ...tbCursorcursorCursor cursor,	// Specifies the cursor that is to be displayed ...tbTimetimeTime time	// Specifies the time.
XGrabServerXGrabServer00tbDisplay *displayDisplay *display	// Specifies the connection to the X server.
XIconifyWindowStatus00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbWindowwWindow w,	// Specifies the window.tbintscreen_numberint screen_number	// Specifies the appropriate screen number on the ...
XIfEventXIfEvent00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbXEvent *event_returnXEvent *event_return,	// Returns either a copy of or  the matched event's ...tbBool (*)()predicateBool (*predicate)(),	// Specifies the procedure that is to be called to ...tbXPointerargXPointer arg	// Specifies the user-supplied argument that will ...
XIMOfICXIM00tbXICicXIC ic	// Specifies the input context.
XInitImageStatus00tbXImage *imageXImage *image	// between the start of one scanline and the ...
XInitThreadsStatus00
XInsertModifiermapEntryXModifierKeymap *00tbXModifierKeymap *modmapXModifierKeymap *modmap,	// Specifies the XModifierKeymap structure.tbKeyCodekeycode_entryKeyCode keycode_entry,	// Specifies the KeyCode.rbintShiftMapIndexLockMapIndexControlMapIndexMod1MapIndexMod2MapIndexMod3MapIndexMod4MapIndexMod5MapIndexint modifier	// Specifies the modifier.
XInstallColormapXInstallColormap00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbColormapcolormapColormap colormap	// Specifies the colormap.
XInternalConnectionNumbersStatus00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbint **fd_returnint **fd_return,	// Returns the file descriptors.tbint *count_returnint *count_return	// Returns the number of file descriptors.
XInternAtomAtom00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbchar *atom_namechar *atom_name,	// Specifies the name associated with the atom you ...tbBoolonly_if_existsBool only_if_exists	// Specifies a Boolean value that indicates whether ...
XInternAtomsStatus00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbchar **nameschar **names,	// Specifies the array of atom names.tbintcountint count,	// Specifies the number of atom names in the array.tbBoolonly_if_existsBool only_if_exists,	// Specifies a Boolean value that indicates whether ...tbAtom *atoms_returnAtom *atoms_return	// Returns the atoms.
XIntersectRegionXIntersectRegion00tbRegionsraRegion sra,	// Specify the two regions with which you want to ...tbRegionsrbRegion srb,	// Specify the two regions with which you want to ...tbRegiondr_returnRegion dr_return	// Returns the result of the computation.
XKeycodeToKeysymKeySym00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbKeyCodekeycodeKeyCode keycode,	// Specifies the KeyCode.tbintindexint index	// Specifies the element of KeyCode vector.
XKeysymToKeycodeKeyCode00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbKeySymkeysymKeySym keysym	// Specifies the KeySym that is to be searched for ...
XKeysymToStringchar *00tbKeySymkeysymKeySym keysym	// Specifies the KeySym that is to be searched for ...
XKillClientXKillClient00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbXIDresourceXID resource	// Specifies any resource associated with the ...
XListDepthsint *00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbintscreen_numberint screen_number,	// Specifies the appropriate screen number on the ...tbint *count_returnint *count_return	// Returns the number of depths.
XListFontschar **00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbchar *patternchar *pattern,	// Specifies the null-terminated pattern string ...tbintmaxnamesint maxnames,	// Specifies the maximum number of names to be ...tbint *actual_count_returnint *actual_count_return	// Returns the actual number of font names.
XListFontsWithInfochar **00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbchar *patternchar *pattern,	// Specifies the null-terminated pattern string ...tbintmaxnamesint maxnames,	// Specifies the maximum number of names to be ...tbint *count_returnint *count_return,	// Returns the actual number of matched font names.tbXFontStruct **info_returnXFontStruct **info_return	// Returns the font information.
XListHostsXHostAddress *00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbint *nhosts_returnint *nhosts_return,	// Returns the number of hosts currently in the ...tbBool *state_returnBool *state_return	// Returns the state of the access control.
XListInputDevicesXDeviceInfo *00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbint *ndevices_returnint *ndevices_return	// Specifies a pointer to a  variable  where  the ...
XListInstalledColormapsColormap *00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbWindowwWindow w,	// Specifies the window that determines the screen.tbint *num_returnint *num_return	// Returns the number of currently installed  ...
XListPixmapFormatsXPixmapFormatValues *00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbint *count_returnint *count_return	// Returns the number of pixmap formats that are ...
XListPropertiesAtom *00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbWindowwWindow w,	// Specifies the window whose property you want to ...tbint *num_prop_returnint *num_prop_return	// Returns the length of the properties array.
XLoadFontFont00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbchar *namechar *name	// Specifies the name of the font, ...
XLoadQueryFontXFontStruct *00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbchar *namechar *name	// Specifies the name of the font, ...
XLocaleOfFontSetchar *00tbXFontSetfont_setXFontSet font_set	// Specifies the font set.
XLocaleOfIMchar *00tbXIMimXIM im	// Specifies the input method.
XLocaleOfOMchar *00tbXOMomXOM om	// Specifies the output method.
XLockDisplayvoid00tbDisplay *displayDisplay *display	// Specifies the connection to the X server.
XLookupColorStatus00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbColormapcolormapColormap colormap,	// Specifies the colormap.tbchar *color_namechar *color_name,	// Specifies the color name string (for example, ...tbXColor *exact_def_returnXColor * exact_def_return,	// Returns the exact RGB values.tbXColor *screen_def_returnXColor * screen_def_return	// Returns the closest RGB values provided by the ...
XLookupKeysymKeySym00tbXKeyEvent *key_eventXKeyEvent *key_event,	// Specifies the KeyPress or KeyRelease event.tbintindexint index	// Specifies the index into the KeySyms list for ...
XLookupStringint00tbXKeyEvent *event_structXKeyEvent *event_struct,	// Specifies the key event structure to be used.tbchar *buffer_returnchar *buffer_return,	// Returns the translated characters.tbintbytes_bufferint bytes_buffer,	// Specifies the length of the buffer.tbKeySym *keysym_returnKeySym *keysym_return,	// Returns the KeySym computed from the event if ...tbXComposeStatus *status_in_outXComposeStatus *status_in_out	// Specifies or returns the XComposeStatus  ...
XLowerWindowXLowerWindow00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbWindowwWindow w	// Specifies the window.
XMapRaisedXMapRaised00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbWindowwWindow w	// Specifies the window.
XMapSubwindowsXMapSubwindows00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbWindowwWindow w	// Specifies the window.
XMapWindowXMapWindow00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbWindowwWindow w	// Specifies the window.
XMaskEventXMaskEvent00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.xblongNoEventMaskKeyPressMaskKeyReleaseMaskButtonPressMaskButtonReleaseMaskEnterWindowMaskLeaveWindowMaskPointerMotionMaskPointerMotionHintMaskButton1MotionMaskButton2MotionMaskButton3MotionMaskButton4MotionMaskButton5MotionMaskButtonMotionMaskKeymapStateMaskExposureMaskVisibilityChangeMaskStructureNotifyMaskResizeRedirectMaskSubstructureNotifyMaskSubstructureRedirectMaskFocusChangeMaskPropertyChangeMaskColormapChangeMaskOwnerGrabButtonMasklong event_mask,	// Specifies the event mask.tbXEvent *event_returnXEvent *event_return	// Returns the matched event's associated  ...
XMatchVisualInfoStatus00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbintscreenint screen,	// Specifies the screen.tbintdepthint depth,	// Specifies the depth of the screen.tbintclassint class,	// Specifies the class of the screen.tbXVisualInfo *vinfo_returnXVisualInfo *vinfo_return	// Returns the matched visual information.
XMaxRequestSizelong00tbDisplay *displayDisplay *display	// Specifies the connection to the X server.
XmbDrawImageStringvoid00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbDrawabledDrawable d,	// Specifies the drawable.tbXFontSetfont_setXFontSet font_set,	// Specifies the font set.tbGCgcGC gc,	// Specifies the GC.tbintxint x,	// Specify the x and y coordinates.tbintyint y,	// Specify the x and y coordinates.tbchar *stringchar *string,	// Specifies the character string.tbintnum_bytesint num_bytes	// Specifies the number of bytes in the string ...
XmbDrawStringvoid00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbDrawabledDrawable d,	// Specifies the drawable.tbXFontSetfont_setXFontSet font_set,	// Specifies the font set.tbGCgcGC gc,	// Specifies the GC.tbintxint x,	// Specify the x and y coordinates.tbintyint y,	// Specify the x and y coordinates.tbchar *stringchar *string,	// Specifies the character string.tbintnum_bytesint num_bytes	// Specifies the number of bytes in the string ...
XmbDrawTextvoid00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbDrawabledDrawable d,	// Specifies the drawable.tbGCgcGC gc,	// Specifies the GC.tbintxint x,	// Specify the x and y coordinates.tbintyint y,	// Specify the x and y coordinates.tbXmbTextItem *itemsXmbTextItem *items,	// Specifies an array of text items.tbintnitemsint nitems	// Specifies the number of text items in the array.
XmbLookupStringint00tbXICicXIC ic,	// Specifies the input context.tbXKeyPressedEvent *eventXKeyPressedEvent *event,	// Specifies the key event to be used.tbchar *buffer_returnchar *buffer_return,	// Returns a multibyte string or wide character ...tbintbytes_bufferint bytes_buffer,	// Specifies space available in the return buffer.tbKeySym *keysym_returnKeySym *keysym_return,	// Returns the KeySym computed from the event if ...tbStatus *status_returnStatus *status_return	// Returns a value indicating what kind of data is ...
XmbResetICchar *00tbXICicXIC ic	// Specifies the input context.
XmbSetWMPropertiesvoid00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbWindowwWindow w,	// Specifies the window.tbchar *window_namechar *window_name,	// Specifies the window name, ...tbchar *icon_namechar *icon_name,	// Specifies the icon name, ...tbchar * []argvchar *argv[],	// Specifies the application's argument list.tbintargcint argc,	// Specifies the number of arguments.tbXSizeHints *normal_hintsXSizeHints *normal_hints,	// Specifies the size hints for the window in its ...tbXWMHints *wm_hintsXWMHints *wm_hints,	// Specifies the XWMHints structure to be used.tbXClassHint *class_hintsXClassHint *class_hints	// Specifies the XClassHint structure to be used.
XmbTextEscapementint00tbXFontSetfont_setXFontSet font_set,	// Specifies the font set.tbchar *stringchar *string,	// Specifies the character string.tbintnum_bytesint num_bytes	// Specifies the number of bytes in the string ...
XmbTextExtentsint00tbXFontSetfont_setXFontSet font_set,	// Specifies the font set.tbchar *stringchar *string,	// Specifies the character string.tbintnum_bytesint num_bytes,	// Specifies the number of bytes in the string ...tbXRectangle *overall_ink_returnXRectangle *overall_ink_return,	// Returns the overall ink dimensions.tbXRectangle *overall_logical_returnXRectangle *overall_logical_return	// Returns the overall logical dimensions.
XmbTextListToTextPropertyint00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbchar **listchar **list,	// Specifies a list of null-terminated character ...tbintcountint count,	// Specifies the number of strings specified.tbXICCEncodingStylestyleXICCEncodingStyle style,	// Specifies the manner in which the property is ...tbXTextProperty *text_prop_returnXTextProperty *text_prop_return	// Returns the XTextProperty structure.
XmbTextPerCharExtentsStatus00tbXFontSetfont_setXFontSet font_set,	// Specifies the font set.tbchar *stringchar *string,	// Specifies the character string.tbintnum_bytesint num_bytes,	// Specifies the number of bytes in the string ...tbXRectangle *ink_array_returnXRectangle *ink_array_return,	// Returns the ink dimensions for each character.tbXRectangle *logical_array_returnXRectangle *logical_array_return,	// Returns the logical dimensions for each  ...tbintarray_sizeint array_size,	// Specifies the size of ink_array_return and  ...tbint *num_chars_returnint *num_chars_return,	// Returns the number of characters in the string ...tbXRectangle *overall_ink_returnXRectangle *overall_ink_return,	// Returns the overall ink extents of the entire ...tbXRectangle *overall_logical_returnXRectangle *overall_logical_return	// Returns the overall logical extents of the ...
XmbTextPropertyToTextListint00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbXTextProperty *text_propXTextProperty *text_prop,	// Specifies the XTextProperty structure to be ...tbchar ***list_returnchar ***list_return,	// Returns a list of null-terminated character ...tbint *count_returnint *count_return	// Returns the number of strings.
XMoveResizeWindowXMoveResizeWindow00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbWindowwWindow w,	// Specifies the window to be reconfigured, moved, ...tbintxint x,	// Version 11                Release 6                           1 ...tbintyint y,	// Specify the x and y coordinates, ...tbunsigned intwidthunsigned int width,	// Specifies the width of the window border.tbunsigned intheightunsigned int height	// Specify the width and height, ...
XMoveWindowXMoveWindow00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbWindowwWindow w,	// Specifies the window to be reconfigured, moved, ...tbintxint x,	// Version 11                Release 6                           1 ...tbintyint y	// Specify the x and y coordinates, ...
XNewModifiermapXModifierKeymap *00tbintmax_keys_per_modint max_keys_per_mod	// Specifies the number of KeyCode entries  ...
XNextEventXNextEvent00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbXEvent *event_returnXEvent *event_return	// Returns the matched event's associated  ...
XNoOpXNoOp00tbDisplay *displayDisplay *display	// Specifies the connection to the X server.
XOffsetRegionXOffsetRegion00tbRegionrRegion r,	// Specifies the region.tbintdxint dx,	// Specify the x and y coordinates, ...tbintdyint dy	// Specify the x and y coordinates, ...
XOMOfOCXOM00tbXOCocXOC oc	// Specifies the output context.
XOpenDeviceXDevice *00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbXIDdevice_idXID device_id	// Specifies the id of the device to be opened ...
XOpenDisplayDisplay *00tbchar *display_namechar *display_name	// Specifies the hardware display name, ...
XOpenIMXIM00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbXrmDatabasedbXrmDatabase db,	// Specifies a pointer to the resource database.tbchar *res_namechar *res_name,	// Specifies the full resource name of the  ...tbchar *res_classchar *res_class	// Specifies the full class name of the  ...
XOpenOMXOM00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbXrmDatabasedbXrmDatabase db,	// Specifies a pointer to the resource database.tbchar *res_namechar *res_name,	// Specifies the full resource name of the  ...tbchar *res_classchar *res_class	// Specifies the full class name of the  ...
XParseColorStatus00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbColormapcolormapColormap colormap,	// Specifies the colormap.tbchar *specchar *spec,	// Specifies the color name string; case is ...tbXColor *exact_def_returnXColor *exact_def_return	// Returns the exact RGB values.
XParseGeometryint00tbchar *parsestringchar *parsestring,	// Specifies the string you want to parse.tbint *x_returnint * x_return,	// Return the x and y offsets.tbint *y_returnint * y_return,	// Return the x and y offsets.tbunsigned int *width_returnunsigned int * width_return,	// Return the width and height determined.tbunsigned int *height_returnunsigned int * height_return	// Return the width and height determined.
XPeekEventXPeekEvent00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbXEvent *event_returnXEvent *event_return	// Returns the matched event's associated  ...
XPeekIfEventXPeekIfEvent00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbXEvent *event_returnXEvent *event_return,	// Returns either a copy of or  the matched event's ...tbBool (*)()predicateBool (*predicate)(),	// Specifies the procedure that is to be called to ...tbXPointerargXPointer arg	// Specifies the user-supplied argument that will ...
XPendingint00tbDisplay *displayDisplay *display	// Specifies the connection to the X server.
XPointInRegionBool00tbRegionrRegion r,	// Specifies the region.tbintxint x,	// Specify the x and y coordinates, ...tbintyint y	// Specify the x and y coordinates, ...
XPolygonRegionRegion00tbXPoint []pointsXPoint points[],	// Specifies an array of points.tbintnint n,	// Specifies the number of points in the polygon.rbintEvenOddRuleWindingRuleint fill_rule	// Specifies the fill-rule you want to set for the ...
XProcessInternalConnectionvoid00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbintfdint fd	// Specifies the file descriptor.
XPutBackEventXPutBackEvent00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbXEvent *eventXEvent *event	// Specifies the event.
XPutImageXPutImage00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbDrawabledDrawable d,	// Specifies the drawable.tbGCgcGC gc,	// Specifies the GC.tbXImage *imageXImage *image,	// Specifies the image you want combined with the ...tbintsrc_xint src_x,	// Specifies the offset in X from the left edge of ...tbintsrc_yint src_y,	// Specifies the offset in Y from the top edge of ...tbintdest_xint dest_x,	// Specify the x and y coordinates, ...tbintdest_yint dest_y,	// Specify the x and y coordinates, ...tbunsigned intwidthunsigned int width,	// Specify the width and height of the subimage, ...tbunsigned intheightunsigned int height	// Specify the width and height of the subimage, ...
XPutPixelXPutPixel00tbXImage *ximageXImage *ximage,	// Specifies the image.tbintxint x,	// Specify the x and y coordinates.tbintyint y,	// Specify the x and y coordinates.tbunsigned longpixelunsigned long pixel	// Specifies the new pixel value.
XQueryBestCursorStatus00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbDrawabledDrawable d,	// Specifies the drawable, ...tbunsigned intwidthunsigned int width,	// Specify the width and heightof the cursor that ...tbunsigned intheightunsigned int height,	// Specify the width and heightof the cursor that ...tbunsigned int *width_returnunsigned int * width_return,	// Return the best width and height that is closest ...tbunsigned int *height_returnunsigned int * height_return	// Return the best width and height that is closest ...
XQueryBestSizeStatus00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbintclassint class,	// Specifies the class that you are interested in.tbDrawablewhich_screenDrawable which_screen,	// Specifies any drawable on the screen.tbunsigned intwidthunsigned int width,	// Specify the width and height.tbunsigned intheightunsigned int height,	// Specify the width and height.tbunsigned int *width_returnunsigned int * width_return,	// Return the width and height of the object best ...tbunsigned int *height_returnunsigned int * height_return	// Return the width and height of the object best ...
XQueryBestStippleStatus00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbDrawablewhich_screenDrawable which_screen,	// Specifies any drawable on the screen.tbunsigned intwidthunsigned int width,	// Specify the width and height.tbunsigned intheightunsigned int height,	// Specify the width and height.tbunsigned int *width_returnunsigned int * width_return,	// Return the width and height of the object best ...tbunsigned int *height_returnunsigned int * height_return	// Return the width and height of the object best ...
XQueryBestTileStatus00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbDrawablewhich_screenDrawable which_screen,	// Specifies any drawable on the screen.tbunsigned intwidthunsigned int width,	// Specify the width and height.tbunsigned intheightunsigned int height,	// Specify the width and height.tbunsigned int *width_returnunsigned int * width_return,	// Return the width and height of the object best ...tbunsigned int *height_returnunsigned int * height_return	// Return the width and height of the object best ...
XQueryColorXQueryColor00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbColormapcolormapColormap colormap,	// Specifies the colormap.tbXColor *def_in_outXColor *def_in_out	// Specifies and returns the RGB values for the ...
XQueryColorsXQueryColors00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbColormapcolormapColormap colormap,	// Specifies the colormap.tbXColor []defs_in_outXColor defs_in_out[],	// Specifies and returns an array of color  ...tbintncolorsint ncolors	// Specifies the number of XColor structures in the ...
XQueryDeviceStateXQueryDeviceState00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbXDevice *deviceXDevice *device	// Specifies the device  whose  state  is  to  be ...
XQueryFontXFontStruct *00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbXIDfont_IDXID font_ID	// Specifies the font ID or the GContext ID.
XQueryKeymapXQueryKeymap00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbchar []keys_returnchar keys_return[]	// Returns an array of bytes that identifies which ...
XQueryPointerBool00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbWindowwWindow w,	// Specifies the window.tbWindow *root_returnWindow * root_return,	// Returns the root window that the pointer is in.tbWindow *child_returnWindow * child_return,	// Returns the child window that the pointer is ...tbint *root_x_returnint * root_x_return,	// Return the pointer coordinates relative to the ...tbint *root_y_returnint * root_y_return,	// Return the pointer coordinates relative to the ...tbint *win_x_returnint * win_x_return,	// Return the pointer coordinates relative to the ...tbint *win_y_returnint * win_y_return,	// Return the pointer coordinates relative to the ...tbunsigned int *mask_returnunsigned int *mask_return	// Returns the current state of the modifier keys ...
XQueryTextExtentsXQueryTextExtents00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbXIDfont_IDXID font_ID,	// Specifies either the font ID or the GContext ID ...tbchar *stringchar *string,	// Specifies the character string.tbintncharsint nchars,	// Specifies the number of characters in the  ...tbint *direction_returnint *direction_return,	// Returns the value of the direction hint ...tbint *font_ascent_returnint * font_ascent_return,	// Returns the font ascent.tbint *font_descent_returnint * font_descent_return,	// Returns the font descent.tbXCharStruct *overall_returnXCharStruct *overall_return	// Returns the overall size in the specified ...
XQueryTextExtents16XQueryTextExtents1600tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbXIDfont_IDXID font_ID,	// Specifies either the font ID or the GContext ID ...tbXChar2b *stringXChar2b *string,	// Specifies the character string.tbintncharsint nchars,	// Specifies the number of characters in the  ...tbint *direction_returnint *direction_return,	// Returns the value of the direction hint ...tbint *font_ascent_returnint * font_ascent_return,	// Returns the font ascent.tbint *font_descent_returnint * font_descent_return,	// Returns the font descent.tbXCharStruct *overall_returnXCharStruct *overall_return	// Returns the overall size in the specified ...
XQueryTreeStatus00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbWindowwWindow w,	// Specifies the window whose list of children, ...tbWindow *root_returnWindow *root_return,	// Returns the root window.tbWindow *parent_returnWindow *parent_return,	// Returns the parent window.tbWindow **children_returnWindow **children_return,	// Returns the list of children.tbunsigned int *nchildren_returnunsigned int *nchildren_return	// Returns the number of children.
XRaiseWindowXRaiseWindow00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbWindowwWindow w	// Specifies the window.
XReadBitmapFileint00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbDrawabledDrawable d,	// Specifies the drawable that indicates the ...tbchar *filenamechar *filename,	// Specifies the file name to use.tbunsigned int *width_returnunsigned int * width_return,	// Return the width and height values of the read ...tbunsigned int *height_returnunsigned int * height_return,	// Return the width and height values of the read ...tbPixmap *bitmap_returnPixmap *bitmap_return,	// Returns the bitmap that is created.tbint *x_hot_returnint * x_hot_return,	// Return the hotspot coordinates.tbint *y_hot_returnint * y_hot_return	// Return the hotspot coordinates.
XReadBitmapFileDataint00tbchar *filenamechar *filename,	// Specifies the file name to use.tbunsigned int *width_returnunsigned int * width_return,	// Return the width and height values of the read ...tbunsigned int *height_returnunsigned int * height_return,	// Return the width and height values of the read ...tbunsigned char *data_returnunsigned char *data_return,	// Returns the bitmap data.tbint *x_hot_returnint * x_hot_return,	// Return the hotspot coordinates.tbint *y_hot_returnint * y_hot_return	// Return the hotspot coordinates.
XRecolorCursorXRecolorCursor00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbCursorcursorCursor cursor,	// Specifies the cursor.tbXColor *foreground_colorXColor * foreground_color,	// Specifies the RGB values for the foreground of ...tbXColor *background_colorXColor * background_color	// Specifies the RGB values for the background of ...
XReconfigureWMWindowStatus00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbWindowwWindow w,	// Specifies the window.tbintscreen_numberint screen_number,	// Specifies the appropriate screen number on the ...xbunsigned intCWXCWYCWWidthCWHeightCWBorderWidthCWSiblingCWStackModeunsigned int value_mask,	// Specifies which values are to be set using ...tbXWindowChanges *valuesXWindowChanges *values	// Specifies the XWindowChanges structure.
XRectInRegionint00tbRegionrRegion r,	// Specifies the region.tbintxint x,	// Specify the x and y coordinates, ...tbintyint y,	// Specify the x and y coordinates, ...tbunsigned intwidthunsigned int width,	// Specify the width and height, ...tbunsigned intheightunsigned int height	// Specify the width and height, ...
XRefreshKeyboardMappingXRefreshKeyboardMapping00tbXMappingEvent *event_mapXMappingEvent *event_map	// Specifies the mapping event that is to be used.
XRegisterIMInstantiateCallbackBool00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbXrmDatabasedbXrmDatabase db,	// Specifies a pointer to the resource database.tbchar *res_namechar *res_name,	// Specifies the full resource name of the  ...tbchar *res_classchar *res_class,	// Specifies the full class name of the  ...tbXIMProccallbackXIMProc  callback,	// Specifies a pointer to the input method  ...tbXPointer *client_dataXPointer *client_data	// Specifies the additional client data.
XRemoveConnectionWatchStatus00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbXWatchProcprocedureXWatchProc procedure,	// Specifies the procedure to be called.tbXPointerclient_dataXPointer client_data	// Specifies the additional client data.
XRemoveFromSaveSetXRemoveFromSaveSet00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbWindowwWindow w	// Specifies the window that you want to add or ...
XRemoveHostXRemoveHost00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbXHostAddress *hostXHostAddress *host	// Specifies the host that is to be added or ...
XRemoveHostsXRemoveHosts00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbXHostAddress *hostsXHostAddress *hosts,	// Specifies each host that is to be added or ...tbintnum_hostsint num_hosts	// Specifies the number of hosts.
XReparentWindowXReparentWindow00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbWindowwWindow w,	// Specifies the window.tbWindowparentWindow parent,	// Specifies the parent window.tbintxint x,	// Specify the x and y coordinatesof the position ...tbintyint y	// Specify the x and y coordinatesof the position ...
XResetScreenSaverXResetScreenSaver00tbDisplay *displayDisplay *display	// Specifies the connection to the X server.
XResizeWindowXResizeWindow00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbWindowwWindow w,	// Specifies the window to be reconfigured, moved, ...tbunsigned intwidthunsigned int width,	// Specifies the width of the window border.tbunsigned intheightunsigned int height	// Specify the width and height, ...
XResourceManagerStringchar *00tbDisplay *displayDisplay *display	// Specifies the connection to the X server.
XRestackWindowsXRestackWindows00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbWindow []windowsWindow windows[],	// Specifies an array containing the windows to be ...tbintnwindowsint nwindows	// Specifies the number of windows to be restacked.
XrmCombineDatabasevoid00tbXrmDatabasesource_dbXrmDatabase source_db,	// Specifies the resource database that is to be ...tbXrmDatabase *target_dbXrmDatabase *target_db,	// Specifies the resource database into which the ...tbBooloverrideBool override	// Overrides existing value ...
XrmCombineFileDatabaseStatus00tbchar *filenamechar *filename,	// Specifies the resource database file name.tbXrmDatabase *target_dbXrmDatabase *target_db,	// Specifies the resource database into which the ...tbBooloverrideBool override	// Overrides existing value ...
XrmDestroyDatabasevoid00tbXrmDatabasedatabaseXrmDatabase database	// Specifies the database that is to be used.
XrmEnumerateDatabaseBool00tbXrmDatabasedatabaseXrmDatabase database,	// Specifies the resource database.tbXrmNameListname_prefixXrmNameList name_prefix,	// Specifies the resource name prefix.tbXrmClassListclass_prefixXrmClassList class_prefix,	// Specifies the resource class prefix.tbintmodeint mode,	// Specifies the number of levels to enumerate.tbBool (*)()procBool (*proc)(),	// Specifies the procedure that is to be called for ...tbXPointerargXPointer arg	// Specifies the user-supplied argument that will ...
XrmGetDatabaseXrmDatabase00tbDisplay *displayDisplay *display	// Specifies the connection to the X server.
XrmGetFileDatabaseXrmDatabase00tbchar *filenamechar *filename	// Specifies the resource database file name.
XrmGetResourceBool00tbXrmDatabasedatabaseXrmDatabase database,	// Specifies the database that is to be used.tbchar *str_namechar *str_name,	// Specifies the fully qualified name of the value ...tbchar *str_classchar *str_class,	// Specifies the fully qualified class of the value ...tbchar **str_type_returnchar **str_type_return,	// Returns the representation type of the  ...tbXrmValue *value_returnXrmValue *value_return	// Returns the value in the database.
XrmGetStringDatabaseXrmDatabase00tbchar *datachar *data	// Specifies the database contents using a string.
XrmInitializevoid00
XrmLocaleOfDatabasechar *00tbXrmDatabasedatabaseXrmDatabase database	// Specifies the database that is to be used.
XrmMergeDatabasesvoid00tbXrmDatabasesource_dbXrmDatabase source_db,	// Specifies the resource database that is to be ...tbXrmDatabase *target_dbXrmDatabase *target_db	// Specifies the resource database into which the ...
XrmParseCommandvoid00tbXrmDatabase *databaseXrmDatabase *database,	// Specifies the resource database.tbXrmOptionDescListtableXrmOptionDescList table,	// Specifies the table of command line arguments to ...tbinttable_countint table_count,	// Specifies the number of entries in the table.tbchar *namechar *name,	// Specifies the application name.tbint *argc_in_outint *argc_in_out,	// Specifies the number of arguments and returns ...tbchar **argv_in_outchar **argv_in_out	// Specifies the command line arguments and returns ...
XrmPermStringToQuarkXrmQuark00tbchar *stringchar *string	// is desired.
XrmPutFileDatabasevoid00tbXrmDatabasedatabaseXrmDatabase database,	// Specifies the database that is to be used.tbchar *stored_dbchar *stored_db	// Specifies the file name for the stored database.
XrmPutLineResourcevoid00tbXrmDatabase *databaseXrmDatabase *database,	// Specifies the resource database.tbchar *linechar *line	// Specifies the resource name and value pair as a ...
XrmPutResourcevoid00tbXrmDatabase *databaseXrmDatabase *database,	// Specifies the resource database.tbchar *specifierchar *specifier,	// Specifies a complete or partial specification of ...tbchar *typechar *type,	// Specifies the type of the resource.tbXrmValue *valueXrmValue *value	// Specifies the value of the resource, ...
XrmPutStringResourcevoid00tbXrmDatabase *databaseXrmDatabase *database,	// Specifies the resource database.tbchar *specifierchar *specifier,	// Specifies a complete or partial specification of ...tbchar *valuechar *value	// Specifies the value of the resource, ...
XrmQGetResourceBool00tbXrmDatabasedatabaseXrmDatabase database,	// Specifies the database that is to be used.tbXrmNameListquark_nameXrmNameList quark_name,	// Specifies the fully qualified name of the value ...tbXrmClassListquark_classXrmClassList quark_class,	// Specifies the fully qualified class of the value ...tbXrmRepresentation *quark_type_returnXrmRepresentation *quark_type_return,	// Returns the representation type of the  ...tbXrmValue *value_returnXrmValue *value_return	// Returns the value in the database.
XrmQGetSearchListBool00tbXrmDatabasedatabaseXrmDatabase database,	// Specifies the database that is to be used.tbXrmNameListnamesXrmNameList names,	// Specifies a list of resource names.tbXrmClassListclassesXrmClassList classes,	// Specifies a list of resource classes.tbXrmSearchListlist_returnXrmSearchList list_return,	// Returns a search list for further use.tbintlist_lengthint list_length	// Specifies the number of entries (not the byte ...
XrmQGetSearchResourceBool00tbXrmSearchListlistXrmSearchList list,	// Specifies the search list returned by ...tbXrmNamenameXrmName name,	// Specifies the resource name.tbXrmClassclassXrmClass class,	// Specifies the resource class.tbXrmRepresentation *type_returnXrmRepresentation *type_return,	// Returns data representation type.tbXrmValue *value_returnXrmValue *value_return	// Returns the value in the database.
XrmQPutResourcevoid00tbXrmDatabase *databaseXrmDatabase *database,	// Specifies the resource database.tbXrmBindingListbindingsXrmBindingList bindings,	// Specifies a list of bindings.tbXrmQuarkListquarksXrmQuarkList quarks,	// Specifies the complete or partial name or the ...tbXrmRepresentationtypeXrmRepresentation type,	// Specifies the type of the resource.tbXrmValue *valueXrmValue *value	// Specifies the value of the resource, ...
XrmQPutStringResourcevoid00tbXrmDatabase *databaseXrmDatabase *database,	// Specifies the resource database.tbXrmBindingListbindingsXrmBindingList bindings,	// Specifies a list of bindings.tbXrmQuarkListquarksXrmQuarkList quarks,	// Specifies the complete or partial name or the ...tbchar *valuechar *value	// Specifies the value of the resource, ...
XrmQuarkToStringchar *00tbXrmQuarkquarkXrmQuark quark	// Specifies the quark for which the equivalent ...
XrmSetDatabasevoid00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbXrmDatabasedatabaseXrmDatabase database	// Specifies the database that is to be used.
XrmStringToBindingQuarkListXrmStringToBindingQuarkList00tbchar *stringchar *string,	// is desired.tbXrmBindingListbindings_returnXrmBindingList bindings_return,	// Returns the binding list.tbXrmQuarkListquarks_returnXrmQuarkList quarks_return	// Returns the list of quarks.
XrmStringToQuarkXrmQuark00tbchar *stringchar *string	// is desired.
XrmStringToQuarkListvoid00tbchar *stringchar *string,	// is desired.tbXrmQuarkListquarks_returnXrmQuarkList quarks_return	// Returns the list of quarks.
XrmUniqueQuarkXrmQuark00
XRotateBuffersXRotateBuffers00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbintrotateint rotate	// Specifies how much to rotate the cut buffers.
XRotateWindowPropertiesXRotateWindowProperties00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbWindowwWindow w,	// Specifies the window whose property you want to ...tbAtom []propertiesAtom properties[],	// Specifies the array of properties that are to be ...tbintnum_propint num_prop,	// Specifies the length of the properties array.tbintnpositionsint npositions	// Specifies the rotation amount.
XSaveContextint00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbXIDridXID rid,	// Specifies the resource ID with which the data is ...tbXContextcontextXContext context,	// Specifies the context type to which the data ...tbXPointerdataXPointer data	// Specifies the data to be associated with the ...
XScreenNumberOfScreenint00tbScreen *screenScreen *screen	// Specifies the appropriate Screen structure.
XScreenResourceStringchar *00tbScreen *screenScreen *screen	// Specifies the screen.
XSelectExtensionEventXSelectExtensionEvent00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbWindowwWindow w,	// Specifies  the  window  whose  events  you are ...tbXEventClass *event_listXEventClass *event_list,	// Specifies  the  list  of  event  classes  that ...tbintevent_countint event_count	// Specifies  the  count  of event classes in the ...
XSelectInputXSelectInput00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbWindowwWindow w,	// Specifies the window whose events you are  ...xblongNoEventMaskKeyPressMaskKeyReleaseMaskButtonPressMaskButtonReleaseMaskEnterWindowMaskLeaveWindowMaskPointerMotionMaskPointerMotionHintMaskButton1MotionMaskButton2MotionMaskButton3MotionMaskButton4MotionMaskButton5MotionMaskButtonMotionMaskKeymapStateMaskExposureMaskVisibilityChangeMaskStructureNotifyMaskResizeRedirectMaskSubstructureNotifyMaskSubstructureRedirectMaskFocusChangeMaskPropertyChangeMaskColormapChangeMaskOwnerGrabButtonMasklong event_mask	// Specifies the event mask.
XSendEventStatus00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbWindowwWindow w,	// Specifies the window the window the event is to ...tbBoolpropagateBool propagate,	// Specifies a Boolean value.xblongNoEventMaskKeyPressMaskKeyReleaseMaskButtonPressMaskButtonReleaseMaskEnterWindowMaskLeaveWindowMaskPointerMotionMaskPointerMotionHintMaskButton1MotionMaskButton2MotionMaskButton3MotionMaskButton4MotionMaskButton5MotionMaskButtonMotionMaskKeymapStateMaskExposureMaskVisibilityChangeMaskStructureNotifyMaskResizeRedirectMaskSubstructureNotifyMaskSubstructureRedirectMaskFocusChangeMaskPropertyChangeMaskColormapChangeMaskOwnerGrabButtonMasklong event_mask,	// Specifies the event mask.tbXEvent *event_sendXEvent *event_send	// Specifies the event that is to be sent.
XSendExtensionEventStatus00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbXDevice *deviceXDevice *device,	// Specifies the device from which the events are ...tbWindowdestinationWindow destination,	// Specifies the window the event is to  be  sent ...tbBoolpropagateBool propagate,	// Specifies a Boolean value that is either  True ...tbintevent_countint event_count,	// Specifies   the   count  of  XEventClasses  in ...tbXEventClass *event_listXEventClass *event_list,	// Specifies the list of event selections  to  be ...tbXEvent *event_sendXEvent *event_send	// Specifies a pointer to the event that is to be ...
XSetAccessControlXSetAccessControl00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.rbintEnableAccessDisableAccessint mode	// Specifies the mode.
XSetAfterFunctionint *00tbDisplay *displayDisplay * display,	// Specifies the connection to the X servertbint (*)()procedureint (*procedure)()
XSetArcModeXSetArcMode00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbGCgcGC gc,	// Specifies the GC.rbintArcChordArcPieSliceint arc_mode	// Specifies the arc mode.
XSetBackgroundXSetBackground00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbGCgcGC gc,	// Specifies the GC.tbunsigned longbackgroundunsigned long background	// Specifies the background you want to set for the ...
XSetClassHintXSetClassHint00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbWindowwWindow w,	// Specifies the window.tbXClassHint *class_hintsXClassHint *class_hints	// Specifies the XClassHint structure that is to be ...
XSetClipMaskXSetClipMask00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbGCgcGC gc,	// Specifies the GC.tbPixmappixmapPixmap pixmap	// Specifies the pixmap or None.
XSetClipOriginXSetClipOrigin00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbGCgcGC gc,	// Specifies the GC.tbintclip_x_originint clip_x_origin,	// Specify the x and y coordinates of the clip-mask ...tbintclip_y_originint clip_y_origin	// Specify the x and y coordinates of the clip-mask ...
XSetClipRectanglesXSetClipRectangles00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbGCgcGC gc,	// Specifies the GC.tbintclip_x_originint clip_x_origin,	// Specify the x and y coordinates of the clip-mask ...tbintclip_y_originint clip_y_origin,	// Specify the x and y coordinates of the clip-mask ...tbXRectangle []rectanglesXRectangle rectangles[],	// Specifies an array of rectangles that define the ...tbintnint n,	// Specifies the number of rectangles.rbintUnsortedYSortedYXSortedYXBandedint ordering	// Specifies the ordering relations on the  ...
XSetCloseDownModeXSetCloseDownMode00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.rbintDestroyAllRetainPermanentRetainTemporaryint close_mode	// Specifies the client close-down mode.
XSetCommandXSetCommand00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbWindowwWindow w,	// Specifies the window.tbchar **argvchar **argv,	// Specifies the application's argument list.tbintargcint argc	// Specifies the number of arguments.
XSetDashesXSetDashes00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbGCgcGC gc,	// Specifies the GC.tbintdash_offsetint dash_offset,	// Specifies the phase of the pattern for the ...tbchar []dash_listchar dash_list[],	// Specifies the dash-list for the dashed  ...tbintnint n	// Specifies the number of elements in dash_list.
XSetDeviceButtonMappingint00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbXDevice *deviceXDevice *device,	// Specifies  the  device whose button mapping is ...tbunsigned char []mapunsigned char map[],	// Specifies the mapping list.tbintnmapint nmap	// Specifies the number of items in  the  mapping ...
XSetDeviceFocusXSetDeviceFocus00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbDisplay *deviceDisplay *device,	// Specifies  the  device  whose  focus  is to be ...tbWindowfocusWindow focus,	// Specifies the window, PointerRoot, ...rbintRevertToParentRevertToPointerRootRevertToFollowKeyboardRevertToNoneint revert_to,	// Specifies where the input focus reverts to  if ...tbTimetimeTime time	// Specifies  the  time.
XSetDeviceModeXSetDeviceMode00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbXDevice *deviceXDevice *device,	// Specifies  the  device  whose  mode  is  to be ...rbintAbsoluteRelativeint mode	// Specifies the mode.
XSetDeviceModifierMappingXSetDeviceModifierMapping00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbXDevice *deviceXDevice *device,	// Specifies the device whose modifier mapping is ...tbXModifierKeymap  *modmapXModifierKeymap  *modmap	// Specifies  a  pointer  to  the XModifierKeymap ...
XSetDeviceValuatorsXSetDeviceValuators00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbXDevice *deviceXDevice *device,	// Specifies the device whose valuators are to be ...tbint *valuatorsint *valuators,	// Specifies a pointer to  an  array  of  integer ...tbintfirst_valuatorint first_valuator,	// Specifies the first valuator to be set.tbintnum_valuatorsint num_valuators	// Specifies the number of valuators to be set.
XSetErrorHandlerint *00tbint (*)()int (*handler)(Display *, XErrorEvent *)	// Specifies the program's supplied error handler.
XSetFillRuleXSetFillRule00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbGCgcGC gc,	// Specifies the GC.rbintEvenOddRuleWindingRuleint fill_rule	// Specifies the fill-rule you want to set for the ...
XSetFillStyleXSetFillStyle00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbGCgcGC gc,	// Specifies the GC.rbintFillSolidFillTiledFillStippledFillOpaqueStippledint fill_style	// Specifies the fill-style you want to set for the ...
XSetFontXSetFont00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbGCgcGC gc,	// Specifies the GC.tbFontfontFont font	// Specifies the font.
XSetFontPathXSetFontPath00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbchar **directorieschar **directories,	// Specifies the directory path used to look for a ...tbintndirsint ndirs	// Specifies the number of directories in the path.
XSetForegroundXSetForeground00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbGCgcGC gc,	// Specifies the GC.tbunsigned longforegroundunsigned long foreground	// Specifies the foreground you want to set for the ...
XSetFunctionXSetFunction00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbGCgcGC gc,	// Specifies the GC.xbintGCFunctionGCPlaneMaskGCForegroundGCBackgroundGCLineWidthGCLineStyleGCCapStyleGCJoinStyleGCFillStyleGCFillRuleGCTileGCStippleGCTileStipXOriginGCTileStipYOriginGCFontGCSubwindowModeGCGraphicsExposuresGCClipXOriginGCClipYOriginGCClipMaskGCDashOffsetGCDashListGCArcModeint function	// Specifies the function you want to set for the ...
XSetICFocusvoid00tbXICicXIC ic	// Specifies the input context.
XSetIconNameXSetIconName00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbWindowwWindow w,	// Specifies the window.tbchar *icon_namechar *icon_name	// Specifies the icon name, ...
XSetIconSizesXSetIconSizes00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbWindowwWindow w,	// Specifies the window.tbXIconSize *size_listXIconSize *size_list,	// Specifies the size list.tbintcountint count	// Specifies the number of items in the size list.
XSetICValueschar *00tbXICicXIC ic	// Specifies the input context.
XSetIMValueschar *00tbXIMimXIM im	// Specifies the input method.
XSetInputFocusXSetInputFocus00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbWindowfocusWindow focus,	// Specifies the window, PointerRoot, ...rbintRevertToParentRevertToPointerRootRevertToNoneint revert_to,	// Specifies where the input focus reverts to if ...tbTimetimeTime time	// Specifies the time.
XSetIOErrorHandlerint *00tbint (*)()int (*handler)(Display *)	// Specifies the program's supplied error handler.
XSetLineAttributesXSetLineAttributes00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbGCgcGC gc,	// Specifies the GC.tbunsigned intline_widthunsigned int line_width,	// Specifies the line-width you want to set for the ...rbintLineSolidLineOnOffDashLineDoubleDashint line_style,	// Specifies the line-style you want to set for the ...rbintCapNotLastCapButtCapRoundCapProjectingint cap_style,	// Specifies the line-style and cap-style you want ...rbintJoinMiterJoinRoundJoinBevelint join_style	// Specifies the line join-style you want to set ...
XSetLocaleModifierschar *00tbchar *modifier_listchar *modifier_list	// Specifies the modifiers.
XSetModifierMappingint00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbXModifierKeymap *modmapXModifierKeymap *modmap	// Specifies the XModifierKeymap structure.
XSetOCValueschar *00tbXOCocXOC oc	// Specifies the output context.
XSetOMValueschar *00tbXOMomXOM om	// Specifies the output method.
XSetPointerMappingint00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbunsigned char []mapunsigned char map[],	// Specifies the mapping list.tbintnmapint nmap	// Specifies the number of items in the mapping ...
XSetRegionXSetRegion00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbGCgcGC gc,	// Specifies the GC.tbRegionrRegion r	// Specifies the region.
XSetRGBColormapsvoid00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbWindowwWindow w,	// Specifies the window.tbXStandardColormap *std_colormapXStandardColormap *std_colormap,	// Specifies the XStandardColormap structure to be ...tbintcountint count,	// Specifies the number of colormaps.tbAtompropertyAtom property	// Specifies the property name.
XSetScreenSaverXSetScreenSaver00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbinttimeoutint timeout,	// Specifies the timeout, in seconds, ...tbintintervalint interval,	// Specifies the interval, in seconds, ...tbintprefer_blankingint prefer_blanking,	// Specifies how to enable screen blanking.tbintallow_exposuresint allow_exposures	// Specifies the screen save control values.
XSetSelectionOwnerXSetSelectionOwner00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbAtomselectionAtom selection,	// Specifies the selection atom.tbWindowownerWindow owner,	// Specifies the owner of the specified selection ...tbTimetimeTime time	// Specifies the time.
XSetStateXSetState00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbGCgcGC gc,	// Specifies the GC.tbunsigned longforegroundunsigned long foreground,	// Specifies the foreground you want to set for the ...tbunsigned longbackgroundunsigned long background,	// Specifies the background you want to set for the ...rbintGCFunctionGCPlaneMaskGCForegroundGCBackgroundGCLineWidthGCLineStyleGCCapStyleGCJoinStyleGCFillStyleGCFillRuleGCTileGCStippleGCTileStipXOriginGCTileStipYOriginGCFontGCSubwindowModeGCGraphicsExposuresGCClipXOriginGCClipYOriginGCClipMaskGCDashOffsetGCDashListGCArcModeint function,	// Specifies the function you want to set for the ...tbunsigned longplane_maskunsigned long plane_mask	// Specifies the plane mask.
XSetStippleXSetStipple00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbGCgcGC gc,	// Specifies the GC.tbPixmapstipplePixmap stipple	// Specifies the stipple you want to set for the ...
XSetSubwindowModeXSetSubwindowMode00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbGCgcGC gc,	// Specifies the GC.rbintClipByChildrenIncludeInferiorsint subwindow_mode	// Specifies the subwindow mode.
XSetTextPropertyvoid00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbWindowwWindow w,	// Specifies the window.tbXTextProperty *text_propXTextProperty *text_prop,	// Specifies the XTextProperty structure to be ...tbAtompropertyAtom property	// Specifies the property name.
XSetTileXSetTile00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbGCgcGC gc,	// Specifies the GC.tbPixmaptilePixmap tile	// Specifies the fill tile you want to set for the ...
XSetTransientForHintXSetTransientForHint00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbWindowwWindow w,	// Specifies the window.tbWindowprop_windowWindow prop_window	// Specifies the window that the WM_TRANSIENT_FOR ...
XSetTSOriginXSetTSOrigin00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbGCgcGC gc,	// Specifies the GC.tbintts_x_originint ts_x_origin,	// Specify the x and y coordinates of the tile and ...tbintts_y_originint ts_y_origin	// Specify the x and y coordinates of the tile and ...
XSetWindowBackgroundXSetWindowBackground00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbWindowwWindow w,	// Specifies the window.tbunsigned longbackground_pixelunsigned long background_pixel	// Specifies the pixel that is to be used for the ...
XSetWindowBackgroundPixmapXSetWindowBackgroundPixmap00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbWindowwWindow w,	// Specifies the window.tbPixmapbackground_pixmapPixmap background_pixmap	// Specifies the background pixmap, ParentRelative, ...
XSetWindowBorderXSetWindowBorder00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbWindowwWindow w,	// Specifies the window.tbunsigned longborder_pixelunsigned long border_pixel	// Specifies the entry in the colormap.
XSetWindowBorderPixmapXSetWindowBorderPixmap00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbWindowwWindow w,	// Specifies the window.tbPixmapborder_pixmapPixmap border_pixmap	// Specifies the border pixmap or CopyFromParent.
XSetWindowBorderWidthXSetWindowBorderWidth00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbWindowwWindow w,	// Specifies the window to be reconfigured, moved, ...tbunsigned intwidthunsigned int width	// Specifies the width of the window border.
XSetWindowColormapXSetWindowColormap00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbWindowwWindow w,	// Specifies the window.tbColormapcolormapColormap colormap	// Specifies the colormap.
XSetWMClientMachinevoid00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbWindowwWindow w,	// Specifies the window.tbXTextProperty *text_propXTextProperty *text_prop	// Specifies the XTextProperty structure to be ...
XSetWMColormapWindowsStatus00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbWindowwWindow w,	// Specifies the window.tbWindow *colormap_windowsWindow *colormap_windows,	// Specifies the list of windows.tbintcountint count	// Specifies the number of windows in the list.
XSetWMHintsXSetWMHints00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbWindowwWindow w,	// Specifies the window.tbXWMHints *wmhintsXWMHints *wmhints	// Specifies the XWMHints structure to be used.
XSetWMIconNamevoid00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbWindowwWindow w,	// Specifies the window.tbXTextProperty *text_propXTextProperty *text_prop	// Specifies the XTextProperty structure to be ...
XSetWMNamevoid00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbWindowwWindow w,	// Specifies the window.tbXTextProperty *text_propXTextProperty *text_prop	// Specifies the XTextProperty structure to be ...
XSetWMNormalHintsvoid00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbWindowwWindow w,	// Specifies the window.tbXSizeHints *hintsXSizeHints *hints	// Specifies the size hints for the window in its ...
XSetWMPropertiesvoid00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbWindowwWindow w,	// Specifies the window.tbXTextProperty *window_nameXTextProperty *window_name,	// Specifies the window name, ...tbXTextProperty *icon_nameXTextProperty *icon_name,	// Specifies the icon name, ...tbchar **argvchar **argv,	// Specifies the application's argument list.tbintargcint argc,	// Specifies the number of arguments.tbXSizeHints *normal_hintsXSizeHints *normal_hints,	// Specifies the size hints for the window in its ...tbXWMHints *wm_hintsXWMHints *wm_hints,	// Specifies the XWMHints structure to be used.tbXClassHint *class_hintsXClassHint *class_hints	// Specifies the XClassHint structure to be used.
XSetWMProtocolsStatus00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbWindowwWindow w,	// Specifies the window.tbAtom *protocolsAtom *protocols,	// Specifies the list of protocols.tbintcountint count	// Specifies the number of protocols in the list.
XSetWMSizeHintsvoid00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbWindowwWindow w,	// Specifies the window.tbXSizeHints *hintsXSizeHints *hints,	// Specifies the size hints for the window in its ...tbAtompropertyAtom property	// Specifies the property name.
XShrinkRegionXShrinkRegion00tbRegionrRegion r,	// Specifies the region.tbintdxint dx,	// Specify the x and y coordinates, ...tbintdyint dy	// Specify the x and y coordinates, ...
XStoreBufferXStoreBuffer00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbchar *byteschar *bytes,	// Specifies the bytes, ...tbintnbytesint nbytes,	// Specifies the number of bytes to be stored.tbintbufferint buffer	// Specifies the buffer in which you want to store ...
XStoreBytesXStoreBytes00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbchar *byteschar *bytes,	// Specifies the bytes, ...tbintnbytesint nbytes	// Specifies the number of bytes to be stored.
XStoreColorXStoreColor00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbColormapcolormapColormap colormap,	// Specifies the colormap.tbXColor *colorXColor *color	// Specifies the pixel and RGB values or the color ...
XStoreColorsXStoreColors00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbColormapcolormapColormap colormap,	// Specifies the colormap.tbXColor []colorXColor color[],	// Specifies the pixel and RGB values or the color ...tbintncolorsint ncolors	// Specifies the number of XColor structures in the ...
XStoreNameXStoreName00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbWindowwWindow w,	// Specifies the window.tbchar *window_namechar *window_name	// Specifies the window name, ...
XStoreNamedColorXStoreNamedColor00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbColormapcolormapColormap colormap,	// Specifies the colormap.tbchar *colorchar *color,	// Specifies the pixel and RGB values or the color ...tbunsigned longpixelunsigned long pixel,	// Specifies the entry in the colormap.xbintDoRedDoGreenDoBlueint flags	// Specifies which red, green, ...
XStringListToTextPropertyStatus00tbchar **listchar **list,	// Specifies the list of strings to be freed.tbintcountint count,	// Specifies the number of strings.tbXTextProperty *text_prop_returnXTextProperty *text_prop_return	// Returns the XTextProperty structure.
XStringToKeysymKeySym00tbchar *stringchar *string	// Specifies the name of the KeySym that is to be ...
XSubImageXImage *00tbXImage *ximageXImage *ximage,	// Specifies the image.tbintxint x,	// Specify the x and y coordinates.tbintyint y,	// Specify the x and y coordinates.tbunsigned intsubimage_widthunsigned int subimage_width,	// Specifies the width of the new subimage, ...tbunsigned intsubimage_heightunsigned int subimage_height	// Specifies the height of the new subimage, ...
XSubtractRegionXSubtractRegion00tbRegionsraRegion sra,	// Specify the two regions with which you want to ...tbRegionsrbRegion srb,	// Specify the two regions with which you want to ...tbRegiondr_returnRegion dr_return	// Returns the result of the computation.
XSupportsLocaleBool00
XSyncXSync00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbBooldiscardBool discard	// Specifies a Boolean value that indicates whether ...
XSynchronizeint *00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbBoolonoffBool onoff	// Specifies a Boolean value that indicates whether ...
XtAddActionsvoid00tbXtActionListactionsXtActionList actions,	// Specifies the action table to register.tbCardinalnum_actionsCardinal num_actions	// Specifies the number of entries in this action ...
XtAddCallbackvoid00tbWidgetwWidget w,	// Specifies the widget.tbStringcallback_nameString callback_name,	// Specifies the callback list to which the  ...tbXtCallbackProccallbackXtCallbackProc callback,	// Specifies the callback procedure.tbXtPointerclient_dataXtPointer client_data	// Specifies the argument that is to be passed to ...
XtAddCallbacksvoid00tbWidgetwWidget w,	// Specifies the widget.tbStringcallback_nameString callback_name,	// Specifies the callback list to which the  ...tbXtCallbackListcallbacksXtCallbackList callbacks	// Specifies the null-terminated list of callback ...
XtAddConvertervoid00tbStringfrom_typeString from_type,	// Specifies the source type.tbStringto_typeString to_type,	// Specifies the destination type.tbXtConverterconverterXtConverter converter,	// Specifies the type converter procedure.tbXtConvertArgListconvert_argsXtConvertArgList convert_args,	// Specifies how to compute the additional  ...tbCardinalnum_argsCardinal num_args	// Specifies the number of additional arguments to ...
XtAddEventHandlervoid00tbWidgetwWidget w,	// Specifies the widget for which this event  ...tbEventMaskevent_maskEventMask event_mask,	// Specifies the event mask for which to call or ...tbBooleannonmaskableBoolean nonmaskable,	// Specifies a Boolean value that indicates whether ...tbXtEventHandlerprocXtEventHandler proc,	// Specifies the procedure that is to be added or ...tbXtPointerclient_dataXtPointer client_data	// Specifies additional data to be passed to the ...
XtAddExposureToRegionvoid00tbXEvent *eventXEvent *event,	// Specifies a pointer to the Expose or  ...tbRegionregionRegion region	// Specifies the region object (as defined in ...
XtAddGrabvoid00tbWidgetwWidget w,	// Specifies the widget to add to or remove from ...tbBooleanexclusiveBoolean exclusive,	// Specifies whether user events should be  ...tbBooleanspring_loadedBoolean spring_loaded	// Specifies whether this widget was popped up ...
XtAddInputXtInputId00tbintsourceint source,	// Specifies the source file descriptor on a  ...tbXtPointerconditionXtPointer condition,	// Specifies the mask that indicates a read, write, ...tbXtInputCallbackProcprocXtInputCallbackProc proc,	// Specifies the procedure that is to be called ...tbXtPointerclient_dataXtPointer client_data	// Specifies the argument that is to be passed to ...
XtAddRawEventHandlervoid00tbWidgetwWidget w,	// Specifies the widget for which this event  ...xbEventMaskNoEventMaskKeyPressMaskKeyReleaseMaskButtonPressMaskButtonReleaseMaskEnterWindowMaskLeaveWindowMaskPointerMotionMaskPointerMotionHintMaskButton1MotionMaskButton2MotionMaskButton3MotionMaskButton4MotionMaskButton5MotionMaskButtonMotionMaskKeymapStateMaskExposureMaskVisibilityChangeMaskStructureNotifyMaskResizeRedirectMaskSubstructureNotifyMaskSubstructureRedirectMaskFocusChangeMaskPropertyChangeMaskColormapChangeMaskOwnerGrabButtonMaskEventMask event_mask,	// Specifies the event mask for which to call or ...tbBooleannonmaskableBoolean nonmaskable,	// Specifies a Boolean value that indicates whether ...tbXtEventHandlerprocXtEventHandler proc,	// Specifies the procedure that is to be added or ...tbXtPointerclient_dataXtPointer client_data	// Specifies additional data to be passed to the ...
XtAddTimeoutXtIntervalId00tbunsigned longintervalunsigned long interval,	// Specifies the timeout interval ...tbXtInputCallbackProcprocXtInputCallbackProc proc,	// Specifies the procedure that is to be called ...tbXtPointerclient_dataXtPointer client_data	// Specifies the argument that is to be passed to ...
XtAppAddActionHookXtActionHookId00tbXtAppContextapp_contextXtAppContext app_context,	// Specifies the application context.tbXtActionHookProcprocXtActionHookProc proc,	// Specifies the action hook procedure.tbXtPointerclient_dataXtPointer client_data	// Specifies appication-specific data ...
XtAppAddActionsvoid00tbXtAppContextapp_contextXtAppContext app_context,	// Specifies the application context.tbXtActionListactionsXtActionList actions,	// Specifies the action table to register.tbCardinalnum_actionsCardinal num_actions	// Specifies the number of entries in this action ...
XtAppAddBlockHookXtBlockHookId00tbXtAppContextapp_contextXtAppContext app_context,	// Specifies the application context.tbXtBlockHookProcprocXtBlockHookProc proc,	// Specifies the block hook procedure.tbXtPointerclient_dataXtPointer client_data	// Specifies application-specific data.
XtAppAddConvertervoid00tbXtAppContextapp_contextXtAppContext app_context,	// Specifies the application context.tbStringfrom_typeString from_type,	// Specifies the source type.tbStringto_typeString to_type,	// Specifies the destination type.tbXtConverterconverterXtConverter converter,	// Specifies the type converter procedure.tbXtConvertArgListconvert_argsXtConvertArgList convert_args,	// Specifies how to compute the additional  ...tbCardinalnum_argsCardinal num_args	// Specifies the number of additional arguments to ...
XtAppAddInputXtInputId00tbXtAppContextapp_contextXtAppContext app_context,	// Specifies the application context that  ...tbintsourceint source,	// Specifies the source file descriptor on a  ...tbXtPointerconditionXtPointer condition,	// Specifies the mask that indicates a read, write, ...tbXtInputCallbackProcprocXtInputCallbackProc proc,	// Specifies the procedure that is to be called ...tbXtPointerclient_dataXtPointer client_data	// Specifies the argument that is to be passed to ...
XtAppAddSignalXtSignalId00tbXtAppContextapp_contextXtAppContext app_context,	// Specifies the application context.tbXtInputCallbackProcprocXtInputCallbackProc proc,	// Specifies the procedure that is to be called ...tbXtPointerclient_dataXtPointer client_data	// Specifies the argument that is to be passed to ...
XtAppAddTimeOutXtIntervalId00tbXtAppContextapp_contextXtAppContext app_context,	// Specifies the application context for which the ...tbunsigned longintervalunsigned long interval,	// Specifies the time interval in milliseconds.tbXtTimerCallbackProcprocXtTimerCallbackProc proc,	// Specifies the procedure that is to be called ...tbXtPointerclient_dataXtPointer client_data	// Specifies the argument that is to be passed to ...
XtAppAddWorkProcXtWorkProcId00tbXtAppContextapp_contextXtAppContext app_context,	// Specifies the application context that  ...tbXtWorkProcprocXtWorkProc proc,	// Specifies the procedure that is.tbXtPointerclient_dataXtPointer client_data	// Specifies the argument that is to be passed to ...
XtAppCreateShellWidget00tbStringapplication_nameString application_name,	// Specifies the name of the application instance.tbStringapplication_classString application_class,	// Specifies the class name of this application.tbWidgetClasswidget_classWidgetClass widget_class,	// Specifies the widget class that the application ...tbDisplay *displayDisplay *display,	// Specifies the display from which to get the ...tbArgListargsArgList args,	// Specifies the argument list from which to get ...tbCardinalnum_argsCardinal num_args	// Specifies the number of arguments in the  ...
XtAppErrorvoid00tbXtAppContextapp_contextXtAppContext app_context,	// Specifies the application context.tbStringmessageString message	// Specifies the nonfatal error message that is to ...
XtAppErrorMsgvoid00tbXtAppContextapp_contextXtAppContext app_context,	// Specifies the application context.tbStringnameString name,	// Specifies the general kind of error.tbStringtypeString type,	// Specifies the detailed name of the error.tbStringclassString class,	// Specifies the resource class.tbStringdefaultString default,	// Specifies the default message to use.tbString *paramsString *params,	// Specifies a pointer to a list of values to be ...tbCardinal *num_paramsCardinal *num_params	// Specifies the number of values in the parameter ...
XtAppGetErrorDatabaseXrmDatabase *00tbXtAppContextapp_contextXtAppContext app_context	// Specifies the application context.
XtAppGetErrorDatabaseTextvoid00tbXtAppContextapp_contextXtAppContext app_context,	// Specifies the application context.tbchar *namechar * name,	// Specifies the name and type that are  ...tbchar *typechar * type,	// Specifies the name and type that are  ...tbchar *classchar * class,	// Specifies the resource class of the error  ...tbchar *defaultchar *default,	// Specifies the default message to use.tbchar *buffer_returnchar *buffer_return,	// Specifies the buffer into which the error  ...tbintnbytesint nbytes,	// Specifies the size of the buffer in bytes.tbXrmDatabasedatabaseXrmDatabase database	// Specifies the name of the alternative database ...
XtAppGetExitFlagBoolean00tbXtAppContextapp_contextXtAppContext app_context	// Specifies the application context.
XtAppGetSelectionTimeoutunsigned long00tbXtAppContextapp_contextXtAppContext app_context	// Specifies the application context.
XtAppInitializeWidget00tbXtAppContextapp_context_returnXtAppContext app_context_return,	// Specifies the application context.tbStringapplication_classString application_class,	// Specifies the class name of this application, ...tbXrmOptionDescRec*optionsXrmOptionDescRec* options,	// Specifies how to parse the command line for any ...tbCardinalnum_optionsCardinal num_options,	// Specifies the number of entries in the options ...tbint*argc_in_outint* argc_in_out,	// Specifies a pointer to the number of command ...tbString*argv_in_outString* argv_in_out,	// Specifies the command line parameters.tbString*fallback_resourcesString* fallback_resources,	// Specifies resource valus to be used if the ...tbArgListargsArgList args,	// Specifies the argument list to override any ...tbCardinalnum_argsCardinal num_args	// Specifies the number of entries in the argument ...
XtAppLockvoid00tbXtAppContextapp_contextXtAppContext app_context	// Specifies the application context.
XtAppMainLoopvoid00tbXtAppContextapp_contextXtAppContext app_context	// Specifies the application context that  ...
XtAppNextEventvoid00tbXtAppContextapp_contextXtAppContext app_context,	// Specifies the application context that  ...tbXEvent *event_returnXEvent *event_return	// Returns the event information to the specified ...
XtAppPeekEventBoolean00tbXtAppContextapp_contextXtAppContext app_context,	// Specifies the application context that  ...tbXEvent *event_returnXEvent *event_return	// Returns the event information to the specified ...
XtAppPendingXtInputMask00tbXtAppContextapp_contextXtAppContext app_context	// Specifies the application context that  ...
XtAppProcessEventvoid00tbXtAppContextapp_contextXtAppContext app_context,	// Specifies the application context that  ...xbXtInputMaskXtIMXEventXtIMTimerXtIMAlternateInputXtIMSignalXtInputMask mask	// Specifies what types of events to process.
XtAppReleaseCacheRefsvoid00tbXtAppContextapp_contextXtAppContext app_context,	// Specifies the application context.tbXtCacheRef*refsXtCacheRef* refs	// Specifies the list of cache references to be ...
XtAppSetErrorHandlervoid00tbXtAppContextapp_contextXtAppContext app_context,	// Specifies the application context.tbXtErrorHandlerhandlerXtErrorHandler handler	// Specifies the new fatal error procedure, ...
XtAppSetErrorMsgHandlervoid00tbXtAppContextapp_contextXtAppContext app_context,	// Specifies the application context.tbXtErrorMsgHandlermsg_handlerXtErrorMsgHandler msg_handler	// Specifies the new fatal error procedure, ...
XtAppSetExitFlagvoid00tbXtAppContextapp_contextXtAppContext app_context	// Specifies the application context.
XtAppSetFallbackResourcesvoid00tbXtAppContextapp_contextXtAppContext app_context,	// Specifies the application context.tbString*specification_listString* specification_list	// Specifies a NULL-terminated list of resource ...
XtAppSetSelectionTimeoutvoid00tbXtAppContextapp_contextXtAppContext app_context,	// Specifies the application context.tbunsigned longtimeoutunsigned long timeout	// Specifies the selection timeout in milliseconds.
XtAppSetTypeConvertervoid00tbXtAppContextapp_contextXtAppContext app_context,	// Specifies the application context.tbStringfrom_typeString from_type,	// Specifies the source type.tbStringto_typeString to_type,	// Specifies the destination type.tbXtConverterconverterXtConverter converter,	// Specifies the type converter procedure.tbXtConvertArgListconvert_argsXtConvertArgList convert_args,	// Specifies how to compute the additional  ...tbCardinalnum_argsCardinal num_args,	// Specifies the number of additional arguments to ...tbXtCacheTypecache_typeXtCacheType cache_type,	// Specifies whether or not resources produced by ...tbXtDestructordestructorXtDestructor destructor	// Specifies a destroy procedure for resources  ...
XtAppSetWarningHandlervoid00tbXtAppContextapp_contextXtAppContext app_context,	// Specifies the application context.tbXtErrorHandlerhandlerXtErrorHandler handler	// Specifies the new fatal error procedure, ...
XtAppSetWarningMsgHandlervoid00tbXtAppContextapp_contextXtAppContext app_context,	// Specifies the application context.tbXtErrorMsgHandlermsg_handlerXtErrorMsgHandler msg_handler	// Specifies the new fatal error procedure, ...
XtAppUnlockvoid00tbXtAppContextapp_contextXtAppContext app_context	// Specifies the application context.
XtAppWarningvoid00tbXtAppContextapp_contextXtAppContext app_context,	// Specifies the application context.tbStringmessageString message	// Specifies the nonfatal error message that is to ...
XtAppWarningMsgvoid00tbXtAppContextapp_contextXtAppContext app_context,	// Specifies the application context.tbStringnameString name,	// Specifies the general kind of error.tbStringtypeString type,	// Specifies the detailed name of the error.tbStringclassString class,	// Specifies the resource class.tbStringdefaultString default,	// Specifies the default message to use.tbString *paramsString *params,	// Specifies a pointer to a list of values to be ...tbCardinal *num_paramsCardinal *num_params	// Specifies the number of values in the parameter ...
XtAugmentTranslationsvoid00tbWidgetwWidget w,	// Specifies the widget into which the new  ...tbXtTranslationstranslationsXtTranslations translations	// Specifies the compiled translation table to ...
XtBuildEventMaskEventMask00tbWidgetwWidget w	// Specifies the widget.
XtCallAcceptFocusBoolean00tbWidgetwWidget w,	// Specifies the widget.tbTime *timeTime *time	// Specifies the X time of the event that is  ...
XtCallActionProcvoid00tbWidgetwidgetWidget widget,	// Specifies the widget in which the action is to ...tbStringactionString action,	// Specifies the name of the action routine.tbXEvent*eventXEvent* event,	// Specifies the contents of the event passed to ...tbString*paramsString* params,	// Specifies the contents of the params passed to ...tbCardinalnum_paramsCardinal num_params	// Specifies the num of entries in params.
XtCallbackExclusivevoid00tbWidgetwWidget w,	// Specifies the widget.tbXtPointerclient_dataXtPointer client_data,	// Specifies the pop-up shell.tbXtPointercall_dataXtPointer call_data	// Specifies the callback data, ...
XtCallbackNonevoid00tbWidgetwWidget w,	// Specifies the widget.tbXtPointerclient_dataXtPointer client_data,	// Specifies the pop-up shell.tbXtPointercall_dataXtPointer call_data	// Specifies the callback data, ...
XtCallbackNonexclusivevoid00tbWidgetwWidget w,	// Specifies the widget.tbXtPointerclient_dataXtPointer client_data,	// Specifies the pop-up shell.tbXtPointercall_dataXtPointer call_data	// Specifies the callback data, ...
XtCallbackPopdownvoid00tbWidgetwWidget w,	// Specifies the widget.tbXtPointerclient_dataXtPointer client_data,	// Specifies a pointer to the XtPopdownID  ...tbXtPointercall_dataXtPointer call_data	// Specifies the callback data, ...
XtCallCallbackListvoid00tbWidgetwWidget w,	// Specifies the widget.tbXtCallbackListcallbacksXtCallbackList callbacks,	// Specifies the callback list to be executed.tbXtPointercall_dataXtPointer call_data	// Specifies a callback-list specific data value to ...
XtCallCallbacksvoid00tbWidgetwWidget w,	// Specifies the widget.tbStringcallback_nameString callback_name,	// Specifies the callback list to be executed or ...tbXtPointercall_dataXtPointer call_data	// Specifies a callback-list specific data value to ...
XtCallConvertervoid00tbDisplay*dpyDisplay* dpy,	// Specifies the display with which the conversion ...tbXtConverterconverterXtConverter converter,	// Specifies the conversion procedure that is to be ...tbXrmValuePtrargsXrmValuePtr args,	// Specifies the argument list that contains the ...tbCardinalnum_argsCardinal num_args,	// Specifies the number of additional arguments ...tbXrmValuePtrfromXrmValuePtr from,	// Specifies the value to be converted.tbXrmValuePtrto_in_outXrmValuePtr to_in_out,	// Returns the converted value.tbXtCacheRef*cache_ref_returnXtCacheRef* cache_ref_return	// is non-NULL, ...
XtCallocchar *00tbCardinalnumCardinal num,	// Specifies the number of bytes or array elements.tbCardinalsizeCardinal size	// Specifies the size of an array element (in ...
XtCancelSelectionRequestvoid00tbWidgetrequestorWidget requestor,	// Specifies the widget making the request.tbAtomselectionAtom selection	// Specifies the particular selection desired.
XtChangeManagedSetvoid00tbWidgetListunmanage_childrenWidgetList unmanage_children,	// Specifies the list of widget children to remove ...tbCardinalnum_unmanage_childrenCardinal num_unmanage_children,	// Specifies the number of entries in the  ...tbWidgetListmanage_childrenWidgetList manage_children,	// Specifies the list of widget children to add to ...tbCardinalnum_manage_childrenCardinal num_manage_children,	// Specifies the number of entries in the  ...tbXtCSMProcpost_unmanage_pre_manage_hookXtCSMProc post_unmanage_pre_manage_hook,	// Specifies the post unmanage, ...tbXtPointerclient_dataXtPointer client_data	// Specifies the client data to be passed to the ...
XtCheckSubclassvoid00tbWidgetwidgetWidget widget,	// is not a subclass, ...tbWidgetClasswidget_classWidgetClass widget_class,	// Specifies the widget class.tbStringmessageString message	// Specifies the message that is to be used.
XtClassWidgetClass00tbWidgetwWidget w	// Specifies the widget.
XtCloseDisplayvoid00tbDisplay *displayDisplay *display	// Specifies the display.
XtConfigureWidgetvoid00tbWidgetwWidget w,	// Specifies the widget.tbPositionxPosition x,	// Specify the new widget x and y coordinates.tbPositionyPosition y,	// Specify the new widget x and y coordinates.tbDimensionwidthDimension width,	// Specify the new widget size.tbDimensionheightDimension height,	// Specify the new widget size.tbDimensionborder_widthDimension border_width	// Specify the new widget size.
XtConvertvoid00tbWidgetwWidget w,	// Specifies the widget to use for additional  ...tbStringfrom_typeString from_type,	// Specifies the source type.tbXrmValuePtrfromXrmValuePtr from,	// Specifies the value to be converted.tbStringto_typeString to_type,	// Specifies the destination type.tbXrmValuePtrto_returnXrmValuePtr to_return	// Returns the converted value.
XtConvertAndStoreBoolean00tbWidgetwidgetWidget widget,	// Specifies the widget to use for additional  ...tbStringfrom_typeString from_type,	// Specifies the source type.tbXrmValuePtrfromXrmValuePtr from,	// Specifies the value to be converted.tbStringto_typeString to_type,	// Specifies the destination type.tbXrmValuePtrto_in_outXrmValuePtr to_in_out	// Returns the converted value.
XtConvertCasevoid00tbDisplay *displayDisplay *display,	// Specifies the display.tbKeySymkeysymKeySym keysym,	// Specifies the KeySym to convert.tbKeySym *lower_returnKeySym *lower_return,	// Returns the lowercase equivalent of the KeySym.tbKeySym *upper_returnKeySym *upper_return	// Returns the uppercase equivalent of the KeySym.
XtCreateApplicationContextXtAppContext00
XtCreateApplicationShellWidget00tbStringnameString name,	// Specifies the name of the shell.tbWidgetClasswidget_classWidgetClass widget_class,	// Specifies the widget class.tbArgListargsArgList args,	// Specifies the argument list to override any ...tbCardinalnum_argsCardinal num_args	// Specifies the number of arguments in the  ...
XtCreateManagedWidgetWidget00tbStringnameString name,	// Specifies the resource name for the created  ...tbWidgetClasswidget_classWidgetClass widget_class,	// Specifies the widget class.tbWidgetparentWidget parent,	// Specifies the parent widget.tbArgListargsArgList args,	// Specifies the argument list to override the ...tbCardinalnum_argsCardinal num_args	// Specifies the number of arguments in the  ...
XtCreatePopupShellWidget00tbStringnameString name,	// Specifies the text name for the created shell ...tbWidgetClasswidget_classWidgetClass widget_class,	// Specifies the widget class.tbWidgetparentWidget parent,	// Specifies the parent widget.tbArgListargsArgList args,	// Specifies the argument list to override the ...tbCardinalnum_argsCardinal num_args	// Specifies the number of arguments in the  ...
XtCreateSelectionRequestvoid00tbWidgetrequestorWidget requestor,	// Specifies the widget making the request.tbAtomselectionAtom selection	// Specifies the particular selection desired.
XtCreateWidgetWidget00tbStringnameString name,	// Specifies the resource name for the created  ...tbWidgetClasswidget_classWidgetClass widget_class,	// Specifies the widget class pointer for the ...tbWidgetparentWidget parent,	// Specifies the parent widget.tbArgListargsArgList args,	// Specifies the argument list to override the ...tbCardinalnum_argsCardinal num_args	// Specifies the number of arguments in the  ...
XtCreateWindowvoid00tbWidgetwWidget w,	// Specifies the widget that is used to set the x, ...tbunsigned intwindow_classunsigned int window_class,	// Specifies the Xlib window class (for example, ...tbVisual *visualVisual *visual,	// Specifies the visual type (usually ...tbXtValueMaskvalue_maskXtValueMask value_mask,	// Specifies which attribute fields to use.tbXSetWindowAttributes *attributesXSetWindowAttributes *attributes	// Specifies the window attributes to use in the ...
XtDatabaseXrmDatabase00tbDisplay *displayDisplay *display	// Specifies the display.
XtDestroyApplicationContextvoid00tbXtAppContextapp_contextXtAppContext app_context	// Specifies the application context.
XtDestroyWidgetvoid00tbWidgetwWidget w	// Specifies the widget.
XtDirectConvertvoid00tbXtConverterconverterXtConverter converter,	// Specifies the conversion procedure that is to be ...tbXrmValuePtrargsXrmValuePtr args,	// Specifies the argument list that contains the ...tbCardinalnum_argsCardinal num_args,	// Specifies the number of additional arguments ...tbXrmValuePtrfromXrmValuePtr from,	// Specifies the value to be converted.tbXrmValuePtrto_returnXrmValuePtr to_return	// Returns the converted value.
XtDisownSelectionvoid00tbWidgetwWidget w,	// Specifies the widget that wishes to become the ...tbAtomselectionAtom selection,	// Specifies an atom that describes the type of the ...tbTimetimeTime time	// Specifies the timestamp that indicates when the ...
XtDispatchEventBoolean00tbXEvent *eventXEvent *event	// Specifies a pointer to the event structure that ...
XtDispatchEventToWidgetBoolean00tbWidgetwidgetWidget widget,	// Specifies the widget for this event handler.tbXEvent*eventXEvent* event	// handler.
XtDisplayDisplay *00tbWidgetwWidget w	// Specifies the widget.
XtDisplayInitializevoid00tbXtAppContextapp_contextXtAppContext app_context,	// Specifies the application context.tbDisplay *displayDisplay *display,	// Specifies the display.tbStringapplication_nameString application_name,	// Specifies the name of the application instance.tbStringapplication_classString application_class,	// Specifies the class name of this application, ...tbXrmOptionDescRec *optionsXrmOptionDescRec *options,	// Specifies how to parse the command line for any ...tbCardinalnum_optionsCardinal num_options,	// Specifies the number of entries in the options ...tbint *argcint *argc,	// Specifies a pointer to the number of command ...tbString *argvString *argv	// Specifies the command line parameters.
XtDisplayOfObjectDisplay *00tbWidgetobjectWidget object	// Specifies the widget.
XtDisplayStringConversionWarningvoid00tbDisplay*displayDisplay* display,	// Specifies the displaly connection with which the ...tbStringfrom_valueString from_value,	// Specifies the string that could not be  ...tbStringto_typeString to_type	// Specifies the target representation type ...
XtDisplayToApplicationContextXtAppContext00tbDisplay*dpyDisplay* dpy	// Specifies the display that you want the  ...
XtErrorvoid00tbStringmessageString message	// Specifies the nonfatal error message that is to ...
XtErrorMsgvoid00tbStringnameString name,	// Specifies the general kind of error.tbStringtypeString type,	// Specifies the detailed name of the error.tbStringclassString class,	// Specifies the resource class.tbStringdefaultString default,	// Specifies the default message to use.tbString *paramsString *params,	// Specifies a pointer to a list of values to be ...tbCardinal *num_paramsCardinal *num_params	// Specifies the number of values in the parameter ...
XTextExtentsXTextExtents00tbXFontStruct *font_structXFontStruct *font_struct,	// Specifies the XFontStruct structure.tbchar *stringchar *string,	// Specifies the character string.tbintncharsint nchars,	// Specifies the number of characters in the  ...tbint *direction_returnint *direction_return,	// Returns the value of the direction hint ...tbint *font_ascent_returnint * font_ascent_return,	// Returns the font ascent.tbint *font_descent_returnint * font_descent_return,	// Returns the font descent.tbXCharStruct *overall_returnXCharStruct *overall_return	// Returns the overall size in the specified ...
XTextExtents16XTextExtents1600tbXFontStruct *font_structXFontStruct *font_struct,	// Specifies the XFontStruct structure.tbXChar2b *stringXChar2b *string,	// Specifies the character string.tbintncharsint nchars,	// Specifies the number of characters in the  ...tbint *direction_returnint *direction_return,	// Returns the value of the direction hint ...tbint *font_ascent_returnint * font_ascent_return,	// Returns the font ascent.tbint *font_descent_returnint * font_descent_return,	// Returns the font descent.tbXCharStruct *overall_returnXCharStruct *overall_return	// Returns the overall size in the specified ...
XTextPropertyToStringListStatus00tbXTextProperty *text_propXTextProperty *text_prop,	// Specifies the XTextProperty structure to be ...tbchar ***list_returnchar ***list_return,	// Returns a list of null-terminated character ...tbint *count_returnint *count_return	// Returns the number of strings.
XTextWidthint00tbXFontStruct *font_structXFontStruct *font_struct,	// Specifies the font used for the width  ...tbchar *stringchar *string,	// Specifies the character string.tbintcountint count	// Specifies the character count in the specified ...
XTextWidth16int00tbXFontStruct *font_structXFontStruct *font_struct,	// Specifies the font used for the width  ...tbXChar2b *stringXChar2b *string,	// Specifies the character string.tbintcountint count	// Specifies the character count in the specified ...
XtFindFileString00tbStringpathString path,	// Specifies a path of file names, ...tbSubstitutionsubstitutionsSubstitution substitutions,	// Specifies a list of substitutions to make into a ...tbCardinalnum_substitutionsCardinal num_substitutions,	// Specifies the number of substitutions passed in.tbXtFilePredicatepredicateXtFilePredicate predicate	// Specifies a procedure to call to judge a  ...
XtFreevoid00tbchar *ptrchar *ptr	// Specifies a pointer to the old storage or to the ...
XtGetActionKeysymKeySym00tbXEvent*eventXEvent* event,	// Specifies the event pointer passed to the action ...tbModifiers*modifiers_returnModifiers* modifiers_return	// Returns the modifiers that caused the match, ...
XtGetActionListvoid00tbWidgetClasswidget_classWidgetClass widget_class,	// Specifies the widget class whose actions are to ...tbXtActionList*actions_returnXtActionList* actions_return,	// Returns the action list.tbCardinal*num_actions_returnCardinal* num_actions_return	// Returns the number of action procedures declared ...
XtGetApplicationNameAndClassvoid00tbDisplay*displayDisplay* display,	// Specifies an open display connection that has ...tbString*name_returnString* name_return,	// Returns the application name.tbString*class_returnString* class_return	// Returns the application class.
XtGetApplicationResourcesvoid00tbWidgetwWidget w,	// Specifies the widget that wants resources for a ...tbXtPointerbaseXtPointer base,	// Specifies the base address of the subpart data ...tbXtResourceListresourcesXtResourceList resources,	// obtained from the resource database.tbCardinalnum_resourcesCardinal num_resources,	// Specifies the number of resources in the ...tbArgListargsArgList args,	// Specifies the argument list to override ...tbCardinalnum_argsCardinal num_args	// Specifies the number of arguments in the  ...
XtGetClassExtensionXtPointer00tbWidgetClassobject_classWidgetClass object_class,	// Specifies the widget class containing the  ...tbCardinalbyte_offsetCardinal byte_offset,	// Specifies the offset in bytes form the base of ...tbXrmQuarktypeXrmQuark type,	// Specifies the name of the class extension to be ...tblongversionlong version,	// Specifies the minimum acceptable version of the ...tbCardinalrecord_sizeCardinal record_size	// Specifies the minimum acceptable length of the ...
XtGetConstraintResourceListvoid00tbWidgetClassclassWidgetClass class,	// has been created), ...tbXtResourceList *resources_returnXtResourceList *resources_return,	// Specifies a pointer to where to store the ...tbCardinal *num_resources_returnCardinal *num_resources_return	// Specifies a pointer to where to store the number ...
XtGetDisplaysvoid00tbXtAppContextapp_contextXtAppContext app_context,	// Specifies the application context.tbDisplay***dpy_returnDisplay*** dpy_return,	// Returns a list of open X display connections in ...tbCardinal*num_dpy_returnCardinal* num_dpy_return	// Returns the count of open X display connections ...
XtGetErrorDatabaseXrmDatabase *00
XtGetErrorDatabaseTextvoid00tbchar *namechar * name,	// Specifies the name and type that are  ...tbchar *typechar * type,	// Specifies the name and type that are  ...tbchar *classchar * class,	// Specifies the resource class of the error  ...tbchar *defaultchar *default,	// Specifies the default message to use.tbchar *buffer_returnchar *buffer_return,	// Specifies the buffer into which the error  ...tbintnbytesint nbytes,	// Specifies the size of the buffer in bytes.tbXrmDatabasedatabaseXrmDatabase database	// Specifies the name of the alternative database ...
XtGetGCGC00tbWidgetwWidget w,	// Specifies the widget.xbXtGCMaskGCFunctionGCPlaneMaskGCForegroundGCBackgroundGCLineWidthGCLineStyleGCCapStyleGCJoinStyleGCFillStyleGCFillRuleGCTileGCStippleGCTileStipXOriginGCTileStipYOriginGCFontGCSubwindowModeGCGraphicsExposuresGCClipXOriginGCClipYOriginGCClipMaskGCDashOffsetGCDashListGCArcModeXtGCMask value_mask,	// Specifies which fields of the values are  ...tbXGCValues *valuesXGCValues *values	// Specifies the actual values for this GC.
XtGetKeyboardFocusWidgetWidget00tbWidgetwidgetWidget widget	// Specifies the widget for this event handler.
XtGetKeysymTableKeysym*00tbDisplay*displayDisplay* display,	// Specifies the display whose table is required.tbKeyCode*min_keycode_returnKeyCode* min_keycode_return,	// Returns the minimum KeyCode valid for the  ...tbint*keysyms_per_keycode_returnint* keysyms_per_keycode_return	// Returns the number of KeySyms stored for each  ...
XtGetMultiClickTimeint00tbDisplay*displayDisplay* display	// Specifies the display connection.
XtGetResourceListvoid00tbWidgetClassclassWidgetClass class,	// has been created), ...tbXtResourceList *resources_returnXtResourceList *resources_return,	// Specifies a pointer to where to store the ...tbCardinal *num_resources_returnCardinal *num_resources_return	// Specifies a pointer to where to store the number ...
XtGetSelectionParametersvoid00tbWidgetownerWidget owner,	// Specifies the widget that owns the specified ...tbAtomselectionAtom selection,	// Specifies the selection being processed.tbXtRequestIdrequest_idXtRequestId request_id,	// Specifies the requestor id in the case of  ...tbAtom*type_returnAtom* type_return,	// Specifies a pointer to an atom in whcih the ...tbXtPointer*value_returnXtPointer* value_return,	// Specifies a pointer into which a pointer to the ...tbunsigned long*length_returnunsigned long* length_return,	// Specifies a pointer into which the number of ...tbint*format_returnint* format_return	// Specifies a pointer into which the size in bits ...
XtGetSelectionRequestXSelectionRequestEvent*00tbWidgetwWidget w,	// Specifies the widget.tbAtomselectionAtom selection,	// Specifies the selection being processed.tbXtRequestIdrequest_idXtRequestId request_id	// Specifies the requestor id in the case of  ...
XtGetSelectionTimeoutunsigned long00
XtGetSelectionValuevoid00tbWidgetwWidget w,	// Specifies the widget that is making the request.tbAtomselectionAtom selection,	// Specifies the particular selection desired (that ...tbAtomtargetAtom target,	// Specifies the type of the information that is ...tbXtSelectionCallbackProccallbackXtSelectionCallbackProc callback,	// Specifies the callback procedure that is to be ...tbXtPointerclient_dataXtPointer client_data,	// Specifies the argument that is to be passed to ...tbTimetimeTime time	// Specifies the timestamp that indicates when the ...
XtGetSelectionValueIncrementalvoid00tbWidgetwWidget w,	// Specifies the widget that is making the request.tbAtomselectionAtom selection,	// Specifies the particular selection desired (that ...tbAtomtargetAtom target,	// Specifies the type of the information that is ...tbXtSelectionCallbackProccallbackXtSelectionCallbackProc callback,	// Specifies the callback procedure that is to be ...tbXtPointerclient_dataXtPointer client_data,	// Specifies the argument that is to be passed to ...tbTimetimeTime time	// Specifies the timestamp that indicates when the ...
XtGetSelectionValuesvoid00tbWidgetwWidget w,	// Specifies the widget that is making the request.tbAtomselectionAtom selection,	// Specifies the particular selection desired (that ...tbAtom *targetsAtom *targets,	// Specifies the types of information that is ...tbintcountint count,	// Specifies the length of the targets and ...tbXtSelectionCallbackProccallbackXtSelectionCallbackProc callback,	// Specifies the callback procedure that is to be ...tbXtPointerclient_dataXtPointer client_data,	// Specifies the argument that is to be passed to ...tbTimetimeTime time	// Specifies the timestamp that indicates when the ...
XtGetSelectionValuesIncrementalvoid00tbWidgetwWidget w,	// Specifies the widget that is making the request.tbAtomselectionAtom selection,	// Specifies the particular selection desired (that ...tbAtom *targetsAtom *targets,	// Specifies the types of information that is ...tbintcountint count,	// Specifies the length of the targets and ...tbXtSelectionCallbackProccallbackXtSelectionCallbackProc callback,	// Specifies the callback procedure that is to be ...tbXtPointerclient_dataXtPointer client_data,	// Specifies the argument that is to be passed to ...tbTimetimeTime time	// Specifies the timestamp that indicates when the ...
XtGetSubresourcesvoid00tbWidgetwWidget w,	// Specifies the widget that wants resources for a ...tbXtPointerbaseXtPointer base,	// Specifies the base address of the subpart data ...tbStringnameString name,	// Specifies the name of the subpart.tbStringclassString class,	// Specifies the class of the subpart.tbXtResourceListresourcesXtResourceList resources,	// obtained from the resource database.tbCardinalnum_resourcesCardinal num_resources,	// Specifies the number of resources in the ...tbArgListargsArgList args,	// Specifies the argument list to override ...tbCardinalnum_argsCardinal num_args	// Specifies the number of arguments in the  ...
XtGetSubvaluesvoid00tbXtPointerbaseXtPointer base,	// Specifies the base address of the subpart data ...tbXtResourceListresourcesXtResourceList resources,	// Specifies the nonwidget resource list or values.tbCardinalnum_resourcesCardinal num_resources,	// Specifies the number of resources in the ...tbArgListargsArgList args,	// Specifies the argument list of name/address ...tbCardinalnum_argsCardinal num_args	// Specifies the number of arguments in the  ...
XtGetValuesvoid00tbWidgetwWidget w,	// Specifies the widget.tbArgListargsArgList args,	// Specifies the argument list of name/address ...tbCardinalnum_argsCardinal num_args	// Specifies the number of arguments in the  ...
XtGrabButtonvoid00tbWidgetwidgetWidget widget,	// Specifies the widget in whose window the grab ...tbintbuttonint button,	// Specifies arguments to the associated Xlib  ...xbModifiersShiftMask  LockMask   ControlMaskMod1Mask   Mod2Mask   Mod3Mask   Mod4Mask   Mod5Mask   Modifiers modifiers,	// Specifies arguments to the associated Xlib  ...tbBooleanowner_eventsBoolean owner_events,	// Specifies arguments to the associated Xlib  ...xbunsigned intNoEventMaskKeyPressMaskKeyReleaseMaskButtonPressMaskButtonReleaseMaskEnterWindowMaskLeaveWindowMaskPointerMotionMaskPointerMotionHintMaskButton1MotionMaskButton2MotionMaskButton3MotionMaskButton4MotionMaskButton5MotionMaskButtonMotionMaskKeymapStateMaskExposureMaskVisibilityChangeMaskStructureNotifyMaskResizeRedirectMaskSubstructureNotifyMaskSubstructureRedirectMaskFocusChangeMaskPropertyChangeMaskColormapChangeMaskOwnerGrabButtonMaskunsigned int event_mask,	// Specifies arguments to the associated Xlib  ...rbintGrabModeAsyncGrabModeSyncint pointer_mode,	// Specifies arguments to the associated Xlib  ...rbintGrabModeAsyncGrabModeSyncint keyboard_mode,	// Specifies arguments to the associated Xlib  ...tbWindowconfine_toWindow confine_to,	// Specifies arguments to the associated Xlib  ...tbCursorcursorCursor cursor	// Specifies arguments to the associated Xlib  ...
XtGrabKeyvoid00tbWidgetwidgetWidget widget,	// Specifies the widget in whose window the grab ...tbKeyCodekeycodeKeyCode keycode,	// Specifies arguments to the associated Xlib  ...xbModifiersShiftMask  LockMask   ControlMaskMod1Mask   Mod2Mask   Mod3Mask   Mod4Mask   Mod5Mask   Modifiers modifiers,	// Specifies arguments to the associated Xlib  ...tbBooleanowner_eventsBoolean owner_events,	// Specifies arguments to the associated Xlib  ...rbintGrabModeAsyncGrabModeSyncint pointer_mode,	// Specifies arguments to the associated Xlib  ...rbintGrabModeAsyncGrabModeSyncint keyboard_mode	// Specifies arguments to the associated Xlib  ...
XtGrabKeyboardint00tbWidgetwidgetWidget widget,	// Specifies the widget in whose window the grab ...tbBooleanowner_eventsBoolean owner_events,	// Specifies arguments to the associated Xlib  ...rbintGrabModeAsyncGrabModeSyncint pointer_mode,	// Specifies arguments to the associated Xlib  ...rbintGrabModeAsyncGrabModeSyncint keyboard_mode,	// Specifies arguments to the associated Xlib  ...tbTimetimeTime time	// Specifies arguments to the associated Xlib  ...
XtGrabPointerint00tbWidgetwidgetWidget widget,	// Specifies the widget in whose window the grab ...tbBooleanowner_eventsBoolean owner_events	// Specifies arguments to the associated Xlib  ...
XtHasCallbacksXtCallbackStatus00tbWidgetwWidget w,	// Specifies the widget.tbStringcallback_nameString callback_name	// Specifies the callback list to be executed or ...
XtHooksOfDisplayWidget00tbDisplay*displayDisplay* display	// Specifies the desired display.
XtInitializeWidget00tbStringshell_nameString shell_name,	// Specifies the name of the created shell widget.tbStringapplication_classString application_class,	// Specifies the class name of this application, ...tbXrmOptionDescRec*optionsXrmOptionDescRec* options,	// Specifies how to parse the command line for any ...tbCardinalnum_optionsCardinal num_options,	// Specifies the number of entries in the options ...tbint*argcint* argc,	// Specifies a pointer to the number of command ...tbchar**argvchar** argv	// Specifies the command line parameters.
XtInitializeWidgetClassvoid00tbWidgetClassobject_classWidgetClass object_class	// Specifies the object class to initialize.
XtInsertEventHandlervoid00tbWidgetwWidget w,	// Specifies the widget for which this event  ...tbEventMaskevent_maskEventMask event_mask,	// Specifies the event mask for which to call or ...tbBooleannonmaskableBoolean nonmaskable,	// Specifies a Boolean value that indicates whether ...tbXtEventHandlerprocXtEventHandler proc,	// Specifies the procedure that is to be added or ...tbXtPointerclient_dataXtPointer client_data,	// Specifies additional data to be passed to the ...tbXtListPositionpositionXtListPosition position	// Specifies when the event handler is to be called ...
XtInsertEventTypeHandlervoid00tbWidgetwidgetWidget widget,	// Specifies the widget for this event handler.tbintevent_typeint event_type,	// Specifies the event type.tbXtPointerselect_dataXtPointer select_data,	// Specifies data used to select or deselect events ...tbXtEventHandlerprocXtEventHandler proc,	// Specifies the proc.tbXtPointerclient_dataXtPointer client_data,	// Specifies additional data to be passed to the ...tbXtListPositionpositionXtListPosition position	// Specifies when the event handler is to be called ...
XtInsertRawEventHandlervoid00tbWidgetwWidget w,	// Specifies the widget for which this event  ...tbEventMaskevent_maskEventMask event_mask,	// Specifies the event mask for which to call or ...tbBooleannonmaskableBoolean nonmaskable,	// Specifies a Boolean value that indicates whether ...tbXtEventHandlerprocXtEventHandler proc,	// Specifies the procedure that is to be added or ...tbXtPointerclient_dataXtPointer client_data	// Specifies additional data to be passed to the ...
XtInstallAcceleratorsvoid00tbWidgetdestinationWidget destination,	// Specifies the widget on which the accelerators ...tbWidgetsourceWidget source	// Specifies the accelerator table to compile.
XtInstallAllAcceleratorsvoid00tbWidgetdestinationWidget destination,	// Specifies the widget on which the accelerators ...tbWidgetsourceWidget source	// Specifies the accelerator table to compile.
XtIsApplicationShellBoolean00tbWidgetwWidget w	// Specifies the widget.
XtIsCompositeBoolean00tbWidgetwWidget w	// Specifies the widget.
XtIsConstraintBoolean00tbWidgetwWidget w	// Specifies the widget.
XtIsManagedBoolean00tbWidgetwidgetWidget widget	// Specifies the widget.
XtIsObjectBoolean00tbWidgetwWidget w	// Specifies the widget.
XtIsOverrideShellBoolean00tbWidgetwWidget w	// Specifies the widget.
XtIsRealizedBoolean00tbWidgetwWidget w	// Specifies the widget.
XtIsRectObjBoolean00tbWidgetwWidget w	// Specifies the widget.
XtIsSensitiveBoolean00tbWidgetwWidget w	// Specifies the widget.
XtIsShellBoolean00tbWidgetwWidget w	// Specifies the widget.
XtIsSubclassBoolean00tbWidgetwWidget w,	// Specifies the widget.tbWidgetClasswidget_classWidgetClass widget_class	// Specifies the widget class.
XtIsTopLevelShellBoolean00tbWidgetwWidget w	// Specifies the widget.
XtIsTransientShellBoolean00tbWidgetwWidget w	// Specifies the widget.
XtIsVendorShellBoolean00tbWidgetwWidget w	// Specifies the widget.
XtIsWidgetBoolean00tbWidgetwWidget w	// Specifies the widget.
XtIsWMShellBoolean00tbWidgetwWidget w	// Specifies the widget.
XtKeysymToKeycodeListvoid00tbDisplay*displayDisplay* display,	// Specifies the display whose table is required.tbKeySymkeysymKeySym keysym,	// Specifies the KeySym for which to search.tbKeyCode**keycodes_returnKeyCode** keycodes_return,	// Returns a list of KeyCodes that have keysym ...tbCardinal*keycount_returnCardinal* keycount_return	// Returns the number of KeyCodes in the keycode ...
XtLastEventProcessedXEvent*00tbDisplay*displayDisplay* display	// Specifies the open display connection.
XtLastTimestampProcessedTime00tbDisplay*displayDisplay* display	// Specifies the open display connection.
XtMainLoopvoid00
XtMakeGeometryRequestXtGeometryResult00tbWidgetwWidget w,	// Specifies the widget that is making the request.tbXtWidgetGeometry *requestXtWidgetGeometry *request,	// Specifies the desired widget geometry (size, ...tbXtWidgetGeometry *reply_returnXtWidgetGeometry *reply_return	// Returns the allowed widget size or may be NULL ...
XtMakeResizeRequestXtGeometryResult00tbWidgetwWidget w,	// Specifies the widget that is making the request.tbDimensionwidthDimension width,	// Specifies the desired width and height.tbDimensionheightDimension height,	// Specifies the desired width and height.tbDimension *width_returnDimension * width_return,	// Return the allowed widget width and height.tbDimension *height_returnDimension * height_return	// Return the allowed widget width and height.
XtMallocchar *00tbCardinalsizeCardinal size	// Specifies the size of an array element (in ...
XtManageChildvoid00tbWidgetchildWidget child	// Specifies the child.
XtManageChildrenvoid00tbWidgetListchildrenWidgetList children,	// Specifies a list of child widgets.tbCardinalnum_childrenCardinal num_children	// Specifies the number of children.
XtMapWidgetXtMapWidget00tbWidgetwWidget w	// Specifies the widget.
XtMergeArgListsArgList00tbArgListargs1ArgList args1,	// Specifies the first ArgList.tbCardinalnum_args1Cardinal num_args1,	// Specifies the number of arguments in the first ...tbArgListargs2ArgList args2,	// Specifies the second ArgList.tbCardinalnum_args2Cardinal num_args2	// Specifies the number of arguments in the second ...
XtMoveWidgetvoid00tbWidgetwWidget w,	// Specifies the widget.tbPositionxPosition x,	// Specify the new widget x and y coordinates.tbPositionyPosition y	// Specify the new widget x and y coordinates.
XtNameWidget00tbWidgetwWidget w	// Specifies the widget.
XtNameToWidgetWidget00tbWidgetreferenceWidget reference,	// Specifies the widget from which the search is to ...tbStringnamesString names	// Specifies the fully qualified name of the ...
XtNewtype *00tbtypetypetype	// Specifies a previously declared data type.
XtNewStringString00tbStringstringString string	// Specifies a previously declared string.
XtNextEventvoid00tbXEvent *event_returnXEvent *event_return	// Returns the event information to the specified ...
XtNoticeSignalvoid00tbXtSignalIdidXtSignalId id	// Specifies the ID returned from the corresponding ...
XtNumberCardinal00tbArrayVariablearrayArrayVariable array	// Specifies a fixed-size array.
XtOffsetCardinal00tbTypepointer_typeType pointer_type,	// Specifies a type that is declared as a pointer ...tbFieldfield_nameField field_name	// Specifies the name of the field for which to ...
XtOffsetOfCardinal00tbTypestructure_typeType structure_type,	// Specifies a type that is declared as a  ...tbFieldfield_nameField field_name	// Specifies the name of the field for which to ...
XtOpenApplicationWidget00tbXtAppContextapp_context_returnXtAppContext app_context_return,	// Specifies the application context.tbStringapplication_classString application_class,	// Specifies the class name of this application, ...tbXrmOptionDescRec*optionsXrmOptionDescRec* options,	// Specifies how to parse the command line for any ...tbCardinalnum_optionsCardinal num_options,	// Specifies the number of entries in the options ...tbint*argc_in_outint* argc_in_out,	// Specifies a pointer to the number of command ...tbString*argv_in_outString* argv_in_out,	// Specifies the command line parameters.tbString*fallback_resourcesString* fallback_resources,	// Specifies resource values to be used if the ...tbWidgetClasswidget_classWidgetClass widget_class,	// Specifies the widget class of the shell to be ...tbArgListargsArgList args,	// Specifies the argument list to override any ...tbCardinalnum_argsCardinal num_args	// Specifies the number of entries in the argument ...
XtOpenDisplayDisplay *00tbXtAppContextapp_contextXtAppContext app_context,	// Specifies the application context.tbStringdisplayString display,	// Specifies the display.tbStringapplication_nameString application_name,	// Specifies the name of the application instance.tbStringapplication_classString application_class,	// Specifies the class name of this application, ...tbXrmOptionDescRec *optionsXrmOptionDescRec *options,	// Specifies how to parse the command line for any ...tbCardinalnum_optionsCardinal num_options,	// Specifies the number of entries in the options ...tbint *argcint *argc,	// Specifies a pointer to the number of command ...tbString *argvString *argv	// Specifies the command line parameters.
XtOverrideTranslationsvoid00tbWidgetwWidget w,	// Specifies the widget into which the new  ...tbXtTranslationstranslationsXtTranslations translations	// Specifies the compiled translation table to ...
XtOwnSelectionBoolean00tbWidgetwWidget w,	// Specifies the widget that wishes to become the ...tbAtomselectionAtom selection,	// Specifies an atom that describes the type of the ...tbTimetimeTime time,	// Specifies the timestamp that indicates when the ...tbXtConvertSelectionProcconvert_procXtConvertSelectionProc convert_proc,	// Specifies the procedure that is to be called ...tbXtLoseSelectionProclose_selectionXtLoseSelectionProc lose_selection,	// Specifies the procedure that is to be called ...tbXtSelectionDoneProcdone_procXtSelectionDoneProc done_proc	// Specifies the procedure that is called after the ...
XtOwnSelectionIncrementalBoolean00tbWidgetwWidget w,	// Specifies the widget that wishes to become the ...tbAtomselectionAtom selection,	// Specifies an atom that describes the type of the ...tbTimetimeTime time,	// Specifies the timestamp that indicates when the ...tbXtConvertSelectionIncrProcconvert_callbackXtConvertSelectionIncrProc convert_callback,	// Specifies the procedure that is to be called ...tbXtLoseSelectionIncrProclose_callbackXtLoseSelectionIncrProc lose_callback,	// Specifies the procedure that is to be called ...tbXtSelectionDoneIncrProcdone_callbackXtSelectionDoneIncrProc done_callback,	// Specifies the procedure that is called after the ...tbXtCancelConvertSelectionProccancel_callbackXtCancelConvertSelectionProc cancel_callback,	// Specifies the procedure that is to be called ...tbXtPointerclient_dataXtPointer client_data	// Specifies application-specific data.
XtParentWidget00tbWidgetwWidget w	// Specifies the widget.
XtParseAcceleratorTableXtAccelerators00tbStringsourceString source	// Specifies the accelerator table to compile.
XtParseTranslationTableXtTranslations00tbStringtableString table	// Specifies the translation table to compile.
XtPeekEventBoolean00tbXEvent *event_returnXEvent *event_return	// Returns the event information to the specified ...
XtPendingXtInputMask00
XtPopdownvoid00tbWidgetpopup_shellWidget popup_shell	// Specifies the widget shell to pop down.
XtPopupvoid00tbWidgetpopup_shellWidget popup_shell,	// Specifies the widget shell.rbXtGrabKindXtGrabExclusiveXtGrabNonexclusiveXtGrabKind grab_kind	// Specifies the way in which user events should be ...
XtPopupSpringLoadedvoid00tbWidgetpopup_shellWidget popup_shell	// Specifies the widget shell.
XtProcessEventvoid00tbXtInputMaskmaskXtInputMask mask	// Specifies what types of events to process.
XtProcessLockvoid00
XtProcessUnlockvoid00
XtQueryGeometryXtGeometryResult00tbWidgetwWidget w,	// Specifies the widget.tbXtWidgetGeometry *intendedXtWidgetGeometry * intended,	// Specifies any changes the parent plans to make ...tbXtWidgetGeometry *preferred_returnXtWidgetGeometry * preferred_return	// Returns the child widget's preferred geometry.
XTranslateCoordinatesBool00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbWindowsrc_wWindow src_w,	// Specifies the source window.tbWindowdest_wWindow dest_w,	// Specifies the destination window.tbintsrc_xint src_x,	// Specify the x and y coordinates within the ...tbintsrc_yint src_y,	// Specify the x and y coordinates within the ...tbint *dest_x_returnint * dest_x_return,	// Return the x and y coordinates within the  ...tbint *dest_y_returnint * dest_y_return,	// Return the x and y coordinates within the  ...tbWindow *child_returnWindow *child_return	// Returns the child if the coordinates are  ...
XtRealizeWidgetvoid00tbWidgetwWidget w	// Specifies the widget.
XtReallocchar *00tbchar *ptrchar *ptr,	// Specifies a pointer to the old storage or to the ...tbCardinalnumCardinal num	// Specifies the number of bytes or array elements.
XtRegisterCaseConvertervoid00tbDisplay *displayDisplay *display,	// Specifies the display.tbXtCaseProcprocXtCaseProc proc,	// Specifies the procedure that is to perform key ...tbKeySymstartKeySym start,	// Specifies the first KeySym for which this  ...tbKeySymstopKeySym stop	// Specifies the last KeySym for which this  ...
XtRegisterDrawablevoid00tbDisplay*displayDisplay* display,	// Specifies the drawable's display.tbDrawabledrawableDrawable drawable,	// Specifies the drawable to register.tbWidgetwidgetWidget widget	// Specifies the widget to register the drawable ...
XtRegisterExtensionSelectorvoid00tbDisplay*displayDisplay* display,	// Specifies the display.tbintmin_event_typeint min_event_type,	// Specifies the range of event types for this ...tbintmax_event_typeint max_event_type,	// Specifies the range of event types for this ...tbXtExtensionSelectProcprocXtExtensionSelectProc proc,	// Specifies the proc.tbXtPointerclient_dataXtPointer client_data	// Specifies additional data to be passed to the ...
XtRegisterGrabActionvoid00tbXtActionProcaction_procXtActionProc action_proc,	// Specifies the action procedure to search for in ...tbBooleanowner_eventsBoolean owner_events,	// Specify arguments to XtGrabButton or XtGrabKey ...xbunsigned intNoEventMaskKeyPressMaskKeyReleaseMaskButtonPressMaskButtonReleaseMaskEnterWindowMaskLeaveWindowMaskPointerMotionMaskPointerMotionHintMaskButton1MotionMaskButton2MotionMaskButton3MotionMaskButton4MotionMaskButton5MotionMaskButtonMotionMaskKeymapStateMaskExposureMaskVisibilityChangeMaskStructureNotifyMaskResizeRedirectMaskSubstructureNotifyMaskSubstructureRedirectMaskFocusChangeMaskPropertyChangeMaskColormapChangeMaskOwnerGrabButtonMaskunsigned int event_mask,	// Specify arguments to XtGrabButton or XtGrabKey ...rbintGrabModeAsyncGrabModeSyncint pointer_mode,	// Specify arguments to XtGrabButton or XtGrabKey ...rbintGrabModeAsyncGrabModeSyncint keyboard_mode	// Specify arguments to XtGrabButton or XtGrabKey ...
XtReleaseGCvoid00tbWidgetwWidget w,	// Specifies the widget.tbGCgcGC gc	// Specifies the GC to be deallocated.
XtRemoveActionHookvoid00tbXtActionHookIdidXtActionHookId id	// Specifies the action hook.
XtRemoveAllCallbacksvoid00tbWidgetwWidget w,	// Specifies the widget.tbStringcallback_nameString callback_name	// Specifies the callback list to which the  ...
XtRemoveBlockHookvoid00tbXtBlockHookIdidXtBlockHookId id	// Specifies action hook.
XtRemoveCallbackvoid00tbWidgetwWidget w,	// Specifies the widget.tbStringcallback_nameString callback_name,	// Specifies the callback list to which the  ...tbXtCallbackProccallbackXtCallbackProc callback,	// Specifies the callback procedure.tbXtPointerclient_dataXtPointer client_data	// Specifies the argument that is to be passed to ...
XtRemoveCallbacksvoid00tbWidgetwWidget w,	// Specifies the widget.tbStringcallback_nameString callback_name,	// Specifies the callback list to which the  ...tbXtCallbackListcallbacksXtCallbackList callbacks	// Specifies the null-terminated list of callback ...
XtRemoveEventHandlervoid00tbWidgetwWidget w,	// Specifies the widget for which this event  ...tbEventMaskevent_maskEventMask event_mask,	// Specifies the event mask for which to call or ...tbBooleannonmaskableBoolean nonmaskable,	// Specifies a Boolean value that indicates whether ...tbXtEventHandlerprocXtEventHandler proc,	// Specifies the procedure that is to be added or ...tbXtPointerclient_dataXtPointer client_data	// Specifies additional data to be passed to the ...
XtRemoveEventTypeHandlervoid00tbWidgetwidgetWidget widget,	// Specifies the widget for this event handler.rbintKeyPressKeyReleaseButtonPressButtonReleaseMotionNotifyEnterNotifyLeaveNotifyFocusInFocusOutKeymapNotifyExposeGraphicsExposeNoExposeVisibilityNotifyCreateNotifyDestroyNotifyUnmapNotifyMapNotifyMapRequestReparentNotifyConfigureNotifyConfigureRequestGravityNotifyResizeRequestCirculateNotifyCirculateRequestPropertyNotifySelectionClearSelectionRequestSelectionNotifyColormapNotifyClientMessageMappingNotifyint event_type,	// Specifies the event type.tbXtPointerselect_dataXtPointer select_data,	// Specifies data used to select or deselect events ...tbXtEventHandlerprocXtEventHandler proc,	// Specifies the proc.tbXtPointerclient_dataXtPointer client_data	// Specifies additional data to be passed to the ...
XtRemoveGrabvoid00tbWidgetwWidget w	// Specifies the widget to add to or remove from ...
XtRemoveInputvoid00tbXtInputIdidXtInputId id	// Specifies the ID returned from the corresponding ...
XtRemoveRawEventHandlervoid00tbWidgetwWidget w,	// Specifies the widget for which this event  ...tbEventMaskevent_maskEventMask event_mask,	// Specifies the event mask for which to call or ...tbBooleannonmaskableBoolean nonmaskable,	// Specifies a Boolean value that indicates whether ...tbXtEventHandlerprocXtEventHandler proc,	// Specifies the procedure that is to be added or ...tbXtPointerclient_dataXtPointer client_data	// Specifies additional data to be passed to the ...
XtRemoveSignalvoid00tbXtSignalIdidXtSignalId id	// Specifies the ID returned from the corresponding ...
XtRemoveTimeOutvoid00tbXtIntervalIdtimerXtIntervalId timer	// is to be set.
XtRemoveWorkProcvoid00tbXtWorkProcIdidXtWorkProcId id	// Specifies which work procedure to remove.
XtReservePropertyAtomWidget00tbWidgetwWidget w	// Specifies the widget used to reserve the atom.
XtResizeWidgetvoid00tbWidgetwWidget w,	// Specifies the widget.tbDimensionwidthDimension width,	// Specify the new widget size.tbDimensionheightDimension height,	// Specify the new widget size.tbDimensionborder_widthDimension border_width	// Specify the new widget size.
XtResolvePathnameString00tbDisplay *displayDisplay *display,	// Specifies the display to use to find the  ...tbStringtypeString type,	// Specify values to substitute into the path.tbStringfilenameString filename,	// Specify values to substitute into the path.tbStringsuffixString suffix,	// Specify values to substitute into the path.tbStringpathString path,	// Specifies the list of file specifications, ...tbSubstitutionsubstitutionsSubstitution substitutions,	// Specifies a list of additional substitutions ...tbCardinalnum_substitutionsCardinal num_substitutions,	// Specifies the number of entries in  ...tbXtFilePredicatepredicateXtFilePredicate predicate	// Specifies a procedure called to judge each ...
XtScreenScreen *00tbWidgetwWidget w	// Specifies the widget.
XtScreenDatabaseXrmDatabase00tbScreen*screenScreen* screen	// Specifies the screen whose resource database is ...
XtScreenOfObjectScreen *00tbWidgetobjectWidget object	// Specifies the widget.
XtSendSelectionRequestvoid00tbWidgetrequestorWidget requestor,	// Specifies the widget making the request.tbAtomselectionAtom selection,	// Specifies the particular selection desired.tbTimetimeTime time	// Specifies the timestamp to be used in making the ...
XtSessionGetTokenXtCheckpointToken00tbWidgetwWidget w,	// Specifies the session widget.tbinttypeint type	// Specifies the value in the type field of the ...
XtSetArgXtSetArg00tbArgargArg arg,	// Specifies the name-value pair to set.tbStringnameString name,	// Specifies the name of the resource.tbXtArgValvalueXtArgVal value	// Specifies the value of the resource if it will ...
XtSetErrorHandlervoid00tbXtErrorHandlerhandlerXtErrorHandler handler	// Specifies the new fatal error procedure, ...
XtSetErrorMsgHandlervoid00tbXtErrorMsgHandlermsg_handlerXtErrorMsgHandler msg_handler	// Specifies the new fatal error procedure, ...
XtSetEventDispatcherXtEventDispatchProc00tbWidgetwidgetWidget widget,	// Specifies the widget for this event handler.tbintevent_typeint event_type,	// Specifies the event type.tbXtEventDispatchProcprocXtEventDispatchProc proc	// Specifies the proc.
XtSetKeyboardFocusXtSetKeyboardFocus00tbWidgetsubtreeWidget subtree,	// Specifies either the widget in the subtree ...tbWidgetdescendantWidget descendant	// Specifies either the widget in the subtree ...
XtSetKeyTranslatorvoid00tbDisplay *displayDisplay *display,	// Specifies the display.tbXtKeyProcprocXtKeyProc proc	// Specifies the procedure that is to perform key ...
XtSetLanguageProcWidget00tbXtAppContextapp_contextXtAppContext app_context,	// Specifies the application context in which the ...tbXtLanguageProcprocXtLanguageProc proc,	// Specifies the language procedure, ...tbXtPointerclient_dataXtPointer client_data	// Specifes addional client data to be passed to ...
XtSetMappedWhenManagedvoid00tbWidgetwWidget w,	// Specifies the widget.tbBooleanmap_when_managedBoolean map_when_managed	// Specifies a Boolean value that indicates the new ...
XtSetMultiClickTimevoid00tbDisplay*displayDisplay* display,	// Specifies the display connection.tbinttimeint time	// Specifies the multi-click time in milliseconds.
XtSetSelectionParametersvoid00tbWidgetrequestorWidget requestor,	// Specifies the widget making the request.tbAtomselectionAtom selection,	// Specifies the atom that names the selection.tbAtomtypeAtom type,	// Specifies the type of the property in which the ...tbXtPointervalueXtPointer value,	// Specifies a pointer to the parameters.tbunsigned longlengthunsigned long length,	// Specifies the number of elements containing data ...rbint81632int format	// Specifies the size in bits of the data in the ...
XtSetSelectionTimeoutvoid00tbunsigned longtimeoutunsigned long timeout	// Specifies the selection timeout in milliseconds.
XtSetSensitivevoid00tbWidgetwWidget w,	// Specifies the widget.tbBooleansensitiveBoolean sensitive	// Specifies a Boolean value that indicates whether ...
XtSetSubvaluesvoid00tbXtPointerbaseXtPointer base,	// Specifies the base address of the subpart data ...tbXtResourceListresourcesXtResourceList resources,	// Specifies the nonwidget resource list or values.tbCardinalnum_resourcesCardinal num_resources,	// Specifies the number of resources in the ...tbArgListargsArgList args,	// Specifies the argument list of name/address ...tbCardinalnum_argsCardinal num_args	// Specifies the number of arguments in the  ...
XtSetTypeConvertervoid00tbStringfrom_typeString from_type,	// Specifies the source type.tbStringto_typeString to_type,	// Specifies the destination type.tbXtConverterconverterXtConverter converter,	// Specifies the type converter procedure.tbXtConvertArgListconvert_argsXtConvertArgList convert_args,	// Specifies how to compute the additional  ...tbCardinalnum_argsCardinal num_args,	// Specifies the number of additional arguments to ...tbXtCacheTypecache_typeXtCacheType cache_type,	// Specifies whether or not resources produced by ...tbXtDestructordestructorXtDestructor destructor	// Specifies a destroy procedure for resources  ...
XtSetValuesvoid00tbWidgetwWidget w,	// Specifies the widget.tbArgListargsArgList args,	// Specifies the argument list of name/address ...tbCardinalnum_argsCardinal num_args	// Specifies the number of arguments in the  ...
XtSetWarningHandlervoid00tbXtErrorHandlerhandlerXtErrorHandler handler	// Specifies the new fatal error procedure, ...
XtSetWarningMsgHandlervoid00tbXtErrorMsgHandlermsg_handlerXtErrorMsgHandler msg_handler	// Specifies the new fatal error procedure, ...
XtSetWMColormapWindowsvoid00tbWidgetwidgetWidget widget,	// Specifies the widget on whose window the  ...tbWidget*listWidget* list,	// Specifies a list of widgets whose windoware are ...tbCardinalcountCardinal count	// Specifies the number of widgets in list.
XtStringConversionWarningvoid00tbStringsrcString src,	// Specifies the string that could not be  ...tbStringdst_typeString dst_type	// Specifies the name of the type to which the ...
XtSuperclassWidgetClass00tbWidgetwWidget w	// Specifies the widget.
XtToolkitInitializevoid00
XtToolkitThreadInitializeBoolean00
XtTranslateKeycodevoid00tbDisplay *displayDisplay *display,	// Specifies the display.tbKeyCodekeycodeKeyCode keycode,	// Specifies the KeyCode to translate.xbModifiersShiftMask  LockMask   ControlMaskMod1Mask   Mod2Mask   Mod3Mask   Mod4Mask   Mod5Mask   Modifiers modifiers,	// Specifies the modifiers to the KeyCode.tbModifiers *modifiers_returnModifiers *modifiers_return,	// Returns a mask that indicates the modifiers ...tbKeySym *keysym_returnKeySym *keysym_return	// Returns the resulting KeySym.
XtUngrabButtonvoid00tbWidgetwidgetWidget widget,	// Specifies the widget in whose window the grab ...tbKeyCodebuttonKeyCode button,	// Specifies arguments to the associated Xlib  ...rbModifiersShiftMask  LockMask   ControlMaskMod1Mask   Mod2Mask   Mod3Mask   Mod4Mask   Mod5Mask   Modifiers modifiers	// Specifies arguments to the associated Xlib  ...
XtUngrabKeyvoid00tbWidgetwidgetWidget widget,	// Specifies the widget in whose window the grab ...tbKeyCodekeycodeKeyCode keycode,	// Specifies arguments to the associated Xlib  ...rbModifiersShiftMask  LockMask   ControlMaskMod1Mask   Mod2Mask   Mod3Mask   Mod4Mask   Mod5Mask   Modifiers modifiers	// Specifies arguments to the associated Xlib  ...
XtUngrabKeyboardvoid00tbWidgetwidgetWidget widget,	// Specifies the widget in whose window the grab ...tbTimetimeTime time	// Specifies arguments to the associated Xlib  ...
XtUngrabPointervoid00tbWidgetwidgetWidget widget,	// Specifies the widget in whose window the grab ...tbTimetimeTime time	// Specifies arguments to the associated Xlib  ...
XtUninstallTranslationsvoid00tbWidgetwWidget w	// Specifies the widget into which the new  ...
XtUnmanageChildvoid00tbWidgetchildWidget child	// Specifies the child.
XtUnmanageChildrenvoid00tbWidgetListchildrenWidgetList children,	// Specifies a list of child widgets.tbCardinalnum_childrenCardinal num_children	// Specifies the number of children.
XtUnmapWidgetXtUnmapWidget00tbWidgetwWidget w	// Specifies the widget.
XtUnrealizeWidgetvoid00tbWidgetwWidget w	// Specifies the widget.
XtUnregisterDrawablevoid00tbDisplay*displayDisplay* display,	// Specifies the drawable's display.tbDrawabledrawableDrawable drawable	// Specifies the drawable to register.
XtVaAppCreateShellWidget00tbStringapplication_nameString application_name,	// Specifies the name of the application instance.tbStringapplication_classString application_class,	// Specifies the class name of this application.tbWidgetClasswidget_classWidgetClass widget_class,	// Specifies the widget class that the application ...tbDisplay *displayDisplay *display	// Specifies the display from which to get the ...
XtVaAppInitializeWidget00tbXtAppContextapp_context_returnXtAppContext app_context_return,	// Specifies the application context.tbStringapplication_classString application_class,	// Specifies the class name of this application, ...tbXrmOptionDescRec*optionsXrmOptionDescRec* options,	// Specifies how to parse the command line for any ...tbCardinalnum_optionsCardinal num_options,	// Specifies the number of entries in the options ...tbint*argc_in_outint* argc_in_out,	// Specifies a pointer to the number of command ...tbString*argv_in_outString* argv_in_out,	// Specifies the command line parameters.tbString*fallback_resourcesString* fallback_resources	// Specifies resource valus to be used if the ...
XtVaCreateArgsListXtVarArgsList00tbXtPointerunusedXtPointer unused	// Must be specified as NULL.
XtVaCreateManagedWidgetWidget00tbStringnameString name,	// Specifies the resource name for the created  ...tbWidgetClasswidget_classWidgetClass widget_class,	// Specifies the widget class pointer for the ...tbWidgetparentWidget parent	// Specifies the parent widget.
XtVaCreatePopupShellWidget00tbStringnameString name,	// Specifies the text name for the created shell ...tbWidgetClasswidget_classWidgetClass widget_class,	// Specifies the widget class pointer for the  ...tbWidgetparentWidget parent	// Specifies the parent widget.
XtVaCreateWidgetWidget00tbStringnameString name,	// Specifies the resource name for the created  ...tbWidgetClasswidget_classWidgetClass widget_class,	// Specifies the widget class pointer for the ...tbWidgetparentWidget parent	// Specifies the parent widget.
XtVaGetApplicationResourcesvoid00tbWidgetwWidget w,	// Specifies the widget that wants resources for a ...tbXtPointerbaseXtPointer base,	// Specifies the base address of the subpart data ...tbXtResourceListresourcesXtResourceList resources,	// obtained from the resource database.tbCardinalnum_resourcesCardinal num_resources	// Specifies the number of resources in the ...
XtVaGetSubresourcesvoid00tbWidgetwWidget w,	// Specifies the widget that wants resources for a ...tbXtPointerbaseXtPointer base,	// Specifies the base address of the subpart data ...tbStringnameString name,	// Specifies the name of the subpart.tbStringclassString class,	// Specifies the class of the subpart.tbXtResourceListresourcesXtResourceList resources,	// obtained from the resource database.tbCardinalnum_resourcesCardinal num_resources	// Specifies the number of resources in the ...
XtVaGetValuesvoid00tbWidgetwWidget w	// Specifies the widget.
XtVaOpenApplicationWidget00tbXtAppContextapp_context_returnXtAppContext app_context_return,	// Specifies the application context.tbStringapplication_classString application_class,	// Specifies the class name of this application, ...tbXrmOptionDescRec*optionsXrmOptionDescRec* options,	// Specifies how to parse the command line for any ...tbCardinalnum_optionsCardinal num_options,	// Specifies the number of entries in the options ...tbint*argc_in_outint* argc_in_out,	// Specifies a pointer to the number of command ...tbString*argv_in_outString* argv_in_out,	// Specifies the command line parameters.tbString*fallback_resourcesString* fallback_resources,	// Specifies resource values to be used if the ...tbWidgetClasswidget_classWidgetClass widget_class	// Specifies the widget class of the shell to be ...
XtVaSetValuesvoid00tbWidgetwWidget w	// Specifies the widget.
XtWarningvoid00tbStringmessageString message	// Specifies the nonfatal error message that is to ...
XtWarningMsgvoid00tbStringnameString name,	// Specifies the general kind of error.tbStringtypeString type,	// Specifies the detailed name of the error.tbStringclassString class,	// Specifies the resource class.tbStringdefaultString default,	// Specifies the default message to use.tbString *paramsString *params,	// Specifies a pointer to a list of values to be ...tbCardinal *num_paramsCardinal *num_params	// Specifies the number of values in the parameter ...
XtWidgetToApplicationContextXtAppContext00tbWidgetwWidget w	// Specifies the widget .
XtWindowWindow00tbWidgetwWidget w	// Specifies the widget.
XtWindowOfObjectWindow00tbWidgetobjectWidget object	// Specifies the widget.
XUndefineCursorXUndefineCursor00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbWindowwWindow w	// Specifies the window.
XUngrabButtonXUngrabButton00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbunsigned intbuttonunsigned int button,	// Specifies the pointer button that is to be ...xbunsigned intShiftMask  LockMask   ControlMaskMod1Mask   Mod2Mask   Mod3Mask   Mod4Mask   Mod5Mask   unsigned int modifiers,	// Specifies the set of keymasks or AnyModifier.tbWindowgrab_windowWindow grab_window	// Specifies the grab window.
XUngrabDeviceXUngrabDevice00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbXDevice *deviceXDevice *device,	// Specifies  the  device  to   be   grabbed   or ...tbTimetimeTime time	// Specifies  the  time.
XUngrabDeviceButtonXUngrabDeviceButton00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbXDevice *deviceXDevice *device,	// Specifies the device that is to be grabbed  or ...tbunsigned intbuttonunsigned int button,	// Specifies  the  device  button  that  is to be ...xbunsigned intShiftMask  LockMask   ControlMaskMod1Mask   Mod2Mask   Mod3Mask   Mod4Mask   Mod5Mask   unsigned int modifiers,	// Specifies the set of keymasks or  AnyModifier.tbXDevice *modifier_deviceXDevice *modifier_device,	// specifies the device whose modifiers are to be ...tbWindowgrab_windowWindow grab_window	// Specifies the grab window.
XUngrabDeviceKeyXUngrabDeviceKey00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbXDevice *deviceXDevice *device,	// Specifies  the device that is to be grabbed or ...tbunsigned intKeyunsigned int Key,	// Specifies the device Key that is to be grabbed ...xbunsigned intShiftMask  LockMask   ControlMaskMod1Mask   Mod2Mask   Mod3Mask   Mod4Mask   Mod5Mask   unsigned int modifiers,	// Specifies  the set of keymasks or AnyModifier.tbXDevice *modifier_deviceXDevice *modifier_device,	// Specifies the device whose modifiers are to be ...tbWindowgrab_windowWindow grab_window	// Specifies the grab window.
XUngrabKeyXUngrabKey00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbintkeycodeint keycode,	// Specifies the KeyCode or AnyKey.xbunsigned intShiftMask  LockMask   ControlMaskMod1Mask   Mod2Mask   Mod3Mask   Mod4Mask   Mod5Mask   unsigned int modifiers,	// Specifies the set of keymasks or AnyModifier.tbWindowgrab_windowWindow grab_window	// Specifies the grab window.
XUngrabKeyboardXUngrabKeyboard00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbTimetimeTime time	// Specifies the time.
XUngrabPointerXUngrabPointer00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbTimetimeTime time	// Specifies the time.
XUngrabServerXUngrabServer00tbDisplay *displayDisplay *display	// Specifies the connection to the X server.
XUninstallColormapXUninstallColormap00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbColormapcolormapColormap colormap	// Specifies the colormap.
XUnionRectWithRegionXUnionRectWithRegion00tbXRectangle *rectangleXRectangle *rectangle,	// Specifies the rectangle.tbRegionsrc_regionRegion src_region,	// Specifies the source region to be used.tbRegiondest_region_returnRegion dest_region_return	// Returns the destination region.
XUnionRegionXUnionRegion00tbRegionsraRegion sra,	// Specify the two regions with which you want to ...tbRegionsrbRegion srb,	// Specify the two regions with which you want to ...tbRegiondr_returnRegion dr_return	// Returns the result of the computation.
XUniqueContextXContext00
XUnloadFontXUnloadFont00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbFontfontFont font	// Specifies the font.
XUnlockDisplayvoid00tbDisplay *displayDisplay *display	// Specifies the connection to the X server.
XUnmapSubwindowsXUnmapSubwindows00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbWindowwWindow w	// Specifies the window.
XUnmapWindowXUnmapWindow00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbWindowwWindow w	// Specifies the window.
XUnregisterIMInstantiateCallbackBool00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbXrmDatabasedbXrmDatabase db,	// Specifies a pointer to the resource database.tbchar *res_namechar *res_name,	// Specifies the full resource name of the  ...tbchar *res_classchar *res_class,	// Specifies the full class name of the  ...tbXIMProccallbackXIMProc  callback,	// Specifies a pointer to the input method  ...tbXPointer *client_dataXPointer *client_data	// Specifies the additional client data.
XUnsetICFocusvoid00tbXICicXIC ic	// Specifies the input context.
XVaCreateNestedListXVaNestedList00tbintdummyint dummy	// Specifies an unused argument (required by ANSI ...
XVisualIDFromVisualVisualID00tbVisual *visualVisual *visual	// Specifies the visual type.
XWarpPointerXWarpPointer00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbWindowsrc_wWindow src_w,	// Specifies the source window or None.tbWindowdest_wWindow dest_w,	// Specifies the destination window or None.tbintsrc_xint src_x,	// Specify a rectangle in the source window.tbintsrc_yint src_y,	// Specify a rectangle in the source window.tbunsigned intsrc_widthunsigned int src_width,	// Specify a rectangle in the source window.tbunsigned intsrc_heightunsigned int src_height,	// Specify a rectangle in the source window.tbintdest_xint dest_x,	// Specify the x and y coordinates within the  ...tbintdest_yint dest_y	// Specify the x and y coordinates within the  ...
XwcDrawImageStringvoid00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbDrawabledDrawable d,	// Specifies the drawable.tbXFontSetfont_setXFontSet font_set,	// Specifies the font set.tbGCgcGC gc,	// Specifies the GC.tbintxint x,	// Specify the x and y coordinates.tbintyint y,	// Specify the x and y coordinates.tbwchar_t *stringwchar_t *string,	// Specifies the character string.tbintnum_wcharsint num_wchars	// Specifies the number of characters in the string ...
XwcDrawStringvoid00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbDrawabledDrawable d,	// Specifies the drawable.tbXFontSetfont_setXFontSet font_set,	// Specifies the font set.tbGCgcGC gc,	// Specifies the GC.tbintxint x,	// Specify the x and y coordinates.tbintyint y,	// Specify the x and y coordinates.tbwchar_t *stringwchar_t *string,	// Specifies the character string.tbintnum_wcharsint num_wchars	// Specifies the number of characters in the string ...
XwcDrawTextvoid00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbDrawabledDrawable d,	// Specifies the drawable.tbGCgcGC gc,	// Specifies the GC.tbintxint x,	// Specify the x and y coordinates.tbintyint y,	// Specify the x and y coordinates.tbXwcTextItem *itemsXwcTextItem *items,	// Specifies an array of text items.tbintnitemsint nitems	// Specifies the number of text items in the array.
XwcFreeStringListvoid00tbwchar_t **listwchar_t **list	// Specifies a list of null-terminated character ...
XwcLookupStringint00tbXICicXIC ic,	// Specifies the input context.tbXKeyPressedEvent *eventXKeyPressedEvent *event,	// Specifies the key event to be used.tbwchar_t *buffer_returnwchar_t *buffer_return,	// Returns a multibyte string or wide character ...tbintwchars_bufferint wchars_buffer,	// Specifies space available in the return buffer.tbKeySym *keysym_returnKeySym *keysym_return,	// Returns the KeySym computed from the event if ...tbStatus *status_returnStatus *status_return	// Returns a value indicating what kind of data is ...
XwcResetICwchar_t *00tbXICicXIC ic	// Specifies the input context.
XwcTextEscapementint00tbXFontSetfont_setXFontSet font_set,	// Specifies the font set.tbwchar_t *stringwchar_t *string,	// Specifies the character string.tbintnum_wcharsint num_wchars	// Specifies the number of characters in the string ...
XwcTextExtentsint00tbXFontSetfont_setXFontSet font_set,	// Specifies the font set.tbwchar_t *stringwchar_t *string,	// Specifies the character string.tbintnum_wcharsint num_wchars,	// Specifies the number of characters in the string ...tbXRectangle *overall_ink_returnXRectangle *overall_ink_return,	// Returns the overall ink dimensions.tbXRectangle *overall_logical_returnXRectangle *overall_logical_return	// Returns the overall logical dimensions.
XwcTextListToTextPropertyint00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbwchar_t **listwchar_t **list,	// Specifies a list of null-terminated character ...tbintcountint count,	// Specifies the number of strings specified.tbXICCEncodingStylestyleXICCEncodingStyle style,	// Specifies the manner in which the property is ...tbXTextProperty *text_prop_returnXTextProperty *text_prop_return	// Returns the XTextProperty structure.
XwcTextPerCharExtentsStatus00tbXFontSetfont_setXFontSet font_set,	// Specifies the font set.tbwchar_t *stringwchar_t *string,	// Specifies the character string.tbintnum_wcharsint num_wchars,	// Specifies the number of characters in the string ...tbXRectangle *ink_array_returnXRectangle *ink_array_return,	// Returns the ink dimensions for each character.tbXRectangle *logical_array_returnXRectangle *logical_array_return,	// Returns the logical dimensions for each  ...tbintarray_sizeint array_size,	// Specifies the size of ink_array_return and  ...tbint *num_chars_returnint *num_chars_return,	// Returns the number of characters in the string ...tbXRectangle *overall_ink_returnXRectangle *overall_ink_return,	// Returns the overall ink extents of the entire ...tbXRectangle *overall_logical_returnXRectangle *overall_logical_return	// Returns the overall logical extents of the ...
XwcTextPropertyToTextListint00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbXTextProperty *text_propXTextProperty *text_prop,	// Specifies the XTextProperty structure to be ...tbwchar_t ***list_returnwchar_t ***list_return,	// Returns a list of null-terminated character ...tbint *count_returnint *count_return	// Returns the number of strings.
XWindowEventXWindowEvent00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbWindowwWindow w,	// Specifies the window  whose event uou are  ...xblongNoEventMaskKeyPressMaskKeyReleaseMaskButtonPressMaskButtonReleaseMaskEnterWindowMaskLeaveWindowMaskPointerMotionMaskPointerMotionHintMaskButton1MotionMaskButton2MotionMaskButton3MotionMaskButton4MotionMaskButton5MotionMaskButtonMotionMaskKeymapStateMaskExposureMaskVisibilityChangeMaskStructureNotifyMaskResizeRedirectMaskSubstructureNotifyMaskSubstructureRedirectMaskFocusChangeMaskPropertyChangeMaskColormapChangeMaskOwnerGrabButtonMasklong event_mask,	// Specifies the event mask.tbXEvent *event_returnXEvent *event_return	// Returns the matched event's associated  ...
XWithdrawWindowStatus00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbWindowwWindow w,	// Specifies the window.tbintscreen_numberint screen_number	// Specifies the appropriate screen number on the ...
XWMGeometryint00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbintscreenint screen,	// Specifies the screen.tbchar *user_geomchar *user_geom,	// Specifies the user-specified geometry or NULL.tbchar *def_geomchar *def_geom,	// Specifies the application's default geometry or ...tbunsigned intbwidthunsigned int bwidth,	// Specifies the border width.tbXSizeHints *hintsXSizeHints *hints,	// Specifies the size hints for the window in its ...tbint *x_returnint * x_return,	// Return the x and y offsets.tbint *y_returnint * y_return,	// Return the x and y offsets.tbint *width_returnint *width_return,	// Return the width and height determined.tbint *height_returnint *height_return,	// Return the width and height determined.tbint *gravity_returnint *gravity_return	// Returns the window gravity.
XWriteBitmapFileint00tbDisplay *displayDisplay *display,	// Specifies the connection to the X server.tbchar *filenamechar *filename,	// Specifies the file name to use.tbPixmapbitmapPixmap bitmap,	// Specifies the bitmap.tbunsigned intwidthunsigned int width,	// Specify the width and height.tbunsigned intheightunsigned int height,	// Specify the width and height.tbintx_hotint x_hot,	// Specify where to place the hotspot coordinates ...tbinty_hotint y_hot	// Specify where to place the hotspot coordinates ...
XXorRegionXXorRegion00tbRegionsraRegion sra,	// Specify the two regions with which you want to ...tbRegionsrbRegion srb,	// Specify the two regions with which you want to ...tbRegiondr_returnRegion dr_return	// Returns the result of the computation.
