()|,



Motif 1.2.4 Library
XmActivateProtocolvoid00tbWidgetshellWidget    shell,	// Specifies the widget with which the protocol  ...tbAtompropertyAtom      property,	// Specifies the protocol property.tbAtomprotocolAtom      protocol	// Specifies the protocol Atom (or an int  type  cast ...
XmActivateWMProtocolvoid00tbWidgetshellWidget    shell,	// Specifies the widget with which the protocol  ...tbAtomprotocolAtom      protocol	// Specifies  the  protocol Atom (or an int type cast ...
XmAddProtocolCallbackvoid00tbWidgetshellWidget      shell,	// Specifies the widget with which the protocol  ...tbAtompropertyAtom        property,	// Specifies the protocol property.tbAtomprotocolAtom        protocol,	// Specifies  the  protocol Atom (or an int type cast ...tbXtCallbackProccallbackXtCallbackProc callback,	// Specifies the procedure to call  when  a  protocol ...tbXtPointerclosureXtPointer   closure	// Specifies  the  client  data  to  be passed to the ...
XmAddProtocolsvoid00tbWidgetshellWidget    shell,	// Specifies the widget with which the  protocol ...tbAtompropertyAtom      property,	// is associated.tbAtom      *protocolsAtom      * protocols,	// Specifies  the  protocol  Atoms (or int types ...tbCardinalnum_protocolsCardinal  num_protocols	// Specifies the number of  elements  in   ...
XmAddTabGroupvoid00tbWidgettab_groupWidget    tab_group	// is appended to the list of tab groups to be  ...
XmAddWMProtocolCallbackvoid00tbWidgetshellWidget      shell,	// Specifies the widget with which the protocol  ...tbAtomprotocolAtom        protocol,	// Specifies  the  protocol Atom (or an int type cast ...tbXtCallbackProccallbackXtCallbackProc callback,	// Specifies the procedure to call  when  a  protocol ...tbXtPointerclosureXtPointer   closure	// Specifies  the  client  data  to  be passed to the ...
XmAddWMProtocolsvoid00tbWidgetshellWidget    shell,	// Specifies  the widget with which the protocol ...tbAtom      *protocolsAtom      * protocols,	// Specifies the protocol Atoms  (or  int  types ...tbCardinalnum_protocolsCardinal  num_protocols	// Specifies  the  number  of elements in  ...
XmCascadeButtonGadgetHighlightvoid00tbWidgetcascadeButtonGadgetWidget    cascadeButtonGadget,	// Specifies  the  CascadeButtonGadget  to  be ...tbBooleanhighlightBoolean   highlight	// Specifies whether to highlight (True) or to ...
XmCascadeButtonHighlightvoid00tbWidgetcascadeButtonWidget    cascadeButton,	// Specifies the CascadeButton or   ...tbBooleanhighlightBoolean   highlight	// around  the CascadeButton or the  ...
XmChangeColorvoid00tbWidgetwidgetWidget    widget,	// Specifies the  widget  ID  whose  colors  will  be ...tbPixelbackgroundPixel     background	// Specifies the background color pixel value ...
XmClipboardCancelCopyint00tbDisplay   *displayDisplay   * display,	// Specifies a pointer to the Display structure  that ...tbWindowwindowWindow    window,	// Specifies a widget's window ID  that  relates  the ...tblongitem_idlong      item_id	// Specifies  the  number assigned to this data item.
XmClipboardCopyint00tbDisplay    *displayDisplay    * display,	// Specifies  a  pointer to the Display structure ...tbWindowwindowWindow     window,	// Specifies  a  widget's  window ID that relates ...tblongitem_idlong       item_id,	// Specifies the number  assigned  to  this  data ...tbchar       *format_namechar       * format_name,	// Specifies the name of the format in which  the ...tbXtPointerbufferXtPointer  buffer,	// Specifies the buffer from which the  clipboard ...tbunsigned longlengthunsigned long length,	// Specifies  the length of the data being copied ...tblongprivate_idlong       private_id,	// Specifies the private data that  the   ...tblong       *data_idlong       * data_id	// Specifies  an  identifying  number assigned to ...
XmClipboardCopyByNameint00tbDisplay   *displayDisplay   * display,	// Specifies  a  pointer  to  the Display structure ...tbWindowwindowWindow    window,	// Specifies  a widget's window ID that relates the ...tblongdata_idlong      data_id,	// Specifies an identifying number assigned to  the ...tbXtPointerbufferXtPointer buffer,	// Specifies  the  buffer  from which the clipboard ...tbunsigned longlengthunsigned long length,	// Specifies the number of bytes in the data  item.tblongprivate_idlong      private_id	// Specifies  the private data that the application ...
XmClipboardEndCopyint00tbDisplay   *displayDisplay   * display,	// Specifies a pointer to the  Display  structure ...tbWindowwindowWindow    window,	// Specifies a widget's window  ID  that  relates ...tblongitem_idlong      item_id	// Specifies  the  number  assigned  to this data ...
XmClipboardEndRetrieveint00tbDisplay   *displayDisplay   * display,	// Specifies  a  pointer to the Display structure ...tbWindowwindowWindow    window	// Specifies  a  widget's  window ID that relates ...
XmClipboardInquireCountint00tbDisplay   *displayDisplay   * display,	// Specifies a pointer to the Display  ...tbWindowwindowWindow    window,	// Specifies   a  widget's  window  ID  that ...tbint       *countint       * count,	// Returns  the  number of data item formats ...tbunsigned long*max_format_name_lengthunsigned long* max_format_name_length	// Specifies  the maximum length of all  ...
XmClipboardInquireFormatint00tbDisplay    *displayDisplay    * display,	// Specifies a pointer to the Display  structure ...tbWindowwindowWindow     window,	// Specifies a widget's window ID  that  relates ...tbintindexint        index,	// Specifies  which  of the ordered format names ...tbXtPointerformat_name_bufXtPointer  format_name_buf,	// Specifies the buffer that receives the format ...tbunsigned longbuffer_lenunsigned long buffer_len,	// Specifies the number of bytes in  the  format ...tbunsigned long*copied_lenunsigned long* copied_len	// Specifies  the  number of bytes in the string ...
XmClipboardInquireLengthint00tbDisplay   *displayDisplay   * display,	// Specifies  a  pointer to the Display structure ...tbWindowwindowWindow    window,	// Specifies  a  widget's  window ID that relates ...tbchar      *format_namechar      * format_name,	// Specifies the name of the format for the  data ...tbunsigned long*lengthunsigned long* length	// Specifies  the length of the next data item in ...
XmClipboardInquirePendingItemsint00tbDisplay          *displayDisplay          * display,	// Specifies  a  pointer to the Display structure ...tbWindowwindowWindow           window,	// Specifies  a  widget's  window ID that relates ...tbchar             *format_namechar             * format_name,	// Specifies a string that contains the  name  of ...tbXmClipboardPendingList*item_listXmClipboardPendingList* item_list,	// Specifies the address of  the  array  of  data ...tbunsigned long    *countunsigned long    * count	// Specifies  the number of items returned in the ...
XmClipboardLockint00tbDisplay   *displayDisplay   * display,	// Specifies  a  pointer to the Display structure ...tbWindowwindowWindow    window	// Specifies  a  widget's  window ID that relates ...
XmClipboardRegisterFormatint00tbDisplay     *displayDisplay     * display,	// Specifies a pointer to the  Display   ...tbchar        *format_namechar        * format_name,	// Specifies the string name for the new   ...tbintformat_lengthint         format_length	// Specifies the format length in bits (8, 16, ...
XmClipboardRetrieveint00tbDisplay    *displayDisplay    * display,	// Specifies a pointer to the  Display  structure ...tbWindowwindowWindow     window,	// Specifies a widget's window  ID  that  relates ...tbchar       *format_namechar       * format_name,	// Specifies  the  name  of a format in which the ...tbXtPointerbufferXtPointer  buffer,	// Specifies the buffer to which the  application ...tbunsigned longlengthunsigned long length,	// Specifies   the   length  of  the  application ...tbunsigned long*num_bytesunsigned long* num_bytes,	// Specifies the number of bytes of  data  copied ...tblong       *private_idlong       * private_id	// Specifies  the  private  data  stored with the ...
XmClipboardStartCopyint00tbDisplay   *displayDisplay   * display,	// Specifies  a  pointer to the Display structure ...tbWindowwindowWindow    window,	// Specifies  a  widget's  window ID that relates ...tbXmStringclip_labelXmString  clip_label,	// Specifies the label to be associated with  the ...tbTimetimestampTime      timestamp,	// Specifies the time of the event that triggered ...tbWidgetwidgetWidget    widget,	// Specifies  the  ID of the widget that receives ...tbXmCutPasteProccallbackXmCutPasteProc callback,	// Specifies the address of the callback function ...tblong      *item_idlong      * item_id	// Specifies  the  number  assigned  to this data ...
XmClipboardStartRetrieveint00tbDisplay   *displayDisplay   * display,	// Specifies a pointer to the  Display  structure ...tbWindowwindowWindow    window,	// Specifies a widget's window  ID  that  relates ...tbTimetimestampTime      timestamp	// Specifies the time of the event that triggered ...
XmClipboardUndoCopyint00tbDisplay   *displayDisplay   * display,	// Specifies a pointer to the  Display  structure ...tbWindowwindowWindow    window	// Specifies a widget's window  ID  that  relates ...
XmClipboardUnlockint00tbDisplay   *displayDisplay   * display,	// Specifies a pointer to the  Display  structure ...tbWindowwindowWindow    window,	// Specifies a widget's window  ID  that  relates ...tbBooleanremove_all_locksBoolean   remove_all_locks	// When  True, ...
XmClipboardWithdrawFormatint00tbDisplay   *displayDisplay   * display,	// Specifies  a  pointer to the Display structure ...tbWindowwindowWindow    window,	// Specifies  a  widget's  window ID that relates ...tblongdata_idlong      data_id	// Specifies an identifying  number  assigned  to ...
XmCommandAppendValuevoid00tbWidgetwidgetWidget    widget,	// Specifies the Command widget ID ...tbXmStringcommandXmString  command	// Specifies the passed XmString ...
XmCommandErrorvoid00tbWidgetwidgetWidget    widget,	// Specifies the Command widget ID ...tbXmStringerrorXmString  error	// Specifies the passed XmString ...
XmCommandGetChildWidget00tbWidgetwidgetWidget    widget,	// Specifies the Command widget ID.tbunsigned charchildunsigned char child	// Specifies  a  component  within  the Command.
XmCommandSetValuevoid00tbWidgetwidgetWidget    widget,	// Specifies the Command widget ID ...tbXmStringcommandXmString  command	// area  of  the  Command  widget  with  the  passed ...
XmConvertUnitsint00tbWidgetwidgetWidget    widget,	// Specifies  the widget for which the data is to ...tbintorientationint       orientation,	// Specifies whether the converter uses the  ...tbintfrom_unit_typeint       from_unit_type,	// Specifies  the  current  unit type of the  ...tbintfrom_valueint       from_value,	// Specifies the value to be converted ...tbintto_unit_typeint       to_unit_type	// Converts the value to the unit type specified ...
XmCreateArrowButtonWidget00tbWidgetparentWidget    parent,	// Specifies the parent widget ID ...tbStringnameString    name,	// Specifies the name of the created widget ...tbArgListarglistArgList   arglist,	// Specifies the argument list ...tbCardinalargcountCardinal  argcount	// Specifies  the  number of attribute/value pairs in ...
XmCreateArrowButtonGadgetWidget00tbWidgetparentWidget    parent,	// Specifies the parent widget ID ...tbStringnameString    name,	// Specifies the name of the created widget ...tbArgListarglistArgList   arglist,	// Specifies the argument list ...tbCardinalargcountCardinal  argcount	// Specifies the number of attribute/value  pairs  in ...
XmCreateBulletinBoardWidget00tbWidgetparentWidget    parent,	// Specifies the parent widget ID ...tbStringnameString    name,	// Specifies the name of the created widget ...tbArgListarglistArgList   arglist,	// Specifies the argument list ...tbCardinalargcountCardinal  argcount	// Specifies  the  number of attribute/value pairs in ...
XmCreateBulletinBoardDialogWidget00tbWidgetparentWidget    parent,	// Specifies the parent widget ID ...tbStringnameString    name,	// Specifies the name of the created widget ...tbArgListarglistArgList   arglist,	// Specifies the argument list ...tbCardinalargcountCardinal  argcount	// Specifies  the  number of attribute/value pairs in ...
XmCreateCascadeButtonWidget00tbWidgetparentWidget    parent,	// Specifies  the  parent widget ID.tbStringnameString    name,	// Specifies the name of the created widget ...tbArgListarglistArgList   arglist,	// Specifies the argument list ...tbCardinalargcountCardinal  argcount	// Specifies the number of attribute/value  pairs  in ...
XmCreateCascadeButtonGadgetWidget00tbWidgetparentWidget    parent,	// Specifies  the  parent widget ID.tbStringnameString    name,	// Specifies the name of the created widget ...tbArgListarglistArgList   arglist,	// Specifies the argument list ...tbCardinalargcountCardinal  argcount	// Specifies the number of attribute/value  pairs  in ...
XmCreateCommandWidget00tbWidgetparentWidget    parent,	// Specifies the parent widget ID ...tbStringnameString    name,	// Specifies the name of the created widget ...tbArgListarglistArgList   arglist,	// Specifies the argument list ...tbCardinalargcountCardinal  argcount	// Specifies the number of attribute/value  pairs  in ...
XmCreateDialogShellWidget00tbWidgetparentWidget    parent,	// Specifies the parent widget ID ...tbStringnameString    name,	// Specifies the name of the created widget ...tbArgListarglistArgList   arglist,	// Specifies the argument list ...tbCardinalargcountCardinal  argcount	// Specifies  the  number of attribute/value pairs in ...
XmCreateDragIconWidget00tbWidgetwidgetWidget      widget,	// Specifies  the  ID of the widget that the function ...tbStringnameString      name,	// Specifies the name of the DragIcon widget.tbArgListarglistArgList     arglist,	// Specifies the argument list.tbCardinalargcountCardinal    argcount	// Specifies  the  number of attribute/value pairs in ...
XmCreateDrawingAreaWidget00tbWidgetparentWidget    parent,	// Specifies the parent widget ID ...tbStringnameString    name,	// Specifies the name of the created widget ...tbArgListarglistArgList   arglist,	// Specifies the argument list ...tbCardinalargcountCardinal  argcount	// Specifies  the  number of attribute/value pairs in ...
XmCreateDrawnButtonWidget00tbWidgetparentWidget    parent,	// Specifies the parent widget ID ...tbStringnameString    name,	// Specifies the name of the created widget ...tbArgListarglistArgList   arglist,	// Specifies the argument list ...tbCardinalargcountCardinal  argcount	// Specifies  the  number of attribute/value pairs in ...
XmCreateErrorDialogWidget00tbWidgetparentWidget    parent,	// Specifies the parent widget ID ...tbStringnameString    name,	// Specifies the name of the created widget ...tbArgListarglistArgList   arglist,	// Specifies the argument list ...tbCardinalargcountCardinal  argcount	// Specifies the number of attribute/value  pairs  in ...
XmCreateFileSelectionBoxWidget00tbWidgetparentWidget    parent,	// Specifies the parent widget ID ...tbStringnameString    name,	// Specifies the name of the created widget ...tbArgListarglistArgList   arglist,	// Specifies the argument list ...tbCardinalargcountCardinal  argcount	// Specifies the number of attribute/value pairs in the  ...
XmCreateFileSelectionDialogWidget00tbWidgetparentWidget    parent,	// Specifies the parent widget ID ...tbStringnameString    name,	// Specifies the name of the created widget ...tbArgListarglistArgList   arglist,	// Specifies the argument list ...tbCardinalargcountCardinal  argcount	// Specifies the number of attribute/value pairs in the  ...
XmCreateFormWidget00tbWidgetparentWidget    parent,	// Specifies the parent widget ID ...tbStringnameString    name,	// Specifies the name of the created widget ...tbArgListarglistArgList   arglist,	// Specifies the argument list ...tbCardinalargcountCardinal  argcount	// Specifies the number of attribute/value  pairs  in ...
XmCreateFormDialogWidget00tbWidgetparentWidget    parent,	// Specifies the parent widget ID ...tbStringnameString    name,	// Specifies the name of the created widget ...tbArgListarglistArgList   arglist,	// Specifies the argument list ...tbCardinalargcountCardinal  argcount	// Specifies the number of attribute/value  pairs  in ...
XmCreateFrameWidget00tbWidgetparentWidget    parent,	// Specifies the parent widget ID ...tbStringnameString    name,	// Specifies the name of the created widget ...tbArgListarglistArgList   arglist,	// Specifies the argument list ...tbCardinalargcountCardinal  argcount	// Specifies the number of attribute/value  pairs  in ...
XmCreateInformationDialogWidget00tbWidgetparentWidget    parent,	// Specifies the parent widget ID ...tbStringnameString    name,	// Specifies the name of the created widget ...tbArgListarglistArgList   arglist,	// Specifies the argument list ...tbCardinalargcountCardinal  argcount	// Specifies the number of attribute/value  pairs  in ...
XmCreateLabelWidget00tbWidgetparentWidget    parent,	// Specifies the parent widget ID ...tbStringnameString    name,	// Specifies the name of the created widget ...tbArgListarglistArgList   arglist,	// Specifies the argument list ...tbCardinalargcountCardinal  argcount	// Specifies the number of attribute/value  pairs  in ...
XmCreateLabelGadgetWidget00tbWidgetparentWidget    parent,	// Specifies the parent widget ID ...tbStringnameString    name,	// Specifies the name of the created widget ...tbArgListarglistArgList   arglist,	// Specifies the argument list ...tbCardinalargcountCardinal  argcount	// Specifies the number of attribute/value  pairs  in ...
XmCreateListWidget00tbWidgetparentWidget    parent,	// Specifies the parent widget ID ...tbStringnameString    name,	// Specifies the name of the created widget ...tbArgListarglistArgList   arglist,	// Specifies the argument list ...tbCardinalargcountCardinal  argcount	// Specifies the number of attribute/value  pairs  in ...
XmCreateMainWindowWidget00tbWidgetparentWidget    parent,	// Specifies the parent widget ID ...tbStringnameString    name,	// Specifies the name of the created widget ...tbArgListarglistArgList   arglist,	// Specifies the argument list ...tbCardinalargcountCardinal  argcount	// Specifies  the  number of attribute/value pairs in ...
XmCreateMenuBarWidget00tbWidgetparentWidget    parent,	// Specifies the parent widget ID ...tbStringnameString    name,	// Specifies the name of the created widget ...tbArgListarglistArgList   arglist,	// Specifies the argument list ...tbCardinalargcountCardinal  argcount	// Specifies  the  number of attribute/value pairs in ...
XmCreateMenuShellWidget00tbWidgetparentWidget    parent,	// Specifies the parent widget ID ...tbStringnameString    name,	// Specifies the name of the created widget ...tbArgListarglistArgList   arglist,	// Specifies the argument list ...tbCardinalargcountCardinal  argcount	// Specifies the number of attribute/value  pairs  in ...
XmCreateMessageBoxWidget00tbWidgetparentWidget    parent,	// Specifies the parent widget ID ...tbStringnameString    name,	// Specifies the name of the created widget ...tbArgListarglistArgList   arglist,	// Specifies the argument list ...tbCardinalargcountCardinal  argcount	// Specifies the number of attribute/value  pairs  in ...
XmCreateMessageDialogWidget00tbWidgetparentWidget    parent,	// Specifies the parent widget ID ...tbStringnameString    name,	// Specifies the name of the created widget ...tbArgListarglistArgList   arglist,	// Specifies the argument list ...tbCardinalargcountCardinal  argcount	// Specifies  the  number of attribute/value pairs in ...
XmCreateOptionMenuWidget00tbWidgetparentWidget    parent,	// Specifies the parent widget ID ...tbStringnameString    name,	// Specifies the name of the created widget ...tbArgListarglistArgList   arglist,	// Specifies the argument list ...tbCardinalargcountCardinal  argcount	// Specifies  the  number of attribute/value pairs in ...
XmCreatePanedWindowWidget00tbWidgetparentWidget    parent,	// Specifies the parent widget ID ...tbStringnameString    name,	// Specifies the name of the created widget ...tbArgListarglistArgList   arglist,	// Specifies the argument list ...tbCardinalargcountCardinal  argcount	// Specifies  the  number of attribute/value pairs in ...
XmCreatePopupMenuWidget00tbWidgetparentWidget    parent,	// of the MenuPane.tbStringnameString    name,	// Specifies the name of the created widget ...tbArgListarglistArgList   arglist,	// Specifies the argument list ...tbCardinalargcountCardinal  argcount	// Specifies the number of attribute/value  pairs  in ...
XmCreatePromptDialogWidget00tbWidgetparentWidget    parent,	// Specifies the parent widget ID ...tbStringnameString    name,	// Specifies the name of the created widget ...tbArgListarglistArgList   arglist,	// Specifies the argument list ...tbCardinalargcountCardinal  argcount	// Specifies the number of attribute/value  pairs  in ...
XmCreatePulldownMenuWidget00tbWidgetparentWidget    parent,	// Specifies the parent widget ID ...tbStringnameString    name,	// Specifies the name of the created widget ...tbArgListarglistArgList   arglist,	// Specifies the argument list ...tbCardinalargcountCardinal  argcount	// Specifies  the  number of attribute/value pairs in ...
XmCreatePushButtonWidget00tbWidgetparentWidget    parent,	// Specifies the parent widget ID ...tbStringnameString    name,	// Specifies the name of the created widget ...tbArgListarglistArgList   arglist,	// Specifies the argument list ...tbCardinalargcountCardinal  argcount	// Specifies  the  number of attribute/value pairs in ...
XmCreatePushButtonGadgetWidget00tbWidgetparentWidget    parent,	// Specifies the parent widget ID ...tbStringnameString    name,	// Specifies the name of the created widget ...tbArgListarglistArgList   arglist,	// Specifies the argument list ...tbCardinalargcountCardinal  argcount	// Specifies  the  number of attribute/value pairs in ...
XmCreateQuestionDialogWidget00tbWidgetparentWidget    parent,	// Specifies the parent widget ID ...tbStringnameString    name,	// Specifies the name of the created widget ...tbArgListarglistArgList   arglist,	// Specifies the argument list ...tbCardinalargcountCardinal  argcount	// Specifies the number of attribute/value  pairs  in ...
XmCreateRadioBoxWidget00tbWidgetparentWidget    parent,	// Specifies the parent widget ID ...tbStringnameString    name,	// Specifies the name of the created widget ...tbArgListarglistArgList   arglist,	// Specifies the argument list ...tbCardinalargcountCardinal  argcount	// Specifies  the  number of attribute/value pairs in ...
XmCreateRowColumnWidget00tbWidgetparentWidget    parent,	// Specifies the parent widget ID ...tbStringnameString    name,	// Specifies the name of the created widget ...tbArgListarglistArgList   arglist,	// Specifies the argument list ...tbCardinalargcountCardinal  argcount	// Specifies  the  number of attribute/value pairs in ...
XmCreateScaleWidget00tbWidgetparentWidget    parent,	// Specifies the parent widget ID ...tbStringnameString    name,	// Specifies the name of the created widget ...tbArgListarglistArgList   arglist,	// Specifies the argument list ...tbCardinalargcountCardinal  argcount	// Specifies the number of attribute/value  pairs  in ...
XmCreateScrollBarWidget00tbWidgetparentWidget    parent,	// Specifies the parent widget ID ...tbStringnameString    name,	// Specifies the name of the created widget ...tbArgListarglistArgList   arglist,	// Specifies the argument list ...tbCardinalargcountCardinal  argcount	// Specifies the number of attribute/value  pairs  in ...
XmCreateScrolledListWidget00tbWidgetparentWidget    parent,	// Specifies the parent widget ID ...tbStringnameString    name,	// Specifies the name of the created widget ...tbArgListarglistArgList   arglist,	// Specifies the argument list ...tbCardinalargcountCardinal  argcount	// Specifies the number of attribute/value pairs in the  ...
XmCreateScrolledTextWidget00tbWidgetparentWidget    parent,	// Specifies the parent widget ID ...tbStringnameString    name,	// Specifies the name of the created widget ...tbArgListarglistArgList   arglist,	// Specifies the argument list ...tbCardinalargcountCardinal  argcount	// Specifies the number of attribute/value pairs in the  ...
XmCreateScrolledWindowWidget00tbWidgetparentWidget    parent,	// Specifies the parent widget ID ...tbStringnameString    name,	// Specifies the name of the created widget ...tbArgListarglistArgList   arglist,	// Specifies the argument list ...tbCardinalargcountCardinal  argcount	// Specifies  the  number of attribute/value pairs in ...
XmCreateSelectionBoxWidget00tbWidgetparentWidget    parent,	// Specifies the parent widget ID ...tbStringnameString    name,	// Specifies the name of the created widget ...tbArgListarglistArgList   arglist,	// Specifies the argument list ...tbCardinalargcountCardinal  argcount	// Specifies the number of attribute/value pairs in the  ...
XmCreateSelectionDialogWidget00tbWidgetparentWidget    parent,	// Specifies the parent widget ID ...tbStringnameString    name,	// Specifies the name of the created widget ...tbArgListarglistArgList   arglist,	// Specifies the argument list ...tbCardinalargcountCardinal  argcount	// Specifies the number of attribute/value pairs in the  ...
XmCreateSeparatorWidget00tbWidgetparentWidget    parent,	// Specifies the parent widget ID ...tbStringnameString    name,	// Specifies the name of the created widget ...tbArgListarglistArgList   arglist,	// Specifies the argument list ...tbCardinalargcountCardinal  argcount	// Specifies the number of attribute/value  pairs  in ...
XmCreateSeparatorGadgetWidget00tbWidgetparentWidget    parent,	// Specifies the parent widget ID ...tbStringnameString    name,	// Specifies the name of the created widget ...tbArgListarglistArgList   arglist,	// Specifies the argument list ...tbCardinalargcountCardinal  argcount	// Specifies  the  number of attribute/value pairs in ...
XmCreateSimpleCheckBoxWidget00tbWidgetparentWidget    parent,	// Specifies the parent widget ID ...tbStringnameString    name,	// of  each  button  is button_n, ...tbArgListarglistArgList   arglist,	// Specifies the argument list ...tbCardinalargcountCardinal  argcount	// Specifies  the  number of attribute/value pairs in ...
XmCreateSimpleMenuBarWidget00tbWidgetparentWidget    parent,	// Specifies the parent widget ID ...tbStringnameString    name,	// Specifies the name of the created widget ...tbArgListarglistArgList   arglist,	// Specifies the argument list ...tbCardinalargcountCardinal  argcount	// Specifies  the  number of attribute/value pairs in ...
XmCreateSimpleOptionMenuWidget00tbWidgetparentWidget    parent,	// Specifies the parent widget ID ...tbStringnameString    name,	// Specifies the name of the created widget ...tbArgListarglistArgList   arglist,	// Specifies the argument list ...tbCardinalargcountCardinal  argcount	// Specifies  the  number of attribute/value pairs in ...
XmCreateSimplePopupMenuWidget00tbWidgetparentWidget    parent,	// Specifies the widget  ID  of  the  parent  of  the ...tbStringnameString    name,	// Specifies the name of the created widget ...tbArgListarglistArgList   arglist,	// Specifies the argument list ...tbCardinalargcountCardinal  argcount	// Specifies  the  number of attribute/value pairs in ...
XmCreateSimplePulldownMenuWidget00tbWidgetparentWidget    parent,	// Specifies the widget  ID  of  the  parent  of  the ...tbStringnameString    name,	// Specifies the name of the created widget ...tbArgListarglistArgList   arglist,	// Specifies the argument list ...tbCardinalargcountCardinal  argcount	// Specifies  the  number of attribute/value pairs in ...
XmCreateSimpleRadioBoxWidget00tbWidgetparentWidget    parent,	// Specifies the parent widget ID ...tbStringnameString    name,	// Specifies the name of the created widget ...tbArgListarglistArgList   arglist,	// Specifies the argument list ...tbCardinalargcountCardinal  argcount	// Specifies  the  number of attribute/value pairs in ...
XmCreateTemplateDialogWidget00tbWidgetparentWidget    parent,	// Specifies the parent widget ID ...tbStringnameString    name,	// Specifies the name of the created widget ...tbArgListarglistArgList   arglist,	// Specifies the argument list ...tbCardinalargcountCardinal  argcount	// Specifies the number of attribute/value pairs ...
XmCreateTextWidget00tbWidgetparentWidget    parent,	// Specifies the parent widget ID ...tbStringnameString    name,	// Specifies the name of the created widget ...tbArgListarglistArgList   arglist,	// Specifies the argument list ...tbCardinalargcountCardinal  argcount	// Specifies the number of attribute/value  pairs  in ...
XmCreateTextFieldWidget00tbWidgetparentWidget    parent,	// Specifies the parent widget ID ...tbStringnameString    name,	// Specifies the name of the created widget ...tbArgListarglistArgList   arglist,	// Specifies the argument list ...tbCardinalargcountCardinal  argcount	// Specifies the number of attribute/value  pairs  in ...
XmCreateToggleButtonWidget00tbWidgetparentWidget    parent,	// Specifies the parent widget ID ...tbStringnameString    name,	// Specifies the name of the created widget ...tbArgListarglistArgList   arglist,	// Specifies the argument list ...tbCardinalargcountCardinal  argcount	// Specifies  the  number of attribute/value pairs in ...
XmCreateToggleButtonGadgetWidget00tbWidgetparentWidget    parent,	// Specifies the parent widget ID ...tbStringnameString    name,	// Specifies the name of the created widget ...tbArgListarglistArgList   arglist,	// Specifies the argument list ...tbCardinalargcountCardinal  argcount	// Specifies  the  number of attribute/value pairs in ...
XmCreateWarningDialogWidget00tbWidgetparentWidget    parent,	// Specifies the parent widget ID ...tbStringnameString    name,	// Specifies the name of the created widget ...tbArgListarglistArgList   arglist,	// Specifies the argument list ...tbCardinalargcountCardinal  argcount	// Specifies the number of attribute/value  pairs  in ...
XmCreateWorkAreaWidget00tbWidgetparentWidget    parent,	// Specifies the parent widget ID ...tbStringnameString    name,	// Specifies the name of the created widget ...tbArgListarglistArgList   arglist,	// Specifies the argument list ...tbCardinalargcountCardinal  argcount	// Specifies the number of attribute/value  pairs  in ...
XmCreateWorkingDialogWidget00tbWidgetparentWidget    parent,	// Specifies the parent widget ID ...tbStringnameString    name,	// Specifies the name of the created widget ...tbArgListarglistArgList   arglist,	// Specifies the argument list ...tbCardinalargcountCardinal  argcount	// Specifies  the  number of attribute/value pairs in ...
XmCvtCTToXmStringXmString00tbchar        *textchar        * text	// format  to  a compound string.
XmCvtStringToUnitTypevoid00tbXrmValuePtrargsXrmValuePtr args,	// Specifies  a list of additional XrmValue arguments ...tbCardinal  *num_argsCardinal  * num_args,	// Specifies  the number of additional XrmValue  ...tbXrmValue  *from_valXrmValue  * from_val,	// Specifies the value to convert ...tbXrmValue  *to_valXrmValue  * to_val	// Specifies the descriptor to use to return the  ...
XmCvtXmStringToCTchar *00tbXmStringstringXmString    string	// in compound text format.
XmDeactivateProtocolvoid00tbWidgetshellWidget    shell,	// is realized.tbAtompropertyAtom      property,	// Specifies the protocol property ...tbAtomprotocolAtom      protocol	// Specifies the protocol atom (or an int  type  cast ...
XmDeactivateWMProtocolvoid00tbWidgetshellWidget    shell,	// Specifies the widget with which the protocol  ...tbAtomprotocolAtom      protocol	// Specifies  the  protocol atom (or an int type cast ...
XmDestroyPixmapBoolean00tbScreen    *screenScreen    * screen,	// Specifies the display screen for which the  pixmap ...tbPixmappixmapPixmap    pixmap	// Specifies the pixmap to be destroyed ...
XmDragCancelvoid00tbWidgetdragcontextWidget      dragcontext	// Specifies the ID of the DragContext widget  ...
XmDragStartWidget00tbWidgetwidgetWidget         widget,	// Specifies the ID of  the  smallest  widget  and/or ...tbXEvent         *eventXEvent         *event,	// Specifies the XEvent that triggered the drag  ...tbArgListarglistArgList        arglist,	// Specifies  the  argument  list.tbCardinalargcountCardinal       argcount	// Specifies the number of attribute/value  pairs  in ...
XmDropSiteConfigureStackingOrdervoid00tbWidgetwidgetWidget      widget,	// Specifies the drop site to be restacked.tbWidgetsiblingWidget      sibling,	// Specifies a sibling drop site for stacking   ...tbCardinalstack_modeCardinal    stack_mode	// Specifies the new stack position for the specified ...
XmDropSiteEndUpdatevoid00tbWidgetwidgetWidget      widget	// Specifies  the  ID  of  any  widget within a given ...
XmDropSiteQueryStackingOrderStatus00tbWidgetwidgetWidget      widget,	// Specifies  the  widget  ID.tbWidget      *parent_returnWidget      *parent_return,	// Returns  the  widget ID of the drop site parent of ...tbWidget      **child_returnsWidget      **child_returns,	// Returns a pointer to the list of drop  site   ...tbCardinal    *num_child_returnsCardinal    *num_child_returns	// Returns  the  number of drop site children for the ...
XmDropSiteRegistervoid00tbWidgetwidgetWidget      widget,	// Specifies the ID of the widget to be registered.tbArgListarglistArgList     arglist,	// Specifies the argument list.tbCardinalargcountCardinal    argcount	// Specifies the number of attribute/value  pairs  in ...
XmDropSiteRetrievevoid00tbWidgetwidgetWidget      widget,	// Specifies the ID of the widget that  encloses  the ...tbArgListarglistArgList     arglist,	// Specifies the argument list.tbCardinalargcountCardinal    argcount	// Specifies  the  number of attribute/value pairs in ...
XmDropSiteStartUpdatevoid00tbWidgetwidgetWidget      widget	// Specifies  the  ID  of  any  widget within a given ...
XmDropSiteUnregistervoid00tbWidgetwidgetWidget      widget	// Specifies the ID of the widget, ...
XmDropSiteUpdatevoid00tbWidgetwidgetWidget      widget,	// Specifies the ID of the  widget  registered  as  a ...tbArgListarglistArgList     arglist,	// Specifies the argument list ...tbCardinalargcountCardinal    argcount	// Specifies  the  number of attribute/value pairs in ...
XmDropTransferAddvoid00tbWidgetdrop_transferWidget           drop_transfer,	// Specifies   the  ID  of  the  DropTransfer  widget ...tbXmDropTransferEntryRec*transfersXmDropTransferEntryRec* transfers,	// Specifies the  additional  drop  transfer  entries ...tbCardinalnum_transfersCardinal         num_transfers	// Specifies  the  number  of  items in the transfers ...
XmDropTransferStartWidget00tbWidgetwidgetWidget      widget,	// Specifies the ID of the DragContext widget  ...tbArgListarglistArgList     arglist,	// Specifies the argument list ...tbCardinalargcountCardinal    argcount	// Specifies the number of attribute/value  pairs  in ...
XmFileSelectionBoxGetChildWidget00tbWidgetwidgetWidget    widget,	// Specifies the FileSelectionBox widget ID.tbunsigned charchildunsigned char child	// Specifies a component within the FileSelectionBox.
XmFileSelectionDoSearchvoid00tbWidgetwidgetWidget    widget,	// Specifies the FileSelectionBox widget ID.tbXmStringdirmaskXmString  dirmask	// Specifies  the  directory mask used in determining ...
XmFontListAddXmFontList00tbXmFontListoldlistXmFontList  oldlist,	// Specifies a pointer to the font list to  which  an ...tbXFontStruct *fontXFontStruct *font,	// Specifies  a pointer to a font structure for which ...tbXmStringCharSetcharsetXmStringCharSet charset	// Specifies the character  set  identifier  for  the ...
XmFontListAppendEntryXmFontList00tbXmFontListoldlistXmFontList  oldlist,	// Specifies the font list to be added to ...tbXmFontListEntryentryXmFontListEntry entry	// Specifies the font list entry to be added ...
XmFontListCopyXmFontList00tbXmFontListfontlistXmFontList  fontlist	// Specifies a font list to be copied ...
XmFontListCreateXmFontList00tbXFontStruct *fontXFontStruct * font,	// Specifies a pointer to a font structure for  which ...tbXmStringCharSetcharsetXmStringCharSet charset	// Specifies  the  character  set  identifier for the ...
XmFontListEntryCreateXmFontListEntry00tbchar      *tagchar      *tag,	// Specifies a NULL terminated string for the tag  of ...tbXmFontTypetypeXmFontType type,	// Specifies  whether  the  font  argument  is a font ...tbXtPointerfontXtPointer font	// Specifies  either an XFontSet returned by  ...
XmFontListEntryFreevoid00tbXmFontListEntry*entryXmFontListEntry* entry	// Specifies the font list entry to be freed ...
XmFontListEntryGetFontXtPointer00tbXmFontListEntryentryXmFontListEntry entry,	// Specifies the font list entry.tbXmFontType  *type_returnXmFontType  *type_return	// Specifies  a  pointer to the type of the font  ...
XmFontListEntryGetTagchar*00tbXmFontListEntryentryXmFontListEntry entry	// Specifies the font list entry ...
XmFontListEntryLoadXmFontListEntry00tbDisplay   *displayDisplay   *display,	// Specifies  the display where the font list will be ...tbchar      *font_namechar      *font_name,	// Specifies an X  Logical  Font  Description  (XLFD) ...tbXmFontTypetypeXmFontType type,	// Specifies whether the font_name argument refers to ...tbchar      *tagchar      *tag	// Specifies the tag of the font  list  entry  to  be ...
XmFontListFreevoid00tbXmFontListlistXmFontList list	// Specifies the font list to be freed ...
XmFontListFreeFontContextvoid00tbXmFontContextcontextXmFontContext context	// is no longer needed and will not be  used  without ...
XmFontListGetNextFontBoolean00tbXmFontContextcontextXmFontContext context,	// Specifies the font list context ...tbXmStringCharSet*charsetXmStringCharSet*charset,	// Specifies a pointer to a character set string; the ...tbXFontStruct **fontXFontStruct **font	// list context.
XmFontListInitFontContextBoolean00tbXmFontContext*contextXmFontContext*context,	// is used when reading  the  font  list  entry  tag, ...tbXmFontListfontlistXmFontList  fontlist	// Specifies the font list ...
XmFontListNextEntryXmFontListEntry00tbXmFontContextcontextXmFontContext context	// Specifies the font list context ...
XmFontListRemoveEntryXmFontList00tbXmFontListoldlistXmFontList  oldlist,	// that  match  the  components (tag, ...tbXmFontListEntryentryXmFontListEntry entry	// Specifies the font list entry to be removed ...
XmGetAtomNameString00tbDisplay   *displayDisplay   * display,	// Specifies the connection to the X server ...tbAtomatomAtom      atom	// Specifies the atom for the property name you  want ...
XmGetColorCalculationXmColorProc00
XmGetColorsvoid00tbScreen    *screenScreen    * screen,	// Specifies the screen for which these colors should ...tbColormapcolormapColormap  colormap,	// Specifies  the  colormap  from  which these colors ...tbPixelbackgroundPixel     background,	// Specifies  the  background  on  which  the  colors ...tbPixel     *foregroundPixel     * foreground,	// Specifies  a  pointer  to  the returned foreground ...tbPixel     *top_shadowPixel     * top_shadow,	// Specifies  a  pointer  to  the returned top shadow ...tbPixel     *bottom_shadowPixel     * bottom_shadow,	// Specifies  a pointer to the returned bottom shadow ...tbPixel     *selectPixel     * select	// Specifies  a  pointer to the returned select pixel ...
XmGetDestinationWidget00tbDisplay   *displayDisplay   *display	// Specifies the display whose destination widget  is ...
XmGetDragContextWidget00tbWidgetrefwidgetWidget      refwidget,	// Specifies  the  ID  of the widget that the routine ...tbTimetimestampTime        timestamp	// uniquely identifies which DragContext is  active ...
XmGetFocusWidgetWidget00tbWidgetwidgetWidget    widget	// Specifies a widget ID within a given hierarchy ...
XmGetMenuCursorCursor00tbDisplay   *displayDisplay   * display	// Specifies the display whose menu cursor is  to  be ...
XmGetPixmapPixmap00tbScreen    *screenScreen    *screen,	// Specifies the display screen on which the pixmap ...tbchar      *image_namechar      *image_name,	// Specifies the name of the image to  be  used  to ...tbPixelforegroundPixel     foreground,	// Combines  the image with the foreground color to ...tbPixelbackgroundPixel     background	// Combines  the image with the background color to ...
XmGetPixmapByDepthPixmap00tbScreen    *screenScreen    *screen,	// Specifies the display screen on which the pixmap ...tbchar      *image_namechar      *image_name,	// Specifies the name of the image to  be  used  to ...tbPixelforegroundPixel     foreground,	// Combines  the image with the foreground color to ...tbPixelbackgroundPixel     background,	// Combines  the image with the background color to ...tbintdepthint       depth	// Specifies the depth of the pixmap ...
XmGetPostedFromWidgetWidget00tbWidgetmenuWidget    menu	// Specifies the widget ID of the menu ...
XmGetSecondaryResourceDataCardinal00tbWidgetClasswidget_classWidgetClass         widget_class,	// Specifies the widget  class  for  which  secondary ...tbXmSecondaryResourceData**secondary_data_returnXmSecondaryResourceData**secondary_data_return	// Specifies  a pointer to an array of  ...
XmGetTabGroupWidget00tbWidgetwidgetWidget    widget	// Specifies a widget ID within a tab group ...
XmGetTearOffControlWidget00tbWidgetmenuWidget    menu	// Specifies the widget ID of the RowColumn  ...
XmGetVisibilityXmVisibility00tbWidgetwidgetWidget    widget	// Specifies the ID of the widget ...
XmGetXmDisplayWidget00tbDisplay     *displayDisplay     *display	// Specifies the  display  for  which  the  XmDisplay ...
XmGetXmScreenWidget00tbScreen      *screenScreen      *screen	// Specifies the screen for which the XmScreen ID  is ...
XmInstallImageBoolean00tbXImage    *imageXImage    * image,	// Points to the image structure to  be  installed.tbchar      *image_namechar      * image_name	// Specifies a string that the application uses  to ...
XmInternAtomAtom00tbDisplay   *displayDisplay   * display,	// Specifies the connection to the X server ...tbStringnameString    name,	// Specifies the name associated with the atom  you ...tbBooleanonly_if_existsBoolean   only_if_exists	// Specifies a Boolean value that indicates whether ...
XmIsMotifWMRunningBoolean00tbWidgetshellWidget    shell	// Specifies the shell whose screen  will  be  tested ...
XmIsTraversableBoolean00tbWidgetwidgetWidget    widget	// Specifies the ID of the widget ...
XmListAddItemvoid00tbWidgetwidgetWidget    widget,	// Specifies the ID of the List to which an  item  is ...tbXmStringitemXmString  item,	// matches  an  item  on  the selected list, ...tbintpositionint       position	// Specifies  the  position  of  the  new item in the ...
XmListAddItemsvoid00tbWidgetwidgetWidget    widget,	// Specifies  the  ID of the List to which an item is ...tbXmString  *itemsXmString  *items,	// Specifies a pointer to the items to  be  added  to ...tbintitem_countint       item_count,	// Specifies the number of items in items.tbintpositionint       position	// Specifies the position of the first  new  item  in ...
XmListAddItemsUnselectedvoid00tbWidgetwidgetWidget    widget,	// Specifies the ID of the List widget to add items ...tbXmString  *itemsXmString  *items,	// Specifies a pointer to the items to be added  to ...tbintitem_countint       item_count,	// Specifies the number of elements in items.tbintpositionint       position	// Specifies the position of the first new item  in ...
XmListAddItemUnselectedvoid00tbWidgetwidgetWidget    widget,	// Specifies  the  ID  of the List from whose list an ...tbXmStringitemXmString  item,	// is added.tbintpositionint       position	// Specifies the position of  the  new  item  in  the ...
XmListDeleteAllItemsvoid00tbWidgetwidgetWidget    widget	// Specifies the ID of the List from whose  list  the ...
XmListDeleteItemvoid00tbWidgetwidgetWidget    widget,	// Specifies the ID of the List from  whose  list  an ...tbXmStringitemXmString  item	// is deleted ...
XmListDeleteItemsvoid00tbWidgetwidgetWidget    widget,	// Specifies  the  ID  of the List from whose list an ...tbXmString  *itemsXmString  *items,	// Specifies a pointer to items to  be  deleted  from ...tbintitem_countint       item_count	// Specifies  the  number  of  elements in items This ...
XmListDeleteItemsPosvoid00tbWidgetwidgetWidget    widget,	// Specifies  the  ID  of the List from whose list an ...tbintitem_countint       item_count,	// Specifies the number of items to be deleted.tbintpositionint       position	// Specifies  the  position  in the list of the first ...
XmListDeletePosvoid00tbWidgetwidgetWidget    widget,	// Specifies the ID of the List from which an item is ...tbintpositionint       position	// Specifies  the position of the item to be deleted.
XmListDeletePositionsvoid00tbWidgetwidgetWidget    widget,	// Specifies the ID of the List widget ...tbint       *position_listint       *position_list,	// Specifies  an  array of the item positions to ...tbintposition_countint       position_count	// Specifies the number of elements in the  ...
XmListDeselectAllItemsvoid00tbWidgetwidgetWidget    widget	// Specifies  the  ID  of  the List widget from whose ...
XmListDeselectItemvoid00tbWidgetwidgetWidget    widget,	// Specifies the ID of the List from  whose  list  an ...tbXmStringitemXmString  item	// is deselected ...
XmListDeselectPosvoid00tbWidgetwidgetWidget    widget,	// Specifies the ID of the List widget ...tbintpositionint       position	// and deletes it from the list of selected items.
XmListGetKbdItemPosint00tbWidgetwidgetWidget    widget	// Specifies the ID of the List widget ...
XmListGetMatchPosBoolean00tbWidgetwidgetWidget    widget,	// Specifies the ID of the List widget.tbXmStringitemXmString  item,	// Specifies the item to search for.tbint       **position_listint       **position_list,	// Returns an array of positions at  which  the  item ...tbint       *position_countint       *position_count	// Returns  the  number  of  elements  in  the   ...
XmListGetSelectedPosBoolean00tbWidgetwidgetWidget    widget,	// Specifies the ID of the List widget.tbint       **position_listint       **position_list,	// Returns  an array of the positions of the selected ...tbint       *position_countint       *position_count	// Returns  the  number  of  elements  in  the   ...
XmListItemExistsBoolean00tbWidgetwidgetWidget    widget,	// Specifies the ID of the List widget ...tbXmStringitemXmString  item	// Specifies the item whose presence is checked ...
XmListItemPosint00tbWidgetwidgetWidget    widget,	// Specifies the ID of the List widget ...tbXmStringitemXmString  item	// Specifies the item whose position is returned ...
XmListPosSelectedBoolean00tbWidgetwidgetWidget    widget,	// Specifies the ID of the List widget ...tbintpositionint       position	// is selected or not.
XmListPosToBoundsBoolean00tbWidgetwidgetWidget    widget,	// Specifies the ID of the List widget.tbintpositionint       position,	// Specifies the position of the specified  item.tbPosition  *xPosition  *x,	// Specifies a pointer to the returned  x  coordinate ...tbPosition  *yPosition  *y,	// Specifies the pointer to the returned y coordinate ...tbDimension *widthDimension *width,	// Specifies the pointer to the returned width of the ...tbDimension *heightDimension *height	// Specifies  the  pointer  to the returned height of ...
XmListReplaceItemsvoid00tbWidgetwidgetWidget    widget,	// Specifies the ID of the List widget ...tbXmString  *old_itemsXmString  *old_items,	// Specifies the items to be replaced ...tbintitem_countint       item_count,	// Specifies the number of  items  in  old_items  and ...tbXmString  *new_itemsXmString  *new_items	// This number must be non-negative.
XmListReplaceItemsPosvoid00tbWidgetwidgetWidget    widget,	// Specifies the ID of the List widget.tbXmString  *new_itemsXmString  *new_items,	// Specifies the replacement items.tbintitem_countint       item_count,	// Specifies the number of items in new_items and the ...tbintpositionint       position	// Specifies  the  position  of the first item in the ...
XmListReplaceItemsPosUnselectedvoid00tbWidgetwidgetWidget    widget,	// Specifies  the  ID of the List widget to replace ...tbXmString  *new_itemsXmString  *new_items,	// Specifies a pointer to the replacement items.tbintitem_countint       item_count,	// Specifies the number of  elements  in  new_items ...tbintpositionint       position	// Specifies the position of the first item in  the ...
XmListReplaceItemsUnselectedvoid00tbWidgetwidgetWidget    widget,	// Specifies  the  ID of the List widget to replace ...tbXmString  *old_itemsXmString  *old_items,	// Specifies a pointer to  the  list  items  to  be ...tbintitem_countint       item_count,	// Specifies  the  number  of elements in old_items ...tbXmString  *new_itemsXmString  *new_items	// Specifies  a  pointer  to the replacement items.
XmListReplacePositionsvoid00tbWidgetwidgetWidget    widget,	// Specifies the ID of the List widget.tbint       *position_listint       *position_list,	// Specifies  an array of the positions of items to ...tbXmString  *item_listXmString  *item_list,	// Specifies an array of the replacement items.tbintitem_countint       item_count	// Specifies  the  number  of  elements  in    ...
XmListSelectItemvoid00tbWidgetwidgetWidget    widget,	// Specifies  the  ID  of  the List widget from whose ...tbXmStringitemXmString  item,	// Specifies the item to be selected in the List  ...tbBooleannotifyBoolean   notify	// Specifies  a  Boolean value that when True invokes ...
XmListSelectPosvoid00tbWidgetwidgetWidget    widget,	// Specifies the ID of the List widget.tbintpositionint       position,	// and adds it to the list of selected items.tbBooleannotifyBoolean   notify	// Specifies a Boolean value that when  True  invokes ...
XmListSetAddModevoid00tbWidgetwidgetWidget    widget,	// Specifies the ID of the List widget ...tbBooleanstateBoolean   state	// Specifies  whether  to  activate or deactivate Add ...
XmListSetBottomItemvoid00tbWidgetwidgetWidget    widget,	// Specifies  the  ID  of  the List widget from whose ...tbXmStringitemXmString  item	// Specifies the item ...
XmListSetBottomPosvoid00tbWidgetwidgetWidget    widget,	// Specifies the ID of the List widget.tbintpositionint       position	// Specifies  the position of the item to be made the ...
XmListSetHorizPosvoid00tbWidgetwidgetWidget    widget,	// Specifies the ID of the List widget ...tbintpositionint       position	// Specifies the horizontal position ...
XmListSetItemvoid00tbWidgetwidgetWidget    widget,	// Specifies  the  ID  of  the List widget from whose ...tbXmStringitemXmString  item	// Specifies the item ...
XmListSetKbdItemPosBoolean00tbWidgetwidgetWidget    widget,	// Specifies the ID of the List widget.tbintpositionint       position	// Specifies  the  position  of the item at which the ...
XmListSetPosvoid00tbWidgetwidgetWidget    widget,	// Specifies the ID of the List widget.tbintpositionint       position	// Specifies  the position of the item to be made the ...
XmListUpdateSelectedListvoid00tbWidgetwidgetWidget    widget	// Specifies the ID of the List widget to update ...
XmListYToPosint00tbWidgetwidgetWidget    widget,	// Specifies the ID of the List widget ...tbPositionyPosition  y	// coordinate within the list.
XmMainWindowSep1Widget00tbWidgetwidgetWidget    widget	// Specifies the MainWindow widget ID ...
XmMainWindowSep2Widget00tbWidgetwidgetWidget           widget	// Specifies the MainWindow widget ID ...
XmMainWindowSep3Widget00tbWidgetwidgetWidget           widget	// Specifies the MainWindow widget ID ...
XmMainWindowSetAreasvoid00tbWidgetwidgetWidget    widget,	// Specifies the MainWindow widget ID.tbWidgetmenu_barWidget    menu_bar,	// Specifies the widget ID for the MenuBar to be ...tbWidgetcommand_windowWidget    command_window,	// Specifies the widget ID for the command   ...tbWidgethorizontal_scrollbarWidget    horizontal_scrollbar,	// Specifies  the  ScrollBar  widget  ID for the ...tbWidgetvertical_scrollbarWidget    vertical_scrollbar,	// Specifies the ScrollBar  widget  ID  for  the ...tbWidgetwork_regionWidget    work_region	// Specifies  the  widget ID for the work window ...
XmMapSegmentEncodingchar *00tbchar        *fontlist_tagchar        *fontlist_tag	// Specifies the compound string font list tag ...
XmMenuPositionvoid00tbWidgetmenuWidget         menu,	// Specifies the PopupMenu to be positioned ...tbXButtonPressedEvent*eventXButtonPressedEvent* event	// Specifies the event passed to the action procedure ...
XmMessageBoxGetChildWidget00tbWidgetwidgetWidget    widget,	// Specifies the MessageBox widget ID.tbunsigned charchildunsigned char child	// Specifies  a component within the MessageBox.
XmOptionButtonGadgetWidget00tbWidgetoption_menuWidget    option_menu	// Specifies the OptionMenu widget ID ...
XmOptionLabelGadgetWidget00tbWidgetoption_menuWidget    option_menu	// Specifies the OptionMenu widget ID ...
XmProcessTraversalBoolean00tbWidgetwidgetWidget         widget,	// Specifies  the  widget  ID of the widget whose ...tbXmTraversalDirectiondirectionXmTraversalDirection direction	// Specifies the direction of traversal ...
XmRegisterSegmentEncodingchar *00tbchar   *fontlist_tagchar   *fontlist_tag,	// Specifies the font list element tag to  be   ...tbchar   *ct_encodingchar   *ct_encoding	// Specifies the compound text character  set  to  be ...
XmRemoveProtocolCallbackvoid00tbWidgetshellWidget      shell,	// Specifies the widget with which the protocol  ...tbAtompropertyAtom        property,	// Specifies the protocol property ...tbAtomprotocolAtom        protocol,	// Specifies the protocol atom (or  an  int  cast  to ...tbXtCallbackProccallbackXtCallbackProc callback,	// Specifies  the  procedure  to call when a protocol ...tbXtPointerclosureXtPointer   closure	// Specifies the client data  to  be  passed  to  the ...
XmRemoveProtocolsvoid00tbWidgetshellWidget    shell,	// Specifies the widget with which the  protocol ...tbAtompropertyAtom      property,	// is associated ...tbAtom      *protocolsAtom      * protocols,	// Specifies the protocol atoms (or ints cast to ...tbCardinalnum_protocolsCardinal  num_protocols	// Specifies the number of elements in protocols ...
XmRemoveTabGroupvoid00tbWidgettab_groupWidget    tab_group	// Specifies the widget ID ...
XmRemoveWMProtocolCallbackvoid00tbWidgetshellWidget      shell,	// Specifies the widget with which the protocol  ...tbAtomprotocolAtom        protocol,	// Specifies  the  protocol atom (or an int type cast ...tbXtCallbackProccallbackXtCallbackProc callback,	// Specifies the procedure to call  when  a  protocol ...tbXtPointerclosureXtPointer   closure	// Specifies  the  client  data  to  be passed to the ...
XmRemoveWMProtocolsvoid00tbWidgetshellWidget    shell,	// Specifies  the widget with which the protocol ...tbAtom      *protocolsAtom      * protocols,	// Specifies the protocol atoms (or ints cast to ...tbCardinalnum_protocolsCardinal  num_protocols	// Specifies the number of elements in protocols ...
XmRepTypeAddReversevoid00tbXmRepTypeIdrep_type_idXmRepTypeId rep_type_id	// Specifies  the identification number of the  ...
XmRepTypeGetIdXmRepTypeId00tbStringrep_typeString    rep_type	// Specifies  the  representation type for which an ...
XmRepTypeGetNameListString *00tbXmRepTypeIdrep_type_idXmRepTypeId rep_type_id,	// Specifies  the identification number of the  ...tbBooleanuse_uppercase_formatBoolean     use_uppercase_format	// Specifies a Boolean value that controls the  ...
XmRepTypeGetRecordXmRepTypeEntry00tbXmRepTypeIdrep_type_idXmRepTypeId rep_type_id	// The identification number of the  representation ...
XmRepTypeGetRegisteredXmRepTypeList00
XmRepTypeInstallTearOffModelConvertervoid00
XmRepTypeRegisterXmRepTypeId00tbStringrep_typeString      rep_type,	// Specifies the representation type name.tbString      *value_namesString      *value_names,	// array determines the numerical values for the ...tbunsigned char*valuesunsigned char*values,	// are assumed.tbunsigned charnum_valuesunsigned char num_values	// Specifies   the  number  of  entries  in  the ...
XmRepTypeValidValueBoolean00tbXmRepTypeIdrep_type_idXmRepTypeId rep_type_id,	// Specifies  the identification number of the  ...tbunsigned chartest_valueunsigned char test_value,	// Specifies the numerical value to test.tbWidgetenable_default_warningWidget      enable_default_warning	// Specifies the ID of the widget that  contains  a ...
XmResolveAllPartOffsetsvoid00tbWidgetClasswidget_classWidgetClass widget_class,	// Specifies the widget class pointer for the created  ...tbXmOffsetPtr*offsetXmOffsetPtr* offset,	// record.tbXmOffsetPtr*constraint_offsetXmOffsetPtr* constraint_offset	// Returns the constraint offset record ...
XmResolvePartOffsetsvoid00tbWidgetClasswidget_classWidgetClass widget_class,	// Specifies the widget class pointer for the created  ...tbXmOffsetPtr*offsetXmOffsetPtr* offset	// Returns the offset record.
XmScaleGetValuevoid00tbWidgetwidgetWidget    widget,	// Specifies the Scale widget ID ...tbint       *value_returnint       * value_return	// Returns the current slider position value ...
XmScaleSetValuevoid00tbWidgetwidgetWidget    widget,	// Specifies the Scale widget ID.tbintvalueint       value	// Specifies  the  slider position along the scale.
XmScrollBarGetValuesvoid00tbWidgetwidgetWidget      widget,	// Specifies the ScrollBar widget ID.tbint         *value_returnint         * value_return,	// Returns  the ScrollBar's slider position ...tbint         *slider_size_returnint         * slider_size_return,	// Returns  the  size  of  the  slider as a ...tbint         *increment_returnint         * increment_return,	// Returns  the  amount  of  increment  and ...tbint         *page_increment_returnint         * page_increment_return	// Returns the amount of page increment and ...
XmScrollBarSetValuesvoid00tbWidgetwidgetWidget    widget,	// Specifies the ScrollBar widget ID.tbintvalueint       value,	// Specifies   the  ScrollBar's  slider  position ...tbintslider_sizeint       slider_size,	// Specifies the size of the slider  as  a  value ...tbintincrementint       increment,	// Specifies the amount of button  increment  and ...tbintpage_incrementint       page_increment,	// Specifies  the  amount  of  page increment and ...tbBooleannotifyBoolean   notify	// Specifies a  Boolean  value  that  when  True, ...
XmScrolledWindowSetAreasvoid00tbWidgetwidgetWidget    widget,	// Specifies the ScrolledWindow widget ID.tbWidgethorizontal_scrollbarWidget    horizontal_scrollbar,	// Specifies the ScrollBar widget ID  for  the ...tbWidgetvertical_scrollbarWidget    vertical_scrollbar,	// Specifies the ScrollBar widget ID  for  the ...tbWidgetwork_regionWidget    work_region	// Specifies the widget ID for the work window ...
XmScrollVisiblevoid00tbWidgetscrollw_widgetWidget      scrollw_widget,	// Specifies the  ID  of  the  ScrolledWindow  widget ...tbWidgetwidgetWidget      widget,	// or gadget descendant of a ScrolledWindow work area ...tbDimensionleft_right_marginDimension   left_right_margin,	// Specifies the margin to establish between the left ...tbDimensiontop_bottom_marginDimension   top_bottom_margin	// Specifies  the margin to establish between the top ...
XmSelectionBoxGetChildWidget00tbWidgetwidgetWidget    widget,	// Specifies the SelectionBox widget ID.tbunsigned charchildunsigned char child	// Specifies  a  component  within  the SelectionBox.
XmSetColorCalculationXmColorProc00tbXmColorProccolor_procXmColorProc color_proc	// Specifies  the procedure to use for color  ...
XmSetFontUnitvoid00tbDisplay   *displayDisplay   * display,	// Defines the display for which this font  unit ...tbintfont_unit_valueint       font_unit_value	// Specifies the value to be used for both  ...
XmSetFontUnitsvoid00tbDisplay   *displayDisplay   * display,	// Defines the display for which this font  unit ...tbinth_valueint       h_value,	// Specifies the value to be used for horizontal ...tbintv_valueint       v_value	// Specifies the value to be used  for  vertical ...
XmSetMenuCursorvoid00tbDisplay   *displayDisplay   * display,	// Specifies the display to which the cursor is to be ...tbCursorcursorIdCursor    cursorId	// Specifies the X cursor ID ...
XmSetProtocolHooksvoid00tbWidgetshellWidget         shell,	// Specifies the widget  with  which  the  protocol ...tbAtompropertyAtom           property,	// is associated ...tbAtomprotocolAtom           protocol,	// manager structures opaque.tbXtCallbackProcprehookXtCallbackProc prehook,	// Specifies the procedure to call  before  calling ...tbXtPointerpre_closureXtPointer      pre_closure,	// Specifies  the  client  data to be passed to the ...tbXtCallbackProcposthookXtCallbackProc posthook,	// Specifies the procedure to  call  after  calling ...tbXtPointerpost_closureXtPointer      post_closure	// Specifies  the  client  data to be passed to the ...
XmSetWMProtocolHooksvoid00tbWidgetshellWidget      shell,	// Specifies  the  widget  with  which the protocol ...tbAtomprotocolAtom        protocol,	// Specifies the protocol atom (or an int  cast  to ...tbXtCallbackProcprehookXtCallbackProc prehook,	// Specifies  the  procedure to call before calling ...tbXtPointerpre_closureXtPointer   pre_closure,	// Specifies the client data to be  passed  to  the ...tbXtCallbackProcposthookXtCallbackProc posthook,	// Specifies  the  procedure  to call after calling ...tbXtPointerpost_closureXtPointer   post_closure	// Specifies the client data to be  passed  to  the ...
XmStringBaselineDimension00tbXmFontListfontlistXmFontList fontlist,	// Specifies the font list ...tbXmStringstringXmString  string	// Specifies the string ...
XmStringByteCompareBoolean00tbXmStrings1XmString  s1,	// Specifies a compound string to be compared with s2 ...tbXmStrings2XmString  s2	// Specifies a compound string to be compared with s1 ...
XmStringCompareBoolean00tbXmStrings1XmString  s1,	// Specifies a compound string to be compared with s2 ...tbXmStrings2XmString  s2	// Specifies a compound string to be compared with s1 ...
XmStringConcatXmString00tbXmStrings1XmString  s1,	// Specifies  the  compound string to which a copy of ...tbXmStrings2XmString  s2	// is appended ...
XmStringCopyXmString00tbXmStrings1XmString  s1	// Specifies the compound string to be copied ...
XmStringCreateXmString00tbchar      *textchar      *text,	// Specifies  a  null-terminated string to be used as ...tbchar      *tagchar      *tag	// Specifies the font list element tag to be   ...
XmStringCreateLocalizedXmString00tbchar *textchar *text	// Specifies a null-terminated string of text encoded ...
XmStringCreateLtoRXmString00tbchar   *textchar   *text,	// Specifies a null-terminated string to be  used  as ...tbchar   *tagchar   *tag	// Specifies  the font list element tag to be  ...
XmStringCreateSimpleXmString00tbchar   *textchar   * text	// Specifies  a  null-terminated string to be used as ...
XmStringDirectionCreateXmString00tbXmStringDirectiondirectionXmStringDirection direction	// Specifies the value of the directional component ...
XmStringDrawvoid00tbDisplay   *dDisplay   * d,	// Specifies the display.tbWindowwWindow    w,	// Specifies the window.tbXmFontListfontlistXmFontList fontlist,	// Specifies the font list.tbXmStringstringXmString  string,	// Specifies the string.tbGCgcGC        gc,	// Specifies the graphics context to use.tbPositionxPosition  x,	// Specifies  a coordinate of the rectangle that ...tbPositionyPosition  y,	// Specifies a coordinate of the rectangle  that ...tbDimensionwidthDimension width,	// Specifies  the  width  of  the rectangle that ...tbunsigned charalignmentunsigned char alignment,	// Specifies how  the  string  will  be  aligned ...tbunsigned charlayout_directionunsigned char layout_direction,	// Controls  the direction in which the segments ...tbXRectangle*clipXRectangle* clip	// Allows the application to restrict  the  area ...
XmStringDrawImagevoid00tbDisplay   *dDisplay   * d,	// Specifies the display.tbWindowwWindow    w,	// Specifies the window.tbXmFontListfontlistXmFontList fontlist,	// Specifies the font list.tbXmStringstringXmString  string,	// Specifies the string.tbGCgcGC        gc,	// Specifies the graphics context to use.tbPositionxPosition  x,	// Specifies a coordinate of the rectangle  that ...tbPositionyPosition  y,	// Specifies  a coordinate of the rectangle that ...tbDimensionwidthDimension width,	// Specifies the width  of  the  rectangle  that ...tbunsigned charalignmentunsigned char alignment,	// Specifies  how  the  string  will  be aligned ...tbunsigned charlayout_directionunsigned char layout_direction,	// Controls the direction in which the  segments ...tbXRectangle*clipXRectangle* clip	// Allows  the  application to restrict the area ...
XmStringDrawUnderlinevoid00tbDisplay   *dDisplay   * d,	// Specifies the display.tbWindowwWindow    w,	// Specifies the window.tbXmFontListfontlistXmFontList fontlist,	// Specifies the font list.tbXmStringstringXmString  string,	// Specifies the string.tbGCgcGC        gc,	// Specifies the graphics context to use.tbPositionxPosition  x,	// Specifies a coordinate of the rectangle  that ...tbPositionyPosition  y,	// Specifies  a coordinate of the rectangle that ...tbDimensionwidthDimension width,	// Specifies the width  of  the  rectangle  that ...tbunsigned charalignmentunsigned char alignment,	// Specifies  how  the  string  will  be aligned ...tbunsigned charlayout_directionunsigned char layout_direction,	// Controls the direction in which the  segments ...tbXRectangle*clipXRectangle* clip,	// Allows  the  application to restrict the area ...tbXmStringunderlineXmString  underline	// Specifies the substring to be underlined.
XmStringEmptyBoolean00tbXmStrings1XmString  s1	// Specifies the compound string ...
XmStringExtentvoid00tbXmFontListfontlistXmFontList fontlist,	// Specifies the font list ...tbXmStringstringXmString  string,	// Specifies the string ...tbDimension *widthDimension *width,	// Specifies a pointer to the width of the rectangle ...tbDimension *heightDimension *height	// Specifies a pointer to the height of the rectangle ...
XmStringFreevoid00tbXmStringstringXmString  string	// Specifies the compound string to be freed ...
XmStringFreeContextvoid00tbXmStringContextcontextXmStringContext context	// Specifies  the  string  context structure that was ...
XmStringGetLtoRBoolean00tbXmStringstringXmString  string,	// Specifies the compound string.tbXmStringCharSettagXmStringCharSet tag,	// Specifies the font  list  element  tag  associated ...tbchar      **textchar      **text	// Specifies a pointer to a null terminated string.
XmStringGetNextComponentXmStringComponentType00tbXmStringContextcontextXmStringContext     context,	// Specifies the string context structure  which ...tbchar                **textchar                **text,	// Specifies a  pointer  to  a  null  terminated ...tbXmStringCharSet     *tagXmStringCharSet     *tag,	// Specifies  a pointer to the font list element ...tbXmStringDirection   *directionXmStringDirection   *direction,	// Specifies a pointer to the direction  of  the ...tbXmStringComponentType*unknown_tagXmStringComponentType*unknown_tag,	// Specifies  a pointer to the tag of an unknown ...tbunsigned short      *unknown_lengthunsigned short      *unknown_length,	// Specifies a  pointer  to  the  length  of  an ...tbunsigned char       **unknown_valueunsigned char       **unknown_value	// Specifies  a  pointer  to  the  value  of  an ...
XmStringGetNextSegmentBoolean00tbXmStringContextcontextXmStringContext context,	// Specifies the string context structure which was ...tbchar           **textchar           **text,	// Specifies a pointer to a null terminated string.tbXmStringCharSet*tagXmStringCharSet*tag,	// Specifies a pointer to the font list element tag ...tbXmStringDirection*directionXmStringDirection*direction,	// Specifies a pointer  to  the  direction  of  the ...tbBoolean        *separatorBoolean        *separator	// Specifies whether the next component of the  ...
XmStringHasSubstringBoolean00tbXmStringstringXmString  string,	// is contained within another.tbXmStringsubstringXmString  substring	// Specifies the compound string to be searched for ...
XmStringHeightDimension00tbXmFontListfontlistXmFontList fontlist,	// Specifies the font list ...tbXmStringstringXmString  string	// Specifies the string ...
XmStringInitContextBoolean00tbXmStringContext*contextXmStringContext* context,	// Specifies a pointer to the allocated context ...tbXmStringstringXmString    string	// Specifies the string.
XmStringLengthint00tbXmStrings1XmString  s1	// Specifies the compound string ...
XmStringLineCountint00tbXmStringstringXmString  string	// Specifies the string.
XmStringNConcatXmString00tbXmStrings1XmString  s1,	// Specifies  the  compound string to which a copy of ...tbXmStrings2XmString  s2,	// to  the end of s1, including tags, ...tbintnum_bytesint       num_bytes	// Specifies  the  number of bytes of s2 to append to ...
XmStringNCopyXmString00tbXmStrings1XmString  s1,	// Specifies the compound string.tbintnum_bytesint       num_bytes	// Specifies  the  number of bytes of s1 to copy.
XmStringPeekNextComponentXmStringComponentType00tbXmStringContextcontextXmStringContext context	// Specifies the string context  structure  that  was ...
XmStringSegmentCreateXmString00tbchar        *textchar        * text,	// Specifies  a  null-terminated string to be used as ...tbchar        *tagchar        *tag,	// Specifies the font list element tag to be   ...tbXmStringDirectiondirectionXmStringDirection direction,	// Specifies the direction of the text.tbBooleanseparatorBoolean     separator	// Specifies  separator addition.
XmStringSeparatorCreateXmString00
XmStringWidthDimension00tbXmFontListfontlistXmFontList fontlist,	// Specifies the font list ...tbXmStringstringXmString  string	// Specifies the string ...
XmTargetsAreCompatibleBoolean00tbDisplay   *displayDisplay   *display,	// Specifies the display connection.tbAtom      *export_targetsAtom      *export_targets,	// Specifies the list of target atoms associated with ...tbCardinalnum_export_targetsCardinal  num_export_targets,	// Specifies  the  number  of  entries in the list of ...tbAtom      *import_targetsAtom      *import_targets,	// Specifies  the  list  of  targets  to  be  checked ...tbCardinalnum_import_targetsCardinal  num_import_targets	// Specifies the number of entries in the  ...
XmTextClearSelectionvoid00tbWidgetwidgetWidget    widget,	// Specifies the Text widget ID.tbTimetimeTime      time	// Specifies  the  server time at which the selection ...
XmTextCopyBoolean00tbWidgetwidgetWidget    widget,	// Specifies the Text widget ID.tbTimetimeTime      time	// Specifies  the  server time at which the selection ...
XmTextCutBoolean00tbWidgetwidgetWidget    widget,	// Specifies the Text widget ID.tbTimetimeTime      time	// Specifies the server time at which  the  selection ...
XmTextDisableRedisplayvoid00tbWidgetwidgetWidget      widget	// Specifies the Text widget ID ...
XmTextEnableRedisplayvoid00tbWidgetwidgetWidget      widget	// to update its visual display.
XmTextFieldClearSelectionvoid00tbWidgetwidgetWidget    widget,	// Specifies the TextField widget ID.tbTimetimeTime      time	// Specifies the time at which the selection value is ...
XmTextFieldCopyBoolean00tbWidgetwidgetWidget    widget,	// Specifies the TextField widget ID.tbTimetimeTime      time	// Specifies the time at which the selection value is ...
XmTextFieldCutBoolean00tbWidgetwidgetWidget    widget,	// Specifies the TextField widget ID.tbTimetimeTime      time	// Specifies the time at which the selection value is ...
XmTextFieldGetBaselineint00tbWidgetwidgetWidget    widget	// Specifies the TextField widget ID ...
XmTextFieldGetEditableBoolean00tbWidgetwidgetWidget    widget	// Specifies the TextField widget ID ...
XmTextFieldGetInsertionPositionXmTextPosition00tbWidgetwidgetWidget    widget	// Specifies the TextField widget ID ...
XmTextFieldGetLastPositionXmTextPosition00tbWidgetwidgetWidget    widget	// Specifies the TextField widget ID ...
XmTextFieldGetMaxLengthint00tbWidgetwidgetWidget    widget	// Specifies the TextField widget ID ...
XmTextFieldGetSelectionchar *00tbWidgetwidgetWidget    widget	// Specifies the TextField widget ID ...
XmTextFieldGetSelectionPositionBoolean00tbWidgetwidgetWidget    widget,	// Specifies the TextField widget ID ...tbXmTextPosition*leftXmTextPosition*left,	// Specifies the pointer in which the position of the ...tbXmTextPosition*rightXmTextPosition*right	// position of the primary selection in the text buffer ...
XmTextFieldGetSelectionWcswchar_t *00tbWidgetwidgetWidget    widget	// Specifies the TextField widget ID ...
XmTextFieldGetStringchar *00tbWidgetwidgetWidget    widget	// Specifies the TextField widget ID ...
XmTextFieldGetStringWcswchar_t *00tbWidgetwidgetWidget    widget	// Specifies the TextField widget ID ...
XmTextFieldGetSubstringint00tbWidgetwidgetWidget      widget,	// Specifies the TextField widget ID.tbXmTextPositionstartXmTextPosition start,	// position  in the internal text buffer into a buffer ...tbintnum_charsint         num_chars,	// Specifies  the number of characters to be copied ...tbintbuffer_sizeint         buffer_size,	// = (num_chars * MB_CUR_MAX) + 1 ...tbchar        *bufferchar        *buffer	// should be large enough to contain the substring  to ...
XmTextFieldGetSubstringWcsint00tbWidgetwidgetWidget      widget,	// Specifies the TextField widget ID.tbXmTextPositionstartXmTextPosition start,	// Specifies  the beginning character position from ...tbintnum_charsint         num_chars,	// Specifies the number of wchar_t characters to be ...tbintbuffer_sizeint         buffer_size,	// Specifies the size of the supplied buffer  as  a ...tbwchar_t     *bufferwchar_t     *buffer	// Specifies the wide character buffer  into  which ...
XmTextFieldInsertvoid00tbWidgetwidgetWidget      widget,	// Specifies the TextField widget ID ...tbXmTextPositionpositionXmTextPosition position,	// Specifies  the  position  in the text string where ...tbchar        *valuechar        * value	// Specifies the character string value to  be  added ...
XmTextFieldInsertWcsvoid00tbWidgetwidgetWidget         widget,	// Specifies the TextField widget ID ...tbXmTextPositionpositionXmTextPosition position,	// Specifies  the  position  in the text string where ...tbwchar_t        *wcstringwchar_t        *wcstring	// Specifies the wide character string  value  to  be ...
XmTextFieldPasteBoolean00tbWidgetwidgetWidget    widget	// Specifies the TextField widget ID.
XmTextFieldPosToXYBoolean00tbWidgetwidgetWidget    widget,	// Specifies the TextField widget ID ...tbXmTextPositionpositionXmTextPosition position,	// Specifies the character position in the  text  for ...tbPosition  *xPosition  *x,	// Specifies the pointer in  which  the  x  position, ...tbPosition  *yPosition  *y	// Specifies  the  pointer  in  which the y position, ...
XmTextFieldRemoveBoolean00tbWidgetwidgetWidget    widget	// Specifies the TextField widget ID.
XmTextFieldReplacevoid00tbWidgetwidgetWidget      widget,	// Specifies the TextField widget ID ...tbXmTextPositionfrom_posXmTextPosition from_pos,	// Specifies  the  start  position  of the text to be ...tbXmTextPositionto_posXmTextPosition to_pos,	// Specifies the end  position  of  the  text  to  be ...tbchar        *valuechar        * value	// Specifies  the  character string value to be added ...
XmTextFieldReplaceWcsvoid00tbWidgetwidgetWidget      widget,	// Specifies the TextField widget ID ...tbXmTextPositionfrom_posXmTextPosition from_pos,	// Specifies  the  start position of the text to be ...tbXmTextPositionto_posXmTextPosition to_pos,	// Specifies the end position of  the  text  to  be ...tbwchar_t     *wcstringwchar_t     *wcstring	// Specifies  the wide character string value to be ...
XmTextFieldSetAddModevoid00tbWidgetwidgetWidget    widget,	// Specifies the TextField widget ID ...tbBooleanstateBoolean   state	// Specifies  whether  or  not  the  widget is in Add ...
XmTextFieldSetEditablevoid00tbWidgetwidgetWidget    widget,	// Specifies the TextField widget ID ...tbBooleaneditableBoolean   editable	// Specifies a Boolean value that  when  True  allows ...
XmTextFieldSetHighlightvoid00tbWidgetwidgetWidget    widget,	// Specifies the TextField widget ID ...tbXmTextPositionleftXmTextPosition left,	// Specifies the position of  the  left  boundary  of ...tbXmTextPositionrightXmTextPosition right,	// Specifies  the  position  of the right boundary of ...tbXmHighlightModemodeXmHighlightMode mode	// Specifies the type of highlighting to be done.
XmTextFieldSetInsertionPositionvoid00tbWidgetwidgetWidget    widget,	// Specifies the TextField widget ID ...tbXmTextPositionpositionXmTextPosition position	// of the TextField widget.
XmTextFieldSetMaxLengthvoid00tbWidgetwidgetWidget    widget,	// Specifies the TextField widget ID ...tbintmax_lengthint       max_length	// Specifies the maximum allowable length of the text ...
XmTextFieldSetSelectionvoid00tbWidgetwidgetWidget      widget,	// Specifies the TextField widget ID ...tbXmTextPositionfirstXmTextPosition first,	// Marks  the first character position of the text to ...tbXmTextPositionlastXmTextPosition last,	// Marks the last position of the text to be selected ...tbTimetimeTime        time	// Specifies the time at which the selection value is ...
XmTextFieldSetStringvoid00tbWidgetwidgetWidget    widget,	// Specifies the TextField widget ID ...tbchar      *valuechar      * value	// Specifies the  character  pointer  to  the  string ...
XmTextFieldSetStringWcsvoid00tbWidgetwidgetWidget    widget,	// Specifies the TextField widget ID ...tbwchar_t   *wcstringwchar_t   *wcstring	// Specifies the  wide  character  string  value  and ...
XmTextFieldShowPositionvoid00tbWidgetwidgetWidget    widget,	// Specifies the TextField widget ID ...tbXmTextPositionpositionXmTextPosition position	// Specifies  the character position to be displayed.
XmTextFieldXYToPosXmTextPosition00tbWidgetwidgetWidget    widget,	// Specifies the TextField widget ID ...tbPositionxPosition  x,	// Specifies the x position, ...tbPositionyPosition  y	// Specifies  the  y  position, ...
XmTextFindStringBoolean00tbWidgetwidgetWidget      widget,	// Specifies the Text widget ID.tbXmTextPositionstartXmTextPosition start,	// Specifies  the  character  position from which the ...tbchar        *stringchar        *string,	// in position.tbXmTextDirectiondirectionXmTextDirection direction,	// Indicates the search direction.tbXmTextPosition*positionXmTextPosition*position	// Specifies the pointer in which the first character ...
XmTextFindStringWcsBoolean00tbWidgetwidgetWidget      widget,	// Specifies the Text widget ID.tbXmTextPositionstartXmTextPosition start,	// Specifies  the  character  position from which the ...tbwchar_t     *wcstringwchar_t     *wcstring,	// Specifies the wide character search string.tbXmTextDirectiondirectionXmTextDirection direction,	// Indicates the search direction.tbXmTextPosition*positionXmTextPosition*position	// Specifies the pointer in which the first character ...
XmTextGetBaselineint00tbWidgetwidgetWidget    widget	// Specifies the Text widget ID ...
XmTextGetEditableBoolean00tbWidgetwidgetWidget    widget	// Specifies the Text widget ID ...
XmTextGetInsertionPositionXmTextPosition00tbWidgetwidgetWidget    widget	// Specifies the Text widget ID ...
XmTextGetLastPositionXmTextPosition00tbWidgetwidgetWidget    widget	// Specifies the Text widget ID ...
XmTextGetMaxLengthint00tbWidgetwidgetWidget    widget	// Specifies the Text widget ID ...
XmTextGetSelectionchar *00tbWidgetwidgetWidget    widget	// Specifies the Text widget ID ...
XmTextGetSelectionPositionBoolean00tbWidgetwidgetWidget    widget,	// Specifies the Text widget ID ...tbXmTextPosition*leftXmTextPosition*left,	// Specifies the pointer in which the position of the ...tbXmTextPosition*rightXmTextPosition*right	// Specifies the pointer in which the position of the ...
XmTextGetSelectionWcswchar_t *00tbWidgetwidgetWidget    widget	// Specifies the Text widget ID ...
XmTextGetSourceXmTextSource00tbWidgetwidgetWidget    widget	// Specifies the Text widget ID ...
XmTextGetStringchar *00tbWidgetwidgetWidget    widget	// Specifies the Text widget ID ...
XmTextGetStringWcswchar_t *00tbWidgetwidgetWidget    widget	// Specifies the Text widget ID ...
XmTextGetSubstringint00tbWidgetwidgetWidget      widget,	// Specifies the Text widget ID.tbXmTextPositionstartXmTextPosition start,	// Specifies  the beginning character position from ...tbintnum_charsint         num_chars,	// Specifies  the number of characters to be copied ...tbintbuffer_sizeint         buffer_size,	// = (num_chars * MB_CUR_MAX) + 1 ...tbchar        *bufferchar        *buffer	// should be large enough to contain the substring  to ...
XmTextGetSubstringWcsint00tbWidgetwidgetWidget      widget,	// Specifies the Text widget ID.tbXmTextPositionstartXmTextPosition start,	// Specifies the beginning character position  from ...tbintnum_charsint         num_chars,	// Specifies the number of wchar_t characters to be ...tbintbuffer_sizeint         buffer_size,	// Specifies  the  size of the supplied buffer as a ...tbwchar_t     *bufferwchar_t     *buffer	// Specifies  the  wide character buffer into which ...
XmTextGetTopCharacterXmTextPosition00tbWidgetwidgetWidget    widget	// Specifies the Text widget ID ...
XmTextInsertvoid00tbWidgetwidgetWidget         widget,	// Specifies the Text widget ID.tbXmTextPositionpositionXmTextPosition position,	// Specifies the position in the  text  string  where ...tbchar           *valuechar           * value	// Specifies  the  character string value to be added ...
XmTextInsertWcsvoid00tbWidgetwidgetWidget         widget,	// Specifies the Text widget ID ...tbXmTextPositionpositionXmTextPosition position,	// Specifies  the  position  in the text string where ...tbwchar_t        *wcstringwchar_t        *wcstring	// Specifies the wide character string  value  to  be ...
XmTextPasteBoolean00tbWidgetwidgetWidget    widget	// Specifies the Text widget ID.
XmTextPosToXYBoolean00tbWidgetwidgetWidget    widget,	// Specifies the Text widget ID ...tbXmTextPositionpositionXmTextPosition position,	// Specifies the character position in the  text  for ...tbPosition  *xPosition  *x,	// Specifies the pointer in  which  the  x  position, ...tbPosition  *yPosition  *y	// Specifies  the  pointer  in  which the y position, ...
XmTextRemoveBoolean00tbWidgetwidgetWidget    widget	// Specifies the Text widget ID.
XmTextReplacevoid00tbWidgetwidgetWidget      widget,	// Specifies the Text widget ID ...tbXmTextPositionfrom_posXmTextPosition from_pos,	// Specifies the start position of  the  text  to  be ...tbXmTextPositionto_posXmTextPosition to_pos,	// Specifies  the  end  position  of  the  text to be ...tbchar        *valuechar        * value	// Specifies the character string value to  be  added ...
XmTextReplaceWcsvoid00tbWidgetwidgetWidget      widget,	// Specifies the Text widget ID ...tbXmTextPositionfrom_posXmTextPosition from_pos,	// Specifies the start position of the text  to  be ...tbXmTextPositionto_posXmTextPosition to_pos,	// Specifies  the  end  position  of the text to be ...tbwchar_t     *wcstringwchar_t     *wcstring	// Specifies the wide character string value to  be ...
XmTextScrollvoid00tbWidgetwidgetWidget      widget,	// Specifies the Text widget ID ...tbintlinesint         lines	// Specifies  the  number of lines of text to scroll.
XmTextSetAddModevoid00tbWidgetwidgetWidget    widget,	// Specifies the Text widget ID ...tbBooleanstateBoolean   state	// Specifies  whether  or  not  the  widget is in Add ...
XmTextSetEditablevoid00tbWidgetwidgetWidget    widget,	// Specifies the Text widget ID ...tbBooleaneditableBoolean   editable	// Specifies a Boolean value that  when  True  allows ...
XmTextSetHighlightvoid00tbWidgetwidgetWidget    widget,	// Specifies the Text widget ID ...tbXmTextPositionleftXmTextPosition left,	// Specifies  the  position  of  the left boundary of ...tbXmTextPositionrightXmTextPosition right,	// Specifies the position of the  right  boundary  of ...tbXmHighlightModemodeXmHighlightMode mode	// Specifies  the type of highlighting to be done.
XmTextSetInsertionPositionvoid00tbWidgetwidgetWidget    widget,	// Specifies the Text widget ID ...tbXmTextPositionpositionXmTextPosition position	// Specifies  the  position  of the insertion cursor.
XmTextSetMaxLengthvoid00tbWidgetwidgetWidget    widget,	// Specifies the Text widget ID ...tbintmax_lengthint       max_length	// Specifies the maximum allowable length of the text ...
XmTextSetSelectionvoid00tbWidgetwidgetWidget      widget,	// Specifies the Text widget ID ...tbXmTextPositionfirstXmTextPosition first,	// Marks  the first character position of the text to ...tbXmTextPositionlastXmTextPosition last,	// Marks the last position of the text to be selected ...tbTimetimeTime        time	// Specifies the time at which the selection value is ...
XmTextSetSourcevoid00tbWidgetwidgetWidget    widget,	// is reflected in another.tbXmTextSourcesourceXmTextSource source,	// of  one  widget so that it can share the source of ...tbXmTextPositiontop_characterXmTextPosition top_character,	// Specifies the position in the text to  display  at ...tbXmTextPositioncursor_positionXmTextPosition cursor_position	// Specifies  the  position  in the text at which the ...
XmTextSetStringvoid00tbWidgetwidgetWidget    widget,	// Specifies the Text widget ID ...tbchar      *valuechar      * value	// Specifies  the  character  pointer  to  the string ...
XmTextSetStringWcsvoid00tbWidgetwidgetWidget    widget,	// Specifies the Text widget ID ...tbwchar_t   *wcstringwchar_t   *wcstring	// Specifies the  wide  character  string  value  and ...
XmTextSetTopCharactervoid00tbWidgetwidgetWidget    widget,	// Specifies the Text widget ID ...tbXmTextPositiontop_characterXmTextPosition top_character	// is displayed at the top of the widget  ...
XmTextShowPositionvoid00tbWidgetwidgetWidget    widget,	// Specifies the Text widget ID ...tbXmTextPositionpositionXmTextPosition position	// Specifies  the character position to be displayed.
XmTextXYToPosXmTextPosition00tbWidgetwidgetWidget    widget,	// Specifies the Text widget ID ...tbPositionxPosition  x,	// Specifies the x position, ...tbPositionyPosition  y	// Specifies  the  y  position, ...
XmToggleButtonGadgetGetStateBoolean00tbWidgetwidgetWidget    widget	// Specifies the ToggleButtonGadget ID ...
XmToggleButtonGadgetSetStatevoid00tbWidgetwidgetWidget    widget,	// Specifies the ToggleButtonGadget widget ID.tbBooleanstateBoolean   state,	// Specifies  a  Boolean value that indicates whether ...tbBooleannotifyBoolean   notify	// Indicates   whether   XmNvalueChangedCallback   is ...
XmToggleButtonGetStateBoolean00tbWidgetwidgetWidget    widget	// Specifies the ToggleButton widget ID ...
XmToggleButtonSetStatevoid00tbWidgetwidgetWidget    widget,	// Specifies the ToggleButton widget ID.tbBooleanstateBoolean   state,	// Specifies  a  Boolean value that indicates whether ...tbBooleannotifyBoolean   notify	// Indicates   whether   XmNvalueChangedCallback   is ...
XmTrackingEventWidget00tbWidgetwidgetWidget    widget,	// Specifies the widget ID of a widget to use as  the ...tbCursorcursorCursor    cursor,	// Specifies  the  cursor  to be used for the pointer ...tbBooleanconfine_toBoolean   confine_to,	// Specifies whether or not the cursor should be  ...tbXEvent    *event_returnXEvent    *event_return	// Returns the ButtonRelease or KeyRelease event that ...
XmTrackingLocateWidget00tbWidgetwidgetWidget    widget,	// Specifies the widget ID of a widget to use as  the ...tbCursorcursorCursor    cursor,	// Specifies  the  cursor  to be used for the pointer ...tbBooleanconfine_toBoolean   confine_to	// Specifies whether or not the cursor should be  ...
XmTranslateKeyvoid00tbDisplay   *displayDisplay   *display,	// Specifies  the  display  that  the keycode is ...tbKeyCodekeycodeKeyCode   keycode,	// Specifies the keycode to translate ...tbModifiersmodifiersModifiers modifiers,	// Specifies the modifier keys to be applied  to ...tbModifiers *modifiers_returnModifiers *modifiers_return,	// Specifies  a  mask of the modifier keys  ...tbKeySym    *keysym_returnKeySym    *keysym_return	// Specifies a pointer to the resulting keysym ...
XmUninstallImageBoolean00tbXImage    *imageXImage    * image	// Points to the image structure given to  the   ...
XmUpdateDisplayvoid00tbWidgetwidgetWidget    widget	// Specifies any widget or gadget.
XmVaCreateSimpleCheckBoxWidget00tbWidgetparentWidget    parent,	// Specifies the parent widget ID.tbStringnameString    name,	// of each button is button_n, ...tbXtCallbackProccallbackXtCallbackProc callback	// Specifies a callback procedure to be called when a ...
XmVaCreateSimpleMenuBarWidget00tbWidgetparentWidget    parent,	// Specifies the parent widget ID ...tbStringnameString    name	// Specifies the name of the created widget ...
XmVaCreateSimpleOptionMenuWidget00tbWidgetparentWidget    parent,	// Specifies the parent widget ID ...tbStringnameString    name,	// Specifies the name of the created widget ...tbXmStringoption_labelXmString  option_label,	// Specifies  the label string to be used on the left ...tbKeySymoption_mnemonicKeySym    option_mnemonic,	// Specifies a keysym for a key that, ...tbintbutton_setint       button_set,	// Specifies which PushButtonGadget is initially set.tbXtCallbackProccallbackXtCallbackProc callback	// Specifies a callback procedure to be called when a ...
XmVaCreateSimplePopupMenuWidget00tbWidgetparentWidget    parent,	// Specifies the widget  ID  of  the  parent  of  the ...tbStringnameString    name,	// Specifies the name of the created widget ...tbXtCallbackProccallbackXtCallbackProc callback	// Specifies a callback procedure to be called when a ...
XmVaCreateSimplePulldownMenuWidget00tbWidgetparentWidget    parent,	// Specifies  the  widget  ID  of  the  parent of the ...tbStringnameString    name,	// Specifies the name of the created widget.tbintpost_from_buttonint       post_from_button,	// Specifies the CascadeButton or CascadeButtonGadget ...tbXtCallbackProccallbackXtCallbackProc callback	// Specifies a callback procedure to be called when a ...
XmVaCreateSimpleRadioBoxWidget00tbWidgetparentWidget    parent,	// Specifies the parent widget ID.tbStringnameString    name,	// Specifies the name of the created widget.tbintbutton_setint       button_set,	// Specifies which  button  is  initially  set.tbXtCallbackProccallbackXtCallbackProc callback	// Specifies a callback procedure to be called when a ...
XmWidgetGetBaselinesBoolean00tbWidgetwidgetWidget      widget,	// Specifies the ID of the widget for which  baseline ...tbDimension   **baselinesDimension   **baselines,	// Returns  an  array that contains the value of each ...tbint         *line_countint         *line_count	// Returns the number of lines in the widget ...
XmWidgetGetDisplayRectBoolean00tbWidgetwidgetWidget    widget,	// Specifies the widget ID ...tbXRectangle*displayrectXRectangle*displayrect	// Specifies a pointer to an  XRectangle  structure ...
